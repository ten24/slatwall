{"version":3,"sources":["components/Account/AccountContent/AccountContent.js","components/Account/AccountAddresses/AccountAddresses.js"],"names":["AccountContent","history","useHistory","loc","useLocation","useSelector","state","content","pathname","substring","customBody","contentTitle","className","onClick","event","preventDefault","target","getAttribute","push","dangerouslySetInnerHTML","__html","Address","props","accountAddressID","address","streetAddress","addressID","city","stateCode","postalCode","isPrimary","MySwal","withReactContent","Swal","dispatch","useDispatch","t","useTranslation","to","data-toggle","type","fire","icon","title","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","then","data","isConfirmed","deleteAccountAddress","connect","userReducer","primaryAddress","accountAddresses","map","index"],"mappings":"qGAAA,0BA8BeA,IA3BQ,WACrB,IAAIC,EAAUC,cACVC,EAAMC,cAFiB,EAGXC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQJ,EAAIK,SAASC,UAAU,QAChB,GAJ/B,IAInBC,kBAJmB,MAIN,GAJM,MAIFC,oBAJE,MAIa,GAJb,EAK3B,OACE,qCACE,qBAAKC,UAAU,iFAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,oBAAIA,UAAU,KAAd,SAAoBD,QAIxB,qBACEE,QAAS,SAAAC,GACPA,EAAMC,iBACFD,EAAME,OAAOC,aAAa,SAC5BhB,EAAQiB,KAAKJ,EAAME,OAAOC,aAAa,UAG3CE,wBAAyB,CACvBC,OAAQV,U,sJCbZW,EAAU,SAAAC,GAAU,IAChBC,EAA8BD,EAA9BC,iBAAkBC,EAAYF,EAAZE,QAClBC,EAAqED,EAArEC,cAAeC,EAAsDF,EAAtDE,UAAWC,EAA2CH,EAA3CG,KAAMC,EAAqCJ,EAArCI,UAAWC,EAA0BL,EAA1BK,WAAYC,EAAcN,EAAdM,UACzDC,EAASC,IAAiBC,KAC1BC,EAAWC,cACTC,EAAMC,cAAND,EAER,OACE,+BACE,qBAAIxB,UAAU,oBAAd,oBACMa,EADN,YACuBE,EADvB,YAC+BC,EAD/B,YAC4CC,GAD5C,IAC2DC,GAAa,sBAAMlB,UAAU,qCAAhB,SAAsDwB,EAAE,8BAEhI,qBAAIxB,UAAU,oBAAd,UACE,cAAC,IAAD,CACEA,UAAU,sBACV0B,GAAI,CACF9B,SAAS,yBAAD,OAA2BkB,GACnCpB,MAAM,eAAMgB,IAEdiB,cAAY,UANd,SAQE,mBAAG3B,UAAU,kBAEf,wBACE4B,KAAK,SACL5B,UAAU,0CACVC,QAAS,WACPkB,EAAOU,KAAK,CACVC,KAAM,OACNC,MAAO,4BAAIP,EAAE,qCACbQ,iBAAiB,EACjBC,kBAAkB,EAClBC,cAAc,EACdC,kBAAmBX,EAAE,0BACpBY,MAAK,SAAAC,GACFA,EAAKC,aACPhB,EAASiB,YAAqB5B,QAbtC,SAkBE,mBAAGX,UAAU,8BA6CRwC,uBALf,SAAyB9C,GACvB,OAAOA,EAAM+C,cAIAD,EAtCU,SAAA9B,GAAU,IACzBgC,EAAsEhC,EAAtEgC,eAAgBC,EAAsDjC,EAAtDiC,iBAAkBZ,EAAoCrB,EAApCqB,MAAOjC,EAA6BY,EAA7BZ,WAAYC,EAAiBW,EAAjBX,aACrDyB,EAAMC,cAAND,EAER,OACE,eAAC,IAAD,CAAeO,MAAOA,EAAtB,UACE,cAAC,IAAD,CAAgBjC,WAAYA,EAAYC,aAAcA,IACtD,qBAAKC,UAAU,gCAAf,SACE,wBAAOA,UAAU,yBAAjB,UACE,gCACE,+BACE,6BAAKwB,EAAE,sCACP,6BAAKA,EAAE,gCAGX,gCACGmB,GACCA,EAAiBC,KAAI,SAAChC,EAASiC,GAC7B,OAAO,cAACpC,EAAD,2BAAyBG,GAAzB,IAAkCM,UAAWN,EAAQD,mBAAqB+B,EAAe/B,mBAA3EkC,aAK/B,oBAAI7C,UAAU,SACd,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB0B,GAAG,4BAArC,SACGF,EAAE","file":"static/js/24.f53d53e7.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst AccountContent = () => {\n  let history = useHistory()\n  let loc = useLocation()\n  const content = useSelector(state => state.content[loc.pathname.substring(1)])\n  const { customBody = '', contentTitle = '' } = content || {}\n  return (\n    <>\n      <div className=\"d-flex justify-content-between align-items-center pt-lg-2 pb-4 pb-lg-5 mb-lg-3\">\n        <div className=\"d-flex justify-content-between w-100\">\n          <h2 className=\"h3\">{contentTitle}</h2>\n        </div>\n      </div>\n\n      <div\n        onClick={event => {\n          event.preventDefault()\n          if (event.target.getAttribute('href')) {\n            history.push(event.target.getAttribute('href'))\n          }\n        }}\n        dangerouslySetInnerHTML={{\n          __html: customBody,\n        }}\n      />\n    </>\n  )\n}\nexport default AccountContent\n","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { connect, useDispatch } from 'react-redux'\nimport { AccountLayout } from '../AccountLayout/AccountLayout'\nimport AccountContent from '../AccountContent/AccountContent'\nimport { Link } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { deleteAccountAddress } from '../../../actions/userActions'\nimport { useTranslation } from 'react-i18next'\n\nconst Address = props => {\n  const { accountAddressID, address } = props\n  const { streetAddress, addressID, city, stateCode, postalCode, isPrimary } = address\n  const MySwal = withReactContent(Swal)\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n\n  return (\n    <tr>\n      <td className=\"py-3 align-middle\">\n        {`${streetAddress} ${city},${stateCode} ${postalCode}`} {isPrimary && <span className=\"align-middle badge badge-info ml-2\">{t('frontend.core.prinary')}</span>}\n      </td>\n      <td className=\"py-3 align-middle\">\n        <Link\n          className=\"nav-link-style mr-2\"\n          to={{\n            pathname: `/my-account/addresses/${addressID}`,\n            state: { ...props },\n          }}\n          data-toggle=\"tooltip\"\n        >\n          <i className=\"far fa-edit\"></i>\n        </Link>\n        <button\n          type=\"button\"\n          className=\"link-button nav-link-style text-primary\"\n          onClick={() => {\n            MySwal.fire({\n              icon: 'info',\n              title: <p>{t('frontend.account.address.remove')}</p>,\n              showCloseButton: true,\n              showCancelButton: true,\n              focusConfirm: false,\n              confirmButtonText: t('frontend.core.delete'),\n            }).then(data => {\n              if (data.isConfirmed) {\n                dispatch(deleteAccountAddress(accountAddressID))\n              }\n            })\n          }}\n        >\n          <i className=\"far fa-trash-alt\"></i>\n        </button>\n      </td>\n    </tr>\n  )\n}\n\nconst AccountAddresses = props => {\n  const { primaryAddress, accountAddresses, title, customBody, contentTitle } = props\n  const { t } = useTranslation()\n\n  return (\n    <AccountLayout title={title}>\n      <AccountContent customBody={customBody} contentTitle={contentTitle} />\n      <div className=\"table-responsive font-size-md\">\n        <table className=\"table table-hover mb-0\">\n          <thead>\n            <tr>\n              <th>{t('frontend.account.address.heading')}</th>\n              <th>{t('frontend.core.actions')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {accountAddresses &&\n              accountAddresses.map((address, index) => {\n                return <Address key={index} {...address} isPrimary={address.accountAddressID === primaryAddress.accountAddressID} />\n              })}\n          </tbody>\n        </table>\n      </div>\n      <hr className=\"pb-4\" />\n      <div className=\"text-sm-right\">\n        <Link className=\"btn btn-primary\" to=\"/my-account/addresses/new\">\n          {t('frontend.account.address.add')}\n        </Link>\n      </div>\n    </AccountLayout>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return state.userReducer\n}\n\nAccountAddresses.propTypes = {}\nexport default connect(mapStateToProps)(AccountAddresses)\n"],"sourceRoot":""}