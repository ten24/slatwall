{"version":3,"sources":["pages/Brand/BrandBanner.js","pages/Brand/Brand.js"],"names":["BrandBanner","brandName","imageFile","brandDescription","className","style","maxHeight","marginRight","customPath","src","alt","dangerouslySetInnerHTML","__html","Brand","props","path","location","pathname","split","reverse","loc","useLocation","params","queryString","parse","search","arrayFormat","arrayFormatSeparator","brandFilter","brand","history","useHistory","useGetEntity","brandResponse","setBrandRequest","useGetProductType","request","setRequest","productTypeBase","useSelector","state","configuration","filtering","productTypeUrl","useEffect","isFetching","isLoaded","urlTitle","makeRequest","entity","Object","keys","data","length","to","listen","Helmet","title","settings","brandHTMLTitleString","childProductTypes","onSelect","push","stringify","showProducts","Listing","preFilter","productType_id","productTypeID","hide"],"mappings":"6IAWeA,EAVK,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBAC3C,OACE,sBAAKC,UAAU,2DAAf,UACE,cAAC,IAAD,CAASC,MAAO,CAAEC,UAAW,QAASC,YAAa,QAAUC,WAAW,oCAAoCC,IAAKP,EAAWQ,IAAKT,IACjI,mBAAGU,wBAAyB,CAAEC,OAAQT,S,iEC0D7BU,UArDD,SAAAC,GAAU,IAAD,EACfC,EAAOD,EAAME,SAASC,SAASC,MAAM,KAAKC,UAC1CC,EAAMC,cACRC,EAASC,IAAYC,MAAMJ,EAAIK,OAAQ,CAAEC,YAAa,YAAaC,qBAAsB,MACvFC,EAAc,CAClBC,MAAOd,EAAK,IAERe,EAAUC,cAPK,EAQkBC,cARlB,mBAQhBC,EARgB,KAQDC,EARC,OAUSC,cAVT,mBAUdC,EAVc,KAULC,EAVK,KAWfC,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,UAAUJ,mBACrEK,EAAiBrB,EAAM,KAAWgB,EAWxC,OATAM,qBAAU,WACHR,EAAQS,YAAeT,EAAQU,UAClCT,EAAW,2BAAKD,GAAN,IAAeS,YAAY,EAAMC,UAAU,EAAOxB,OAAQ,CAAEyB,SAAUJ,GAAkBK,aAAa,KAE5Gf,EAAcY,YAAeZ,EAAca,UAC9CZ,EAAgB,2BAAKD,GAAN,IAAqBY,YAAY,EAAMC,UAAU,EAAOG,OAAQ,QAAS3B,OAAQ,CAAE,aAAcP,EAAK,IAAMiC,aAAa,OAEzI,CAACZ,EAASC,EAAYM,EAAgBT,EAAiBD,EAAelB,KAEpEqB,EAAQS,YAAcT,EAAQU,UAAiD,IAArCI,OAAOC,KAAKf,EAAQgB,MAAMC,OAChE,cAAC,IAAD,CAAUC,GAAG,UAEtBxB,EAAQyB,QAAO,SAAAvC,GACbM,EAASC,IAAYC,MAAMR,EAASS,OAAQ,CAAEC,YAAa,YAAaC,qBAAsB,MAC9FU,EAAW,2BAAKD,GAAN,IAAegB,KAAM,GAAIP,YAAY,EAAMC,UAAU,EAAOxB,OAAQ,CAAEyB,SAAUzB,EAAM,KAAWgB,GAAmBU,aAAa,QAI3I,eAAC,IAAD,WACGf,EAAca,UAAYb,EAAcmB,KAAKC,OAAS,GAAK,cAACG,EAAA,EAAD,CAAQC,MAAOxB,EAAcmB,KAAK,GAAGM,SAASC,wBACzG,UAAAvB,EAAQgB,KAAKQ,yBAAb,eAAgCP,QAAS,GACxC,cAAC,IAAD,CACED,KAAMhB,EAAQgB,KACdS,SAAU,SAAAd,GACRzB,EAAM,IAAUyB,EAChBjB,EAAQgC,KAAR,UAAgB1C,EAAIH,SAApB,YAAgCM,IAAYwC,UAAUzC,EAAQ,CAAEI,YAAa,eAIlFU,EAAQgB,KAAKY,cACZ,eAACC,EAAA,EAAD,CAAaC,UAAS,2BAAOtC,GAAP,IAAoBuC,eAAgB/B,EAAQgB,KAAKgB,gBAAiBC,KAAM,CAAC,cAAe,UAA9G,UACGpC,EAAca,UAAYb,EAAcmB,KAAKC,OAAS,GAAK,cAAC,EAAD,CAAapD,UAAWgC,EAAcmB,KAAK,GAAGnD,UAAWC,UAAW+B,EAAcmB,KAAK,GAAGlD,UAAWC,iBAAkB8B,EAAcmB,KAAK,GAAGjD,mBAAsB","file":"static/js/10.0fe3860e.chunk.js","sourcesContent":["import { SWImage } from '../../components'\nconst BrandBanner = ({ brandName, imageFile, brandDescription }) => {\n  return (\n    <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n      <SWImage style={{ maxHeight: '150px', marginRight: '50px' }} customPath=\"/custom/assets/images/brand/logo/\" src={imageFile} alt={brandName} />\n      <p dangerouslySetInnerHTML={{ __html: brandDescription }} />\n    </div>\n\n  )\n}\n\nexport default BrandBanner\n","import { Layout, ProductTypeList } from '../../components'\nimport BrandBanner from './BrandBanner'\nimport ListingPage from '../../components/Listing/Listing'\nimport { Redirect, useHistory, useLocation } from 'react-router'\nimport { useGetEntity, useGetProductType } from '../../hooks/useAPI'\nimport { useSelector } from 'react-redux'\nimport queryString from 'query-string'\nimport { useEffect } from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Brand = props => {\n  const path = props.location.pathname.split('/').reverse()\n  const loc = useLocation()\n  let params = queryString.parse(loc.search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n  const brandFilter = {\n    brand: path[0],\n  }\n  const history = useHistory()\n  let [brandResponse, setBrandRequest] = useGetEntity()\n\n  const [request, setRequest] = useGetProductType()\n  const productTypeBase = useSelector(state => state.configuration.filtering.productTypeBase)\n  const productTypeUrl = params['key'] || productTypeBase\n\n  useEffect(() => {\n    if (!request.isFetching && !request.isLoaded) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, params: { urlTitle: productTypeUrl }, makeRequest: true })\n    }\n    if (!brandResponse.isFetching && !brandResponse.isLoaded) {\n      setBrandRequest({ ...brandResponse, isFetching: true, isLoaded: false, entity: 'brand', params: { 'f:urlTitle': path[0] }, makeRequest: true })\n    }\n  }, [request, setRequest, productTypeUrl, setBrandRequest, brandResponse, path])\n\n  if (!request.isFetching && request.isLoaded && Object.keys(request.data).length === 0) {\n    return <Redirect to=\"/404\" />\n  }\n  history.listen(location => {\n    params = queryString.parse(location.search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n    setRequest({ ...request, data: {}, isFetching: true, isLoaded: false, params: { urlTitle: params['key'] || productTypeBase }, makeRequest: true })\n  })\n\n  return (\n    <Layout>\n      {brandResponse.isLoaded && brandResponse.data.length > 0 && <Helmet title={brandResponse.data[0].settings.brandHTMLTitleString} />}\n      {request.data.childProductTypes?.length > 0 && (\n        <ProductTypeList\n          data={request.data}\n          onSelect={urlTitle => {\n            params['key'] = urlTitle\n            history.push(`${loc.pathname}?${queryString.stringify(params, { arrayFormat: 'comma' })}`)\n          }}\n        />\n      )}\n      {request.data.showProducts && (\n        <ListingPage preFilter={{ ...brandFilter, productType_id: request.data.productTypeID }} hide={['productType', 'brands']}>\n          {brandResponse.isLoaded && brandResponse.data.length > 0 && <BrandBanner brandName={brandResponse.data[0].brandName} imageFile={brandResponse.data[0].imageFile} brandDescription={brandResponse.data[0].brandDescription} />}{' '}\n\n        </ListingPage>\n      )}\n    </Layout>\n  )\n}\n\nexport default Brand\n"],"sourceRoot":""}