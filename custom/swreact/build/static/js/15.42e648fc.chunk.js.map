{"version":3,"sources":["pages/Manufacturer/Manufacturer.js"],"names":["Manufacturer","history","useHistory","loc","useLocation","content","useSelector","state","pathname","substring","brandRoute","getBrandRoute","useState","currentPage","setPage","title","customBody","useGetEntity","request","setRequest","useEffect","didCancel","isFetching","isLoaded","entity","params","makeRequest","sortedList","data","filter","element","brandFeatured","sort","a","b","brandName","start","gridSize","end","className","onClick","event","preventDefault","target","getAttribute","push","dangerouslySetInnerHTML","__html","slice","map","brand","to","urlTitle","customPath","src","imageFile","alt","brandID","recordsCount","length","totalPages","Math","ceil"],"mappings":"wNA2FeA,UAnFM,WACnB,IAAIC,EAAUC,cACVC,EAAMC,cAGJC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAAQF,EAAIK,SAASC,UAAU,OACpEC,EAAaJ,YAAYK,KANN,EAOMC,mBAAS,GAPf,mBAOlBC,EAPkB,KAOLC,EAPK,OAQKT,GAAW,GAAjCU,EARiB,EAQjBA,MAAOC,EARU,EAQVA,WARU,EASGC,cATH,mBASpBC,EAToB,KASXC,EATW,KAWzBC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHKH,EAAQI,YAAeJ,EAAQK,UAAaF,GAC/CF,EAAW,2BAAKD,GAAN,IAAeI,YAAY,EAAMC,UAAU,EAAOC,OAAQ,QAASC,OAAQ,CAAE,SAAU,IAAK,eAAgB,GAAKC,aAAa,KAEnI,WACLL,GAAY,KAEb,CAACH,EAASC,IAEb,IAAMQ,EAAU,sBACXT,EAAQU,KACRC,QAAO,SAAAC,GACN,OAAiC,IAA1BA,EAAQC,iBAEhBC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,UAAY,GAAK,MALtC,YAMXjB,EAAQU,KACRC,QAAO,SAAAC,GACN,OAAiC,IAA1BA,EAAQC,iBAEhBC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,UAAY,GAAK,OAEhDC,EA7BiBC,IA6BRxB,EAAc,GACvByB,EAAMF,EA9BWC,GA+BvB,OACE,sBAAKE,UAAU,eAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,2DAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+CxB,GAAS,WAI9D,sBAAKwB,UAAU,kDAAf,UACE,qBACEA,UAAU,eACVC,QAAS,SAAAC,GACPA,EAAMC,iBACFD,EAAME,OAAOC,aAAa,SAC5B3C,EAAQ4C,KAAKJ,EAAME,OAAOC,aAAa,UAG3CE,wBAAyB,CACvBC,OAAQ/B,GAAc,MAGzBA,GAAc,uBACf,qBAAKuB,UAAU,eAAf,SACE,qBAAKA,UAAU,MAAf,SACGrB,EAAQK,UACPI,EAAWqB,MAAMZ,EAAOE,GAAKW,KAAI,SAAAC,GAC/B,OACE,qBAAyBX,UAAU,+CAAnC,SACE,eAAC,IAAD,CAAMA,UAAU,sFAAsFY,GAAE,WAAMzC,EAAN,YAAoBwC,EAAME,UAAlI,UACE,qBAAKb,UAAU,mCAAf,SACE,cAAC,IAAD,CAASA,UAAU,oBAAoBc,WAAW,oCAAoCC,IAAKJ,EAAMK,UAAWC,IAAKN,EAAMf,cAEzH,oBAAII,UAAU,UAAd,SAAyBW,EAAMf,gBALzBe,EAAMO,gBAY1B,qBAAKlB,UAAU,YAAf,SACE,cAAC,IAAD,CAAmBmB,aAAc/B,EAAWgC,OAAQ9C,YAAaA,EAAa+C,WAAYC,KAAKC,KAAKnC,EAAWgC,OAxEhGtB,IAwE0HvB,QAASA","file":"static/js/15.42e648fc.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { ListingPagination, SWImage } from '../../components'\nimport { useGetEntity } from '../../hooks'\nimport { Link } from 'react-router-dom'\nimport { getBrandRoute } from '../../selectors/configurationSelectors'\n\nconst Manufacturer = () => {\n  let history = useHistory()\n  let loc = useLocation()\n  const gridSize = 3\n  const countToDisplay = gridSize * 4\n  const content = useSelector(state => state.content[loc.pathname.substring(1)])\n  const brandRoute = useSelector(getBrandRoute)\n  const [currentPage, setPage] = useState(1)\n  const { title, customBody } = content || {}\n  let [request, setRequest] = useGetEntity()\n\n  useEffect(() => {\n    let didCancel = false\n    if (!request.isFetching && !request.isLoaded && !didCancel) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, entity: 'brand', params: { 'P:Show': 500, 'f:activeFlag': 1 }, makeRequest: true })\n    }\n    return () => {\n      didCancel = true\n    }\n  }, [request, setRequest])\n\n  const sortedList = [\n    ...request.data\n      .filter(element => {\n        return element.brandFeatured === true\n      })\n      .sort((a, b) => (a.brandName > b.brandName ? 1 : -1)),\n    ...request.data\n      .filter(element => {\n        return element.brandFeatured !== true\n      })\n      .sort((a, b) => (a.brandName > b.brandName ? 1 : -1)),\n  ]\n  const start = (currentPage - 1) * countToDisplay\n  const end = start + countToDisplay\n  return (\n    <div className=\"bg-light p-0\">\n      <div className=\"page-title-overlap bg-lightgray pt-4\">\n        <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n          <div className=\"order-lg-1 pr-lg-4 text-center\">\n            <h1 className=\"h3 text-dark mb-0 font-accent\">{title || ''}</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"container bg-light box-shadow-lg rounded-lg p-5\">\n        <div\n          className=\"content-body\"\n          onClick={event => {\n            event.preventDefault()\n            if (event.target.getAttribute('href')) {\n              history.push(event.target.getAttribute('href'))\n            }\n          }}\n          dangerouslySetInnerHTML={{\n            __html: customBody || '',\n          }}\n        />\n        {customBody && <hr />}\n        <div className=\"pb-4 pb-sm-5\">\n          <div className=\"row\">\n            {request.isLoaded &&\n              sortedList.slice(start, end).map(brand => {\n                return (\n                  <div key={brand.brandID} className=\"d-flex col-6 col-sm-4 col-md-3 col-lg-2 mb-4\">\n                    <Link className=\"card border-1 shadow-sm text-center d-flex flex-column rounded-lg hover-shadow-none\" to={`/${brandRoute}/${brand.urlTitle}`}>\n                      <div className=\"d-flex align-items-center flex-1\">\n                        <SWImage className=\"d-block w-100 p-2\" customPath=\"/custom/assets/images/brand/logo/\" src={brand.imageFile} alt={brand.brandName} />\n                      </div>\n                      <h2 className=\"h6 mx-1\">{brand.brandName}</h2>\n                    </Link>\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n        <div className=\"container\">\n          <ListingPagination recordsCount={sortedList.length} currentPage={currentPage} totalPages={Math.ceil(sortedList.length / countToDisplay)} setPage={setPage} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Manufacturer\n"],"sourceRoot":""}