{"version":3,"sources":["components/Account/AccountContent/AccountContent.js","components/Account/AccountPaymentMethods/PaymentMethodItem.js","components/Account/AccountPaymentMethods/AccountPaymentMethods.js"],"names":["AccountContent","history","useHistory","loc","useLocation","useSelector","state","content","pathname","substring","customBody","contentTitle","className","onClick","event","preventDefault","target","getAttribute","push","dangerouslySetInnerHTML","__html","PaymentMethodItem","props","accountPaymentMethodID","accountPaymentMethodName","nameOnCreditCard","isPrimary","creditCardType","expirationYear","activeFlag","expirationMonth","MySwal","withReactContent","Swal","dispatch","useDispatch","useTranslation","t","i18n","to","fire","icon","title","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","then","data","isConfirmed","deletePaymentMethod","data-toggle","data-original-title","AccountPaymentMethods","user","userReducer","primaryPaymentMethod","accountPaymentMethods","AccountLayout","map","card","index"],"mappings":"qGAAA,0BA8BeA,IA3BQ,WACrB,IAAIC,EAAUC,cACVC,EAAMC,cAFiB,EAGXC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQJ,EAAIK,SAASC,UAAU,QAChB,GAJ/B,IAInBC,kBAJmB,MAIN,GAJM,MAIFC,oBAJE,MAIa,GAJb,EAK3B,OACE,qCACE,qBAAKC,UAAU,iFAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,oBAAIA,UAAU,KAAd,SAAoBD,QAIxB,qBACEE,QAAS,SAAAC,GACPA,EAAMC,iBACFD,EAAME,OAAOC,aAAa,SAC5BhB,EAAQiB,KAAKJ,EAAME,OAAOC,aAAa,UAG3CE,wBAAyB,CACvBC,OAAQV,U,sJCsCHW,EAvDW,SAAAC,GAAU,IAC1BC,EAAuJD,EAAvJC,uBAAwBC,EAA+HF,EAA/HE,yBAA0BC,EAAqGH,EAArGG,iBADzB,EAC8HH,EAAnFI,iBAD3C,SAC8DC,EAAgEL,EAAhEK,eAA4BC,GAAoCN,EAAhDO,WAAgDP,EAApCM,gBAAgBE,EAAoBR,EAApBQ,gBACrIC,EAASC,IAAiBC,KAC1BC,EAAWC,cAHgB,EAIbC,cAAZC,EAJyB,EAIzBA,EAJyB,EAItBC,KAEX,OACE,+BACE,oBAAI1B,UAAU,oBAAd,SACE,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAMA,UAAU,uCAAhB,SAAwDe,IACvDH,EACAE,GAAa,sBAAMd,UAAU,qCAAhB,4BAIpB,oBAAIA,UAAU,oBAAd,SAAmCa,IACnC,oBAAIb,UAAU,oBAAd,mBAAsCkB,EAAtC,YAAyDF,KACzD,qBAAIhB,UAAU,oBAAd,UACE,cAAC,IAAD,CACEA,UAAU,sBACV2B,GAAI,CACF/B,SAAS,qBAAD,OAAuBe,GAC/BjB,MAAM,eAAMgB,IAJhB,SAOE,mBAAGV,UAAU,kBAEf,mBACEA,UAAU,8BACVC,QAAS,WACPkB,EAAOS,KAAK,CACVC,KAAM,OACNC,MAAO,4BAAIL,EAAE,4CACbM,iBAAiB,EACjBC,kBAAkB,EAClBC,cAAc,EACdC,kBAAmBT,EAAE,0BACpBU,MAAK,SAAAC,GACFA,EAAKC,aACPf,EAASgB,YAAoB3B,QAInC4B,cAAY,UACZT,MAAM,GACNU,sBAAoB,SAlBtB,SAoBE,mBAAGxC,UAAU,8BCXRyC,UApCe,WAC5B,IAAMC,EAAOjD,aAAY,SAAAC,GAAK,OAAIA,EAAMiD,eAChCC,EAAgDF,EAAhDE,qBAAsBC,EAA0BH,EAA1BG,sBAFI,EAGdrB,cAAZC,EAH0B,EAG1BA,EAH0B,EAGvBC,KACX,OACE,eAACoB,EAAA,EAAD,WACE,cAAC1D,EAAA,EAAD,IACA,qBAAKY,UAAU,gCAAf,SACE,wBAAOA,UAAU,yBAAjB,UACE,gCACE,+BACE,6BAAKyB,EAAE,2CACP,6BAAKA,EAAE,0CACP,6BAAKA,EAAE,6CACP,4BAGJ,gCACGoB,GACCA,EAAsBE,KAAI,SAACC,EAAMC,GAC/B,OAAO,cAAC,EAAD,2BAAmCD,GAAnC,IAAyClC,UAAWkC,EAAKrC,yBAA2BiC,EAAqBjC,yBAAjFsC,aAKzC,oBAAIjD,UAAU,SACd,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB2B,GAAG,wBAArC,SACGF,EAAE","file":"static/js/23.572d2adf.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst AccountContent = () => {\n  let history = useHistory()\n  let loc = useLocation()\n  const content = useSelector(state => state.content[loc.pathname.substring(1)])\n  const { customBody = '', contentTitle = '' } = content || {}\n  return (\n    <>\n      <div className=\"d-flex justify-content-between align-items-center pt-lg-2 pb-4 pb-lg-5 mb-lg-3\">\n        <div className=\"d-flex justify-content-between w-100\">\n          <h2 className=\"h3\">{contentTitle}</h2>\n        </div>\n      </div>\n\n      <div\n        onClick={event => {\n          event.preventDefault()\n          if (event.target.getAttribute('href')) {\n            history.push(event.target.getAttribute('href'))\n          }\n        }}\n        dangerouslySetInnerHTML={{\n          __html: customBody,\n        }}\n      />\n    </>\n  )\n}\nexport default AccountContent\n","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { deletePaymentMethod } from '../../../actions/userActions'\nimport { useTranslation } from 'react-i18next'\n\nconst PaymentMethodItem = props => {\n  const { accountPaymentMethodID, accountPaymentMethodName, nameOnCreditCard, isPrimary = false, creditCardType, activeFlag, expirationYear, expirationMonth } = props\n  const MySwal = withReactContent(Swal)\n  const dispatch = useDispatch()\n  const { t, i18n } = useTranslation()\n\n  return (\n    <tr>\n      <td className=\"py-3 align-middle\">\n        <div className=\"media align-items-center\">\n          <div className=\"media-body\">\n            <span className=\"font-weight-medium text-heading mr-1\">{creditCardType}</span>\n            {accountPaymentMethodName}\n            {isPrimary && <span className=\"align-middle badge badge-info ml-2\">Primary</span>}\n          </div>\n        </div>\n      </td>\n      <td className=\"py-3 align-middle\">{nameOnCreditCard}</td>\n      <td className=\"py-3 align-middle\">{`${expirationMonth}/${expirationYear}`}</td>\n      <td className=\"py-3 align-middle\">\n        <Link\n          className=\"nav-link-style mr-2\"\n          to={{\n            pathname: `/my-account/cards/${accountPaymentMethodID}`,\n            state: { ...props },\n          }}\n        >\n          <i className=\"far fa-edit\"></i>\n        </Link>\n        <a\n          className=\"nav-link-style text-primary\"\n          onClick={() => {\n            MySwal.fire({\n              icon: 'info',\n              title: <p>{t('frontend.account.payment_method.remove')}</p>,\n              showCloseButton: true,\n              showCancelButton: true,\n              focusConfirm: false,\n              confirmButtonText: t('frontend.core.delete'),\n            }).then(data => {\n              if (data.isConfirmed) {\n                dispatch(deletePaymentMethod(accountPaymentMethodID))\n              }\n            })\n          }}\n          data-toggle=\"tooltip\"\n          title=\"\"\n          data-original-title=\"Remove\"\n        >\n          <i className=\"far fa-trash-alt\"></i>\n        </a>\n      </td>\n    </tr>\n  )\n}\nexport default PaymentMethodItem\n","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\nimport { AccountLayout } from '../AccountLayout/AccountLayout'\nimport AccountContent from '../AccountContent/AccountContent'\nimport PaymentMethodItem from './PaymentMethodItem'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nconst AccountPaymentMethods = () => {\n  const user = useSelector(state => state.userReducer)\n  const { primaryPaymentMethod, accountPaymentMethods } = user\n  const { t, i18n } = useTranslation()\n  return (\n    <AccountLayout>\n      <AccountContent />\n      <div className=\"table-responsive font-size-md\">\n        <table className=\"table table-hover mb-0\">\n          <thead>\n            <tr>\n              <th>{t('frontend.account.payment_method.types')}</th>\n              <th>{t('frontend.account.payment_method.name')}</th>\n              <th>{t('frontend.account.payment_method.expires')}</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {accountPaymentMethods &&\n              accountPaymentMethods.map((card, index) => {\n                return <PaymentMethodItem key={index} {...card} isPrimary={card.accountPaymentMethodID === primaryPaymentMethod.accountPaymentMethodID} />\n              })}\n          </tbody>\n        </table>\n      </div>\n      <hr className=\"pb-4\" />\n      <div className=\"text-sm-right\">\n        <Link className=\"btn btn-primary\" to=\"/my-account/cards/new\">\n          {t('frontend.account.payment_method.add')}\n        </Link>\n      </div>\n    </AccountLayout>\n  )\n}\n\nAccountPaymentMethods.propTypes = {}\nexport default AccountPaymentMethods\n"],"sourceRoot":""}