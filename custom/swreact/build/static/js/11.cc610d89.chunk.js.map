{"version":3,"sources":["pages/Brand/BrandBanner.js","pages/Brand/Brand.js"],"names":["BrandBanner","brandCode","useGetEntity","request","setRequest","useEffect","didCancel","isFetching","isLoaded","entity","params","makeRequest","data","Helmet","title","settings","brandHTMLTitleString","className","style","maxHeight","marginRight","customPath","src","imageFile","alt","brandName","dangerouslySetInnerHTML","__html","brandDescription","Brand","props","path","location","pathname","split","reverse","loc","useLocation","queryString","parse","search","arrayFormat","arrayFormatSeparator","brandFilter","brand","history","useHistory","useGetProductType","productTypeBase","useSelector","state","configuration","filtering","productTypeUrl","urlTitle","Object","keys","length","to","listen","childProductTypes","onSelect","push","stringify","showProducts","Listing","preFilter","productType_id","productTypeID","hide"],"mappings":"qKAgCeA,EA5BK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACTC,cADS,mBAChCC,EADgC,KACvBC,EADuB,KAarC,OAVAC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHKH,EAAQI,YAAeJ,EAAQK,UAAaF,GAC/CF,EAAW,2BAAKD,GAAN,IAAeI,YAAY,EAAMC,UAAU,EAAOC,OAAQ,QAASC,OAAQ,CAAE,aAAcT,GAAaU,aAAa,KAE1H,WACLL,GAAY,KAEb,CAACH,EAASF,EAAWG,IAGtB,mCACGD,EAAQK,UAAYL,EAAQS,KAAK,IAChC,qCACE,cAACC,EAAA,EAAD,CAAQC,MAAOX,EAAQS,KAAK,GAAGG,SAASC,uBACxC,sBAAKC,UAAU,2DAAf,UACE,cAAC,IAAD,CAASC,MAAO,CAAEC,UAAW,QAASC,YAAa,QAAUC,WAAW,oCAAoCC,IAAKnB,EAAQS,KAAK,GAAGW,UAAWC,IAAKrB,EAAQS,KAAKa,YAC9J,mBAAGC,wBAAyB,CAAEC,OAAQxB,EAAQS,KAAK,GAAGgB,6B,yCCgCnDC,UA/CD,SAAAC,GAAU,IAAD,EACfC,EAAOD,EAAME,SAASC,SAASC,MAAM,KAAKC,UAC1CC,EAAMC,cACR3B,EAAS4B,IAAYC,MAAMH,EAAII,OAAQ,CAAEC,YAAa,YAAaC,qBAAsB,MACvFC,EAAc,CAClBC,MAAOb,EAAK,IAERc,EAAUC,cAPK,EASSC,cATT,mBASd5C,EATc,KASLC,EATK,KAUf4C,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,UAAUJ,mBACrEK,EAAiB3C,EAAM,KAAWsC,EAQxC,OANA3C,qBAAU,WACHF,EAAQI,YAAeJ,EAAQK,UAClCJ,EAAW,2BAAKD,GAAN,IAAeI,YAAY,EAAMC,UAAU,EAAOE,OAAQ,CAAE4C,SAAUD,GAAkB1C,aAAa,OAEhH,CAACR,EAASC,EAAYiD,KAEpBlD,EAAQI,YAAcJ,EAAQK,UAAiD,IAArC+C,OAAOC,KAAKrD,EAAQS,MAAM6C,OAChE,cAAC,IAAD,CAAUC,GAAG,UAEtBb,EAAQc,QAAO,SAAA3B,GACbtB,EAAS4B,IAAYC,MAAMP,EAASQ,OAAQ,CAAEC,YAAa,YAAaC,qBAAsB,MAC9FtC,EAAW,2BAAKD,GAAN,IAAeS,KAAM,GAAIL,YAAY,EAAMC,UAAU,EAAOE,OAAQ,CAAE4C,SAAU5C,EAAM,KAAWsC,GAAmBrC,aAAa,QAI3I,eAAC,IAAD,YACG,UAAAR,EAAQS,KAAKgD,yBAAb,eAAgCH,QAAS,GACxC,cAAC,IAAD,CACE7C,KAAMT,EAAQS,KACdiD,SAAU,SAAAP,GACR5C,EAAM,IAAU4C,EAChBT,EAAQiB,KAAR,UAAgB1B,EAAIH,SAApB,YAAgCK,IAAYyB,UAAUrD,EAAQ,CAAE+B,YAAa,eAIlFtC,EAAQS,KAAKoD,cACZ,cAACC,EAAA,EAAD,CAAaC,UAAS,2BAAOvB,GAAP,IAAoBwB,eAAgBhE,EAAQS,KAAKwD,gBAAiBC,KAAM,CAAC,cAAe,UAA9G,SACE,cAAC,EAAD,CAAapE,UAAW8B,EAAK","file":"static/js/11.cc610d89.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { SWImage } from '../../components'\nimport { useGetEntity } from '../../hooks/useAPI'\nconst BrandBanner = ({ brandCode }) => {\n  let [request, setRequest] = useGetEntity()\n\n  useEffect(() => {\n    let didCancel = false\n    if (!request.isFetching && !request.isLoaded && !didCancel) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, entity: 'brand', params: { 'f:urlTitle': brandCode }, makeRequest: true })\n    }\n    return () => {\n      didCancel = true\n    }\n  }, [request, brandCode, setRequest])\n\n  return (\n    <>\n      {request.isLoaded && request.data[0] && (\n        <>\n          <Helmet title={request.data[0].settings.brandHTMLTitleString} />\n          <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n            <SWImage style={{ maxHeight: '150px', marginRight: '50px' }} customPath=\"/custom/assets/images/brand/logo/\" src={request.data[0].imageFile} alt={request.data.brandName} />\n            <p dangerouslySetInnerHTML={{ __html: request.data[0].brandDescription }} />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default BrandBanner\n","import { Layout, ProductTypeList } from '../../components'\nimport BrandBanner from './BrandBanner'\nimport ListingPage from '../../components/Listing/Listing'\nimport { Redirect, useHistory, useLocation } from 'react-router'\nimport { useGetProductType } from '../../hooks/useAPI'\nimport { useSelector } from 'react-redux'\nimport queryString from 'query-string'\nimport { useEffect } from 'react'\n\nconst Brand = props => {\n  const path = props.location.pathname.split('/').reverse()\n  const loc = useLocation()\n  let params = queryString.parse(loc.search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n  const brandFilter = {\n    brand: path[0],\n  }\n  const history = useHistory()\n\n  const [request, setRequest] = useGetProductType()\n  const productTypeBase = useSelector(state => state.configuration.filtering.productTypeBase)\n  const productTypeUrl = params['key'] || productTypeBase\n\n  useEffect(() => {\n    if (!request.isFetching && !request.isLoaded) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, params: { urlTitle: productTypeUrl }, makeRequest: true })\n    }\n  }, [request, setRequest, productTypeUrl])\n\n  if (!request.isFetching && request.isLoaded && Object.keys(request.data).length === 0) {\n    return <Redirect to=\"/404\" />\n  }\n  history.listen(location => {\n    params = queryString.parse(location.search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n    setRequest({ ...request, data: {}, isFetching: true, isLoaded: false, params: { urlTitle: params['key'] || productTypeBase }, makeRequest: true })\n  })\n\n  return (\n    <Layout>\n      {request.data.childProductTypes?.length > 0 && (\n        <ProductTypeList\n          data={request.data}\n          onSelect={urlTitle => {\n            params['key'] = urlTitle\n            history.push(`${loc.pathname}?${queryString.stringify(params, { arrayFormat: 'comma' })}`)\n          }}\n        />\n      )}\n      {request.data.showProducts && (\n        <ListingPage preFilter={{ ...brandFilter, productType_id: request.data.productTypeID }} hide={['productType', 'brands']}>\n          <BrandBanner brandCode={path[0]} />\n        </ListingPage>\n      )}\n    </Layout>\n  )\n}\n\nexport default Brand\n"],"sourceRoot":""}