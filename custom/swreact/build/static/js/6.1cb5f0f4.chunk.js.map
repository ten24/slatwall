{"version":3,"sources":["hooks/index.js","pages/Manufacturer/Manufacturer.js"],"names":["Manufacturer","history","useHistory","loc","useLocation","content","useSelector","state","pathname","substring","brandRoute","getBrandRoute","title","customBody","useGetEntity","request","setRequest","useEffect","didCancel","isFetching","isLoaded","entity","params","pageSize","makeRequest","className","onClick","event","preventDefault","target","getAttribute","push","dangerouslySetInnerHTML","__html","data","sort","a","b","brandName","reduce","acc","element","brandFeatured","trim","map","brand","to","urlTitle","customPath","src","brandLogo","alt","brandID"],"mappings":"oGAAA,uG,+HC8EeA,UAtEM,WACnB,IAAIC,EAAUC,cACVC,EAAMC,cACJC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAAQF,EAAIK,SAASC,UAAU,OACpEC,EAAaJ,YAAYK,KAJN,EAKKN,GAAW,GAAjCO,EALiB,EAKjBA,MAAOC,EALU,EAKVA,WALU,EAMGC,cANH,mBAMpBC,EANoB,KAMXC,EANW,KAkBzB,OAVAC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHKH,EAAQI,YAAeJ,EAAQK,UAAaF,GAC/CF,EAAW,2BAAKD,GAAN,IAAeI,YAAY,EAAMC,UAAU,EAAOC,OAAQ,QAASC,OAAQ,CAAEC,SAAU,KAAOC,aAAa,KAEhH,WACLN,GAAY,KAEb,CAACH,EAASC,IAGX,sBAAKS,UAAU,eAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,2DAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+Cb,GAAS,WAI9D,sBAAKa,UAAU,kDAAf,UACE,qBACEA,UAAU,eACVC,QAAS,SAAAC,GACPA,EAAMC,iBACFD,EAAME,OAAOC,aAAa,SAC5B7B,EAAQ8B,KAAKJ,EAAME,OAAOC,aAAa,UAG3CE,wBAAyB,CACvBC,OAAQpB,GAAc,MAGzBA,GAAc,uBACf,qBAAKY,UAAU,yBAAf,SACE,qBAAKA,UAAU,WAAf,SACGV,EAAQK,UACPL,EAAQmB,KACLC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,UAAY,GAAK,KACjDC,QAAO,SAACC,EAAKC,GACZ,MAAqC,QAAjCA,EAAQC,cAAcC,OAClB,CAAEF,GAAR,mBAAoBD,IAEhB,GAAN,mBAAWA,GAAX,CAAgBC,MACf,IACFG,KAAI,SAAAC,GACH,OACE,qBAAyBpB,UAAU,yBAAnC,SACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,qCAAqCqB,GAAE,WAAMpC,EAAN,YAAoBmC,EAAME,UAAjF,SACE,cAAC,IAAD,CAAStB,UAAU,gBAAgBuB,WAAW,kCAAkCC,IAAKJ,EAAMK,UAAWC,IAAKN,EAAMP,iBAH7GO,EAAMO","file":"static/js/6.1cb5f0f4.chunk.js","sourcesContent":["import { useGetEntity, useGetEntityByID, useGetSku, useGetProductDetails, useGetBrand, useGetBrands, useGetProductList, useGetProducts, useGetAvailableShippingMethods, useGetAvailablePaymentMethods, useAddWishlistItem, useGetOrderDetails, useGetAllOrders, useAddOrderShippingAddress, useGetFavouriteProducts, useGetSkuList, useGetProductSkus, useGetProductAvailableSkuOptions, useGetProductSkuSelected, useGetProductImageGallery } from './useAPI'\nimport useFormatCurrency from './useFormatCurrency'\nimport { useFormatDate, useFormatDateTime, useFormatTime } from './useFormatDate'\nimport { useRedirect, usePush } from './useRedirect'\n\nexport { useGetEntity, useGetEntityByID, useGetSku, useGetProductDetails, useGetBrand, useGetBrands, useGetProductList, useGetProducts, useGetAvailableShippingMethods, useGetAvailablePaymentMethods, useAddWishlistItem, useGetOrderDetails, useGetAllOrders, useAddOrderShippingAddress, useGetFavouriteProducts, useGetSkuList, useGetProductSkus, useGetProductAvailableSkuOptions, useGetProductSkuSelected, useGetProductImageGallery, useFormatCurrency, useFormatDate, useFormatDateTime, useFormatTime, useRedirect, usePush }\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { SWImage } from '../../components'\nimport { useGetEntity } from '../../hooks'\nimport { Link } from 'react-router-dom'\nimport { getBrandRoute } from '../../selectors/configurationSelectors'\n\nconst Manufacturer = () => {\n  let history = useHistory()\n  let loc = useLocation()\n  const content = useSelector(state => state.content[loc.pathname.substring(1)])\n  const brandRoute = useSelector(getBrandRoute)\n  const { title, customBody } = content || {}\n  let [request, setRequest] = useGetEntity()\n\n  useEffect(() => {\n    let didCancel = false\n    if (!request.isFetching && !request.isLoaded && !didCancel) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, entity: 'brand', params: { pageSize: 500 }, makeRequest: true })\n    }\n    return () => {\n      didCancel = true\n    }\n  }, [request, setRequest])\n\n  return (\n    <div className=\"bg-light p-0\">\n      <div className=\"page-title-overlap bg-lightgray pt-4\">\n        <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n          <div className=\"order-lg-1 pr-lg-4 text-center\">\n            <h1 className=\"h3 text-dark mb-0 font-accent\">{title || ''}</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"container bg-light box-shadow-lg rounded-lg p-5\">\n        <div\n          className=\"content-body\"\n          onClick={event => {\n            event.preventDefault()\n            if (event.target.getAttribute('href')) {\n              history.push(event.target.getAttribute('href'))\n            }\n          }}\n          dangerouslySetInnerHTML={{\n            __html: customBody || '',\n          }}\n        />\n        {customBody && <hr />}\n        <div className=\"container pb-4 pb-sm-5\">\n          <div className=\"row pt-5\">\n            {request.isLoaded &&\n              request.data\n                .sort((a, b) => (a.brandName > b.brandName ? 1 : -1))\n                .reduce((acc, element) => {\n                  if (element.brandFeatured.trim() === 'Yes') {\n                    return [element, ...acc]\n                  }\n                  return [...acc, element]\n                }, [])\n                .map(brand => {\n                  return (\n                    <div key={brand.brandID} className=\"col-md-4 col-sm-6 mb-3\">\n                      <div className=\"card border-0\">\n                        <Link className=\"d-block overflow-hidden rounded-lg\" to={`/${brandRoute}/${brand.urlTitle}`}>\n                          <SWImage className=\"d-block w-100\" customPath=\"/custom/assets/files/brandlogo/\" src={brand.brandLogo} alt={brand.brandName} />\n                        </Link>\n                      </div>\n                    </div>\n                  )\n                })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Manufacturer\n"],"sourceRoot":""}