{"version":3,"sources":["components/Listing/ListingPagination.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx","components/Listing/Grid.js","components/Account/AccountFavorites/AccountFavorites.js"],"names":["LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","ListingPagination","recordsCount","pageNeighbours","currentPage","totalPages","setPage","t","useTranslation","String","parseInt","gotoPage","pageTo","newPage","Math","max","min","pages","totalNumbers","startPage","endPage","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","calculatePageNumbers","className","aria-label","map","page","index","href","onClick","evt","preventDefault","aria-hidden","SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","speed","style","title","fixedId","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","id","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","ListingGridLoader","ry","Grid","isFetching","products","urlTitle","productID","productName","sku_imageFile","sku_price","skuID","ProductCard","listPrice","defaultProductImageFiles","AccountFavorites","favouriteSkus","useSelector","state","userReducer","useGetProductList","productList","setRequest","isLoaded","params","skusList","join","makeRequest","AccountLayout","data","defaultSku_imageFile","defaultSku_price","defaultSku_skuID","pageNumber"],"mappings":"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","file":"static/js/20.a91233e6.chunk.js","sourcesContent":["import { useTranslation } from 'react-i18next'\n\nconst LEFT_PAGE = 'LEFT'\nconst RIGHT_PAGE = 'RIGHT'\n\n// Built from here: https://www.digitalocean.com/community/tutorials/how-to-build-custom-pagination-with-react\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from\n  const range = []\n\n  while (i <= to) {\n    range.push(i)\n    i += step\n  }\n\n  return range\n}\n\nconst calculatePageNumbers = (currentPage, pageNeighbours, totalPages) => {\n  /**\n   * totalNumbers: the total page numbers to show on the control\n   * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n   */\n  const totalNumbers = pageNeighbours * 2 + 3\n  const totalBlocks = totalNumbers + 2\n\n  if (totalPages > totalBlocks) {\n    const startPage = Math.max(2, currentPage - pageNeighbours)\n    const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours)\n    let pages = range(startPage, endPage)\n\n    /**\n     * hasLeftSpill: has hidden pages to the left\n     * hasRightSpill: has hidden pages to the right\n     * spillOffset: number of hidden pages either to the left or to the right\n     */\n    const hasLeftSpill = startPage > 2\n    const hasRightSpill = totalPages - endPage > 1\n    const spillOffset = totalNumbers - (pages.length + 1)\n\n    switch (true) {\n      // handle: (1) < {5 6} [7] {8 9} (10)\n      case hasLeftSpill && !hasRightSpill: {\n        const extraPages = range(startPage - spillOffset, startPage - 1)\n        pages = [LEFT_PAGE, ...extraPages, ...pages]\n        break\n      }\n\n      // handle: (1) {2 3} [4] {5 6} > (10)\n      case !hasLeftSpill && hasRightSpill: {\n        const extraPages = range(endPage + 1, endPage + spillOffset)\n        pages = [...pages, ...extraPages, RIGHT_PAGE]\n        break\n      }\n\n      // handle: (1) < {4 5} [6] {7 8} > (10)\n      case hasLeftSpill && hasRightSpill:\n      default: {\n        pages = [LEFT_PAGE, ...pages, RIGHT_PAGE]\n        break\n      }\n    }\n\n    return [1, ...pages, totalPages]\n  }\n  return range(1, totalPages)\n}\n\nconst ListingPagination = ({ recordsCount, pageNeighbours = 2, currentPage, totalPages = 1, setPage }) => {\n  const { t } = useTranslation()\n  recordsCount = typeof recordsCount === 'string' || recordsCount instanceof String ? parseInt(recordsCount) : recordsCount\n  currentPage = typeof currentPage === 'string' || currentPage instanceof String ? parseInt(currentPage) : currentPage\n  totalPages = typeof totalPages === 'string' || totalPages instanceof String ? parseInt(totalPages) : totalPages\n\n  const gotoPage = pageTo => {\n    const newPage = Math.max(0, Math.min(pageTo, totalPages))\n    setPage(newPage)\n  }\n\n  const pages = calculatePageNumbers(currentPage, pageNeighbours, totalPages)\n  if (!recordsCount || recordsCount.length === 0 || totalPages === 1) return null\n  return (\n    <nav className=\"d-flex justify-content-between pt-2\" aria-label=\"Page navigation\">\n      <ul className=\"mx-auto pagination\">\n        {pages.map((page, index) => {\n          if (page === LEFT_PAGE)\n            return (\n              <li key={index} className=\"page-item\">\n                <div\n                  className=\"page-link\"\n                  href=\"\"\n                  aria-label=\"Previous\"\n                  onClick={evt => {\n                    evt.preventDefault()\n                    gotoPage(currentPage - pageNeighbours * 2 - 1)\n                  }}\n                >\n                  <span aria-hidden=\"true\">&laquo;</span>\n                  <span className=\"sr-only\">{t('frontend.pagination.previous')}</span>\n                </div>\n              </li>\n            )\n\n          if (page === RIGHT_PAGE)\n            return (\n              <li key={index} className=\"page-item\">\n                <div\n                  className=\"page-link\"\n                  aria-label=\"Next\"\n                  onClick={evt => {\n                    evt.preventDefault()\n                    gotoPage(currentPage + pageNeighbours * 2 + 1)\n                  }}\n                >\n                  <span aria-hidden=\"true\">&raquo;</span>\n                  <span className=\"sr-only\">{t('frontend.pagination.next')}</span>\n                </div>\n              </li>\n            )\n\n          return (\n            <li key={index} className={`page-item${currentPage === page ? ' active' : ''}`}>\n              <div\n                className=\"page-link\"\n                onClick={evt => {\n                  evt.preventDefault()\n                  const newPage = Math.max(0, Math.min(page, totalPages))\n                  setPage(newPage)\n                }}\n              >\n                {page}\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\n\nexport default ListingPagination\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import ProductCard from '../ProductCard/ProductCard'\nimport ContentLoader from 'react-content-loader'\n\nconst ListingGridLoader = props => (\n  <ContentLoader viewBox=\"0 0 1200 500\" height={400} width={1000} {...props}>\n    <rect x=\"100\" y=\"20\" rx=\"8\" ry=\"8\" width=\"300\" height=\"300\" />\n    <rect x=\"100\" y=\"350\" rx=\"0\" ry=\"0\" width=\"300\" height=\"32\" />\n    <rect x=\"100\" y=\"400\" rx=\"0\" ry=\"0\" width=\"180\" height=\"36\" />\n\n    <rect x=\"500\" y=\"20\" rx=\"8\" ry=\"8\" width=\"300\" height=\"300\" />\n    <rect x=\"500\" y=\"350\" rx=\"0\" ry=\"0\" width=\"300\" height=\"36\" />\n    <rect x=\"500\" y=\"400\" rx=\"0\" ry=\"0\" width=\"180\" height=\"30\" />\n\n    <rect x=\"900\" y=\"20\" rx=\"8\" ry=\"8\" width=\"300\" height=\"300\" />\n    <rect x=\"900\" y=\"350\" rx=\"0\" ry=\"0\" width=\"300\" height=\"32\" />\n    <rect x=\"900\" y=\"400\" rx=\"0\" ry=\"0\" width=\"180\" height=\"36\" />\n  </ContentLoader>\n)\n\nconst Grid = ({ isFetching, products = [] }) => {\n  return (\n    <div className=\"row mx-n2\">\n      {isFetching && (\n        <>\n          <ListingGridLoader /> <ListingGridLoader /> <ListingGridLoader />\n        </>\n      )}\n      {!isFetching &&\n        products.map(({ urlTitle, productID, productName, sku_imageFile, sku_price, skuID }) => {\n          return (\n            <div key={productID} className=\"col-md-4 col-sm-6 px-2 mb-4\">\n              <ProductCard urlTitle={urlTitle} productID={productID} productName={productName} listPrice={sku_price} skuID={skuID} defaultProductImageFiles={[sku_imageFile]} />\n            </div>\n          )\n        })}\n    </div>\n  )\n}\nexport default Grid\n","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\nimport { AccountLayout } from '../AccountLayout/AccountLayout'\nimport { useGetProductList } from '../../../hooks/useAPI'\nimport Grid from '../../Listing/Grid'\nimport ListingPagination from '../../Listing/ListingPagination'\n\nconst AccountFavorites = () => {\n  const favouriteSkus = useSelector(state => state.userReducer.favouriteSkus)\n  let [productList, setRequest] = useGetProductList()\n\n  if (favouriteSkus.isLoaded && !productList.isFetching && !productList.isLoaded) {\n    setRequest({ ...productList, params: { 'f:skus.skuid:eq': favouriteSkus.skusList.join() }, makeRequest: true, isFetching: true, isLoaded: false })\n  }\n  const setPage = pageNumber => {\n    setRequest({ ...productList, params: { 'f:skus.skuid:eq': favouriteSkus.skusList.join(), currentPage: pageNumber }, makeRequest: true, isFetching: true, isLoaded: false })\n  }\n\n  return (\n    <AccountLayout>\n      <div className=\"d-flex justify-content-between align-items-center pt-lg-2 pb-4 pb-lg-5 mb-lg-3\">\n        <div className=\"d-flex justify-content-between w-100\">&nbsp;</div>\n      </div>\n      <Grid\n        isFetching={productList.isFetching}\n        products={productList.data.map(({ urlTitle, productID, productName, defaultSku_imageFile, defaultSku_price, defaultSku_skuID }) => {\n          return { urlTitle, productID, productName, sku_imageFile: defaultSku_imageFile, sku_price: defaultSku_price, skuID: defaultSku_skuID }\n        })}\n      />\n      <ListingPagination recordsCount={productList.data} currentPage={productList.currentPage} totalPages={productList.totalPages} setPage={setPage} />\n    </AccountLayout>\n  )\n}\n\nexport default AccountFavorites\n"],"sourceRoot":""}