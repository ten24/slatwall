<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="Slatwall" basedir="." default="runUnitTests">


	<!--
	 Jenkins / Hudson Tips:
	 
	 If you stick with the defaults configured in "init", use the following as a guide for populating the Jenkins job configuration for this project
	 
	 1) "Test  Report XMLs" configuration will be something like 
	 
	 	DirectoryNameOfYourProject/test/testresults/xml/**/*.xml
	 	
	 2) "Archive the artifacts" configuration will be something like
	 	
	 	DirectoryNameOfYourProject/deploy/*.zip
	 
	-->
	
	<target name="init">
		
		<!-- Get the computers hostname -->
		<exec executable="hostname" outputproperty="computer.hostname"/>

		<!-- what's the name of the directory where your tests live? Note: this is just the name of the directory, not the full path-->
		<property name="slatwall.test.dir.name" value="meta/tests" />

		<!-- where do your tests live, relative to this build file? test.dir.location will be a full path to a directory -->
		<property name="slatwall.test.dir.location" location="tests" />

		<!-- what is the cfc dot-notation path to that directory, as ColdFusion sees it? -->
		<property name="slatwall.test.cfcpath" value="Slatwall.meta.tests" />
		
		<!-- what server and port should your tests run against? These defaults only apply if the properties are not set in $user.name}.properties -->
		<property name="slatwall.test.server" value="slatwall" />
		<property name="slatwall.test.serverport" value="80" />
		<property name="slatwall.test.datasource" value="slatwall" />
		<property name="slatwall.test.functional.browser" value="*googlechrome" />
		
		<!-- what "runner" URL should the tests hit. In this example, you'd be hitting http://localhost:80/DirectoryNameOfYourProject/test/HttpAntRunner.cfc  Simply copy mxunit/samples/HttpAntRunner.cfc into your test directory! -->
		<property name="slatwall.test.runner" value="/${slatwall.test.dir.name}/HttpAntRunner.cfc" />
		
		<!-- this is where the xml and html will live for the report generator and Jenkins -->
		<property name="slatwall.test.output" location="testresults" />
		<property name="slatwall.test.output.xml" location="${slatwall.test.output}/xml" />
		
		<!-- ////////   JAR FILES WE NEED FOR EXTERNAL TASKS -->
		<!-- where does the mxunit ant jar file live? it's easiest to copy it out of the mxunit install and put it into your app
			 You can also put any other ant-related jars in this directory; for example, if you want to use svnant, you'll need to put those jars here
		-->
		<path id="project.classpath">
			<fileset dir="lib">
				<include name="**/*.jar" />
			</fileset>
		</path>
		
		<taskdef name="mxunittask" classname="org.mxunit.ant.MXUnitAntTask" classpathref="project.classpath" />

		<!-- dump the properties -->
		<echoproperties />
	</target>
		
	<target name="setupApplicationConfig" depends="init">
		<tstamp>
		      <format property="touch.time" pattern="yyyymmddhhmmaa" unit="hour" />
		</tstamp>
		<echo file="../custom/config/configApplication.cfm">&lt;cfset this.name = &quot;slatwalltestbuild-${touch.time}&quot; /&gt;${line.separator}&lt;cfset this.datasource.name = &quot;${slatwall.test.datasource}&quot; /&gt;</echo>
	</target>
	
	<target name="setupMachineTestsConfig" depends="init">
		<echo file="tests/config/${computer.hostname}.ini">
# Parameters needed by all tests
[common]
login=testrunner@ten24web.com
password=testrunner

# Parameters for UI tests
[ui]
browserUrl=http://${slatwall.test.server}/
browserCommand=${slatwall.test.functional.browser}
		</echo>
	</target>
	
	<target name="runUnitTests" depends="init,setupApplicationConfig,setupMachineTestsConfig">
		<!-- Setup test output directory -->
		<delete dir="${slatwall.test.output.xml}/unit" failonerror="false"/>
		<mkdir dir="${slatwall.test.output.xml}/unit" />
		
		<!-- Run the tests -->
		<runTestDirectory directoryName="unit" excludes=""/>
	</target>
	
	<target name="runFunctionalTests" depends="init,setupApplicationConfig,setupMachineTestsConfig">
		<delete dir="${slatwall.test.output.xml}/functional" failonerror="false"/>
		<mkdir dir="${slatwall.test.output.xml}/functional" />
		<runTestDirectory directoryName="functional" excludes=""/>		
	</target>
	
	<target name="runAllTests" description="Make output directories and run the MXUnit task" depends="init,runUnitTests,runFunctionalTests">
		<fail if="tests.bombed" message="Failing the build due to test failures"/>
	</target>
			
	<macrodef name="runTestDirectory">
		<attribute name="directoryName"/>
		<attribute name="excludes" default=""/>
		<sequential>
			<mxunittask server="${slatwall.test.server}" port="${slatwall.test.serverport}" defaultrunner="${slatwall.test.runner}" outputdir="${slatwall.test.output.xml}/@{directoryName}" verbose="true" failureproperty="tests.bombed" errorproperty="tests.bombed">
				<directory path="${slatwall.test.dir.location}/@{directoryName}" recurse="true" packageName="${slatwall.test.cfcpath}.@{directoryName}" componentPath="${slatwall.test.cfcpath}.@{directoryName}" excludes="@{excludes}" />
			</mxunittask>
		</sequential>
	</macrodef>

</project>