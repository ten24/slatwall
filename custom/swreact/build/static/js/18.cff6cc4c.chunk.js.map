{"version":3,"sources":["pages/ProductDetail/ProductPageHeader.js","pages/ProductDetail/ProductDetailGallery.js","pages/ProductDetail/ProductPagePanels.js","pages/ProductDetail/ProductPageContent.js","pages/ProductDetail/ProductDetailSlider.js","pages/ProductDetail/ProductDetail.js"],"names":["ProductPageHeader","title","className","ProductDetailGallery","productID","skuID","useGetProductImageGallery","productImageGallery","setRequest","useState","nav1","nav2","sliders","setSliders","slider1","useRef","slider2","useEffect","current","isLoaded","isFetching","params","makeRequest","filterImages","data","images","filter","ASSIGNEDSKUIDLIST","TYPE","includes","length","ORIGINALPATH","NAME","id","arrows","asNavFor","ref","slider","map","customPath","src","alt","style","maxWidth","infinite","slidesToShow","swipeToSlide","focusOnSelect","propertyBlackList","ProductPagePanels","product","propertiesToDisplay","Object","keys","property","startsWith","key","replace","value","isBoolean","booleanToString","isString","trim","href","role","data-toggle","aria-expanded","aria-controls","data-parent","containsHTML","dangerouslySetInnerHTML","__html","OptionLoader","props","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","SkuOptions","skuOptionDetails","availableSkuOptions","sku","optionCode","optionGroupCode","lastOption","setLastOption","loc","useLocation","history","useHistory","t","useTranslation","queryString","parse","search","arrayFormat","arrayFormatSeparator","entries","filteredOptions","forEach","filteredOption","options","option","active","optionID","calculateOptions","forceSelcted","optionGroup","selectedOptions","JSON","stringify","skuid","console","log","push","pathname","cals","skuIdsToSkuCodes","selectedOptionIDList","assign","optionGroupName","optionGroupID","selectedOptionCode","htmlFor","required","onChange","e","selectedOption","flat","shift","getOptionByCode","target","setOption","optionName","ProductPageContent","productOptions","dispatch","useDispatch","cart","useSelector","state","quantity","setQuantity","productClearance","productName","skuCode","productDescription","onSubmit","event","preventDefault","addToCart","window","scrollTo","top","behavior","salePrice","price","listPrice","calculatedQATS","Array","index","disabled","type","ProductDetailSlider","products","err","relatedProducts","setRelatedProducts","didCancel","SlatwalApiService","getRelatedProducts","then","response","isSuccess","newProducts","success","renameKeysInArrayOfObjects","ProductSlider","sliderData","skuCodesToSkuIds","productOptionGroups","parsedOptions","optCount","join","ProductDetail","useGetProductAvailableSkuOptions","skuOptions","getSkuOptionsRequest","useGetEntity","newproduct","getPublicProduct","location","path","setPath","idList","defaultSelectedOptions","optionGroups","payload","listen","to","urlTitle","split","reverse","entity","productSeries","Helmet","calculatedTitle"],"mappings":"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","file":"static/js/18.cff6cc4c.chunk.js","sourcesContent":["import { BreadCrumb } from '../../components'\n\nconst ProductPageHeader = ({ title = '' }) => {\n  return (\n    <div className=\"page-title-overlap bg-lightgray pt-4\">\n      <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n        <div className=\"order-lg-2 mb-3 mb-lg-0 pt-lg-2\">\n          <BreadCrumb />\n        </div>\n        <div className=\"order-lg-1 pr-lg-4 text-center text-lg-left\">\n          <h1 className=\"h3 text-dark mb-0 font-accent\">{title}</h1>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductPageHeader\n","import React, { useEffect, useRef, useState } from 'react'\nimport Slider from 'react-slick'\nimport { SWImage } from '../../components'\nimport { useGetProductImageGallery } from '../../hooks/useAPI'\n\n/*\n\nProbably should move to this eventually \nhttps://react-slick.neostack.com/docs/example/custom-paging\n*/\nconst ProductDetailGallery = ({ productID, skuID }) => {\n  let [productImageGallery, setRequest] = useGetProductImageGallery()\n  const [sliders, setSliders] = useState({\n    nav1: null,\n    nav2: null,\n  })\n  const slider1 = useRef()\n  const slider2 = useRef()\n  useEffect(() => {\n    setSliders({\n      nav1: slider1.current,\n      nav2: slider2.current,\n    })\n    if (!productImageGallery.isLoaded && !productImageGallery.isFetching) {\n      setRequest({ ...productImageGallery, isFetching: true, isLoaded: false, params: { productID }, makeRequest: true })\n    }\n  }, [productImageGallery, setRequest, productID])\n  let filterImages = productImageGallery.isLoaded\n    ? productImageGallery.data.images.filter(({ ASSIGNEDSKUIDLIST = false, TYPE }) => {\n        return TYPE === 'skuDefaultImage' || (ASSIGNEDSKUIDLIST && ASSIGNEDSKUIDLIST.includes(skuID))\n      })\n    : []\n  if (filterImages.length === 0) {\n    filterImages = [{ ORIGINALPATH: '', NAME: '' }]\n  }\n\n  return (\n    <div className=\"col-lg-6 pr-lg-5 pt-0\">\n      <div className=\"cz-product-gallery\">\n        <div className=\"cz-preview order-sm-2\">\n          <div className=\"cz-preview-item active\" id=\"first\">\n            <div>\n              <Slider arrows={false} asNavFor={sliders.nav2} ref={slider => (slider1.current = slider)}>\n                {productImageGallery.isLoaded &&\n                  filterImages.map(({ ORIGINALPATH, NAME }) => {\n                    return <SWImage key={NAME} customPath=\"/\" src={ORIGINALPATH} className=\"cz-image-zoom w-100 mx-auto\" alt=\"Product\" style={{ maxWidth: '500px' }} />\n                  })}\n              </Slider>\n            </div>\n            <div className=\"cz-image-zoom-pane\"></div>\n          </div>\n        </div>\n      </div>\n      <div className=\"cz-product-gallery\">\n        <div className=\"cz-preview order-sm-2\">\n          <div className=\"cz-preview-item active\" id=\"first\">\n            <div>\n              {filterImages.length > 1 && (\n                <Slider arrows={false} infinite={filterImages.length > 3} asNavFor={sliders.nav1} ref={slider => (slider2.current = slider)} slidesToShow={3} swipeToSlide={true} focusOnSelect={true}>\n                  {productImageGallery.isLoaded &&\n                    filterImages.map(({ ORIGINALPATH, NAME }) => {\n                      return <SWImage key={NAME} customPath=\"/\" src={ORIGINALPATH} className=\"cz-image-zoom w-100 mx-auto\" alt=\"Product\" style={{ maxWidth: '100px' }} />\n                    })}\n                </Slider>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ProductDetailGallery\n","import { isString, isBoolean, booleanToString, containsHTML } from '../../utils'\n\nconst propertyBlackList = ['productID', 'productName', 'productCode']\n\n// TODO: Migrate to reactstrap accordion\nconst ProductPagePanels = ({ product = {} }) => {\n  let propertiesToDisplay = []\n\n  propertiesToDisplay = Object.keys(product)\n    .filter(property => {\n      return property.startsWith('product') && !propertyBlackList.includes(property)\n    })\n    .map(property => {\n      return { key: property.replace('product', ''), value: isBoolean(product[property]) ? booleanToString(product[property]) : product[property] }\n    })\n    .filter(({ key, value }) => {\n      return isString(value) && value.trim().length > 0\n    })\n\n  return (\n    <div className=\"accordion mb-4\" id=\"productPanels\">\n      {/* <div className=\"alert alert-danger\" role=\"alert\">\n        <i className=\"far fa-exclamation-circle\"></i> This item is not eligable for free freight\n      </div> */}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"accordion-heading\">\n            <a href=\"#productInfo\" role=\"button\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"productInfo\">\n              <i className=\"far fa-key font-size-lg align-middle mt-n1 mr-2\"></i>\n              Product info<span className=\"accordion-indicator\"></span>\n            </a>\n          </h3>\n        </div>\n        <div className=\"collapse show\" id=\"productInfo\" data-parent=\"#productPanels\">\n          <div className=\"card-body\">\n            <div className=\"font-size-sm row\">\n              <div className=\"col-6\">\n                <ul>\n                  {propertiesToDisplay.map(({ key }) => {\n                    return <li key={key}>{key}:</li>\n                  })}\n                </ul>\n              </div>\n              <div className=\"col-6 text-muted\">\n                <ul>\n                  {propertiesToDisplay.map(({ key, value }) => {\n                    return <li key={key}>{containsHTML(value) ? <div dangerouslySetInnerHTML={{ __html: value }} /> : value}</li>\n                  })}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"accordion-heading\">\n            <a className=\"collapsed\" href=\"#technicalinfo\" role=\"button\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"technicalinfo\">\n              <i className=\"far fa-drafting-compass align-middle mt-n1 mr-2\"></i>\n              Technical Info<span className=\"accordion-indicator\"></span>\n            </a>\n          </h3>\n        </div>\n        <div className=\"collapse\" id=\"technicalinfo\" data-parent=\"#productPanels\">\n          <div className=\"card-body font-size-sm\">\n            <div className=\"d-flex justify-content-between border-bottom py-2\">\n              <div className=\"font-weight-semibold text-dark\">Document Title</div>\n              <a href=\"?=doc\">Download</a>\n            </div>\n            <div className=\"d-flex justify-content-between border-bottom py-2\">\n              <div className=\"font-weight-semibold text-dark\">Document Title</div>\n              <a href=\"?=doc\">Download</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"accordion-heading\">\n            <a className=\"collapsed\" href=\"#questions\" role=\"button\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"questions\">\n              <i className=\"far fa-question-circle font-size-lg align-middle mt-n1 mr-2\"></i>\n              Questions?<span className=\"accordion-indicator\"></span>\n            </a>\n          </h3>\n        </div>\n        <div className=\"collapse\" id=\"questions\" data-parent=\"#productPanels\">\n          <div className=\"card-body\">\n            <p>Have questions about this product?</p>\n            <a href=\"/contact\">Contact Us</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductPagePanels\n","import ProductDetailGallery from './ProductDetailGallery'\nimport ProductPagePanels from './ProductPagePanels'\nimport { useEffect, useState } from 'react'\nimport { addToCart } from '../../actions/cartActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { HeartButton, ProductPrice } from '../../components'\nimport { useTranslation } from 'react-i18next'\nimport queryString from 'query-string'\nimport { useHistory, useLocation } from 'react-router'\nimport ContentLoader from 'react-content-loader'\nimport { skuIdsToSkuCodes } from '../../utils'\n\nconst OptionLoader = props => (\n  <ContentLoader speed={2} width={400} height={150} viewBox=\"0 0 400 200\" backgroundColor=\"#f3f3f3\" foregroundColor=\"#ecebeb\" {...props}>\n    <rect x=\"25\" y=\"15\" rx=\"5\" ry=\"5\" width=\"350\" height=\"20\" />\n    <rect x=\"25\" y=\"45\" rx=\"5\" ry=\"5\" width=\"350\" height=\"10\" />\n    <rect x=\"25\" y=\"60\" rx=\"5\" ry=\"5\" width=\"350\" height=\"10\" />\n    <rect x=\"26\" y=\"75\" rx=\"5\" ry=\"5\" width=\"350\" height=\"10\" />\n    <rect x=\"27\" y=\"107\" rx=\"5\" ry=\"5\" width=\"350\" height=\"20\" />\n    <rect x=\"26\" y=\"135\" rx=\"5\" ry=\"5\" width=\"350\" height=\"10\" />\n    <rect x=\"26\" y=\"150\" rx=\"5\" ry=\"5\" width=\"350\" height=\"10\" />\n    <rect x=\"27\" y=\"165\" rx=\"5\" ry=\"5\" width=\"350\" height=\"10\" />\n  </ContentLoader>\n)\n\nconst ProductPageContent = ({ product, skuID, sku, productOptions = [], availableSkuOptions = '', isFetching = false }) => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const cart = useSelector(state => state.cart)\n  const [quantity, setQuantity] = useState(1)\n  return (\n    <div className=\"container bg-light box-shadow-lg rounded-lg px-4 py-3 mb-5\">\n      <div className=\"px-lg-3\">\n        <div className=\"row\">\n          <ProductDetailGallery productID={product.productID} skuID={skuID} />\n          {/* <!-- Product details--> */}\n          <div className=\"col-lg-6 pt-0\">\n            <div className=\"product-details pb-3\">\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                <span className=\"d-inline-block font-size-sm align-middle px-2 bg-primary text-light\"> {product.productClearance === true && ' On Special'}</span>\n                {skuID && <HeartButton skuID={skuID} className={'btn-wishlist mr-0 mr-lg-n3'} />}\n              </div>\n              <h2 className=\"h4 mb-2\">{product.productName}</h2>\n              <div className=\"mb-2\">\n                <span className=\"text-small text-muted\">{`SKU: `}</span>\n                {sku && <span className=\"h4 font-weight-normal text-large text-accent mr-1\">{sku.skuCode}</span>}\n              </div>\n              <div\n                className=\"mb-3 font-weight-light font-size-small text-muted\"\n                dangerouslySetInnerHTML={{\n                  __html: product.productDescription,\n                }}\n              />\n              <form\n                className=\"mb-grid-gutter\"\n                onSubmit={event => {\n                  event.preventDefault()\n                  dispatch(addToCart(sku.skuID, quantity))\n                  window.scrollTo({\n                    top: 0,\n                    behavior: 'smooth',\n                  })\n                }}\n              >\n                {productOptions.length > 0 && !isFetching && <SkuOptions productID={product.productID} skuOptionDetails={productOptions} availableSkuOptions={availableSkuOptions} sku={sku} skuID={skuID} />}\n                {isFetching && <OptionLoader />}\n                <div className=\"mb-3\">{sku && <ProductPrice salePrice={sku.price} listPrice={sku.listPrice} />}</div>\n                <div className=\"form-group d-flex align-items-center\">\n                  <select\n                    value={quantity}\n                    onChange={event => {\n                      setQuantity(event.target.value)\n                    }}\n                    className=\"custom-select mr-3\"\n                    style={{ width: '5rem' }}\n                  >\n                    {sku &&\n                      sku.calculatedQATS > 0 &&\n                      [...Array(sku.calculatedQATS > 20 ? 20 : sku.calculatedQATS).keys()].map((value, index) => (\n                        <option key={index + 1} value={index + 1}>\n                          {index + 1}\n                        </option>\n                      ))}\n                  </select>\n\n                  <button disabled={cart.isFetching || !skuID} className=\"btn btn-primary btn-block\" type=\"submit\">\n                    <i className=\"far fa-shopping-cart font-size-lg mr-2\"></i>\n                    {t('frontend.product.add_to_cart')}\n                  </button>\n                </div>\n              </form>\n              {/* <!-- Product panels--> */}\n              <ProductPagePanels product={product} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst getOptionByCode = (filteredOptions, optionGroupCode, optionCode) => {\n  return filteredOptions\n    .filter(optionGroup => optionGroupCode === optionGroup.optionGroupCode)\n    .map(optionGroup => optionGroup.options.filter(option => optionCode === option.optionCode))\n    .flat()\n    .shift()\n}\nconst SkuOptions = ({ productID, skuOptionDetails, availableSkuOptions, sku, skuID }) => {\n  const [lastOption, setLastOption] = useState({ optionCode: '', optionGroupCode: '' })\n  const loc = useLocation()\n  const history = useHistory()\n  const { t } = useTranslation()\n\n  let params = queryString.parse(loc.search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n  if (lastOption.optionGroupCode.length === 0 && Object.keys(params).length > 0) {\n    setLastOption({ optionCode: Object.entries(params)[0][0], optionGroupCode: Object.entries(params)[0][1] })\n  }\n  const calculateOptions = () => {\n    let filteredOptions = skuOptionDetails\n    filteredOptions.forEach(filteredOption => {\n      filteredOption.options = filteredOption.options.map(option => {\n        option.active = true\n        return option\n      })\n    })\n    if (lastOption.optionGroupCode.length > 0) {\n      filteredOptions.forEach(filteredOption => {\n        filteredOption.options = filteredOption.options.map(option => {\n          option.active = filteredOption.optionGroupCode === lastOption.optionGroupCode || availableSkuOptions.includes(option.optionID)\n          return option\n        })\n      })\n    }\n    return filteredOptions\n  }\n  const setOption = (optionGroupCode, optionCode, active) => {\n    delete params['skuid']\n    setLastOption({ optionCode, optionGroupCode })\n    if (!active) {\n      params = {}\n    }\n    params[optionGroupCode] = optionCode\n    history.push({\n      pathname: loc.pathname,\n      search: queryString.stringify(params, { arrayFormat: 'comma' }),\n    })\n  }\n  let filteredOptions = calculateOptions()\n\n  useEffect(() => {\n    let forceSelcted = {}\n    filteredOptions.forEach(optionGroup => {\n      const selectedOptions = optionGroup.options.filter(({ active }) => {\n        return active\n      })\n      if (selectedOptions.length === 1) {\n        forceSelcted[optionGroup.optionGroupCode] = selectedOptions[0].optionCode\n      }\n    })\n    // onkect sort order\n    if (Object.keys(forceSelcted) && JSON.stringify({ ...forceSelcted, ...params }).length !== JSON.stringify(params).length && !params.skuid) {\n      console.log('Redirect because of foreced Selection')\n      history.push({\n        pathname: loc.pathname,\n        search: queryString.stringify({ ...forceSelcted, ...params }, { arrayFormat: 'comma' }),\n      })\n    }\n\n    if (params.skuid && sku) {\n      console.log('Redirect to passed Sku', skuOptionDetails)\n      const cals = skuIdsToSkuCodes(sku.selectedOptionIDList, skuOptionDetails)\n      history.push({\n        pathname: loc.pathname,\n        search: queryString.stringify(Object.assign(...cals), { arrayFormat: 'comma' }),\n      })\n    }\n  }, [history, filteredOptions, loc, params, sku, skuOptionDetails])\n\n  // searchForSelection(filteredOptions)\n  return (\n    <>\n      {filteredOptions.length > 0 &&\n        filteredOptions.map(({ optionGroupName, options, optionGroupID, optionGroupCode }) => {\n          const selectedOptionCode = params[optionGroupCode] || 'select'\n          return (\n            <div className=\"form-group\" key={optionGroupID}>\n              <div className=\"d-flex justify-content-between align-items-center pb-1\">\n                <label className=\"font-weight-medium\" htmlFor={optionGroupID}>\n                  {optionGroupName}\n                </label>\n              </div>\n              <select\n                className=\"custom-select\"\n                required\n                value={selectedOptionCode}\n                id={optionGroupID}\n                onChange={e => {\n                  const selectedOption = getOptionByCode(filteredOptions, optionGroupCode, e.target.value)\n                  setOption(optionGroupCode, selectedOption.optionCode, selectedOption.active)\n                }}\n              >\n                {selectedOptionCode === 'select' && (\n                  <option className={`option nonactive`} value=\"select\">\n                    {t('frontend.product.select')}\n                  </option>\n                )}\n                {options &&\n                  options.map(option => {\n                    return (\n                      <option className={`option ${option.active ? 'active' : 'nonactive'}`} key={option.optionID} value={option.optionCode}>\n                        {option.active && option.optionName}\n                        {!option.active && option.optionName + ' - ' + t('frontend.product.na')}\n                      </option>\n                    )\n                  })}\n              </select>\n            </div>\n          )\n        })}\n    </>\n  )\n}\n\nexport default ProductPageContent\n","import React, { useEffect, useState } from 'react'\nimport { SlatwalApiService } from '../../services'\nimport ProductSlider from '../../components/ProductSlider/ProductSlider'\nimport { renameKeysInArrayOfObjects } from '../../utils'\nimport { useTranslation } from 'react-i18next'\n\nconst ProductDetailSlider = ({ productID }) => {\n  const { t } = useTranslation()\n  const [relatedProducts, setRelatedProducts] = useState({ products: [], isLoaded: false, err: '', productID })\n  if (relatedProducts.productID !== productID) {\n    setRelatedProducts({ products: [], isLoaded: false, err: '', productID })\n  }\n  useEffect(() => {\n    let didCancel = false\n    if (!relatedProducts.isLoaded) {\n      SlatwalApiService.products.getRelatedProducts({ productID }).then(response => {\n        if (response.isSuccess() && !didCancel) {\n          let newProducts = response.success().relatedProducts\n\n          renameKeysInArrayOfObjects(newProducts, 'relatedProduct_', '')\n          setRelatedProducts({\n            ...relatedProducts,\n            isLoaded: true,\n            products: newProducts,\n          })\n        } else {\n          setRelatedProducts({\n            ...relatedProducts,\n            isLoaded: true,\n            err: 'oops',\n          })\n        }\n      })\n    }\n\n    return () => {\n      didCancel = true\n    }\n  }, [relatedProducts, setRelatedProducts, productID])\n  return <ProductSlider title={t('frontend.product.related')} sliderData={relatedProducts.products} />\n}\nexport default ProductDetailSlider\n","// import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\n\nimport { Layout } from '../../components'\nimport ProductPageHeader from './ProductPageHeader'\nimport ProductPageContent from './ProductPageContent'\nimport ProductDetailSlider from './ProductDetailSlider'\nimport { Redirect, useHistory, useLocation } from 'react-router-dom'\nimport { useGetEntity, useGetProductAvailableSkuOptions } from '../../hooks/useAPI'\nimport queryString from 'query-string'\nimport { Helmet } from 'react-helmet'\nconst skuCodesToSkuIds = (params, productOptionGroups) => {\n  const parsedOptions = queryString.parse(params, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n  const temp = Object.keys(parsedOptions).map(optionGroupCode => {\n    return productOptionGroups\n      .map(optionGroup => {\n        const optCount = optionGroup.options.filter(option => {\n          return option.optionCode === parsedOptions[optionGroupCode]\n        })[0]\n        return optCount ? optCount.optionID : null\n      })\n      .filter(option => option)\n  })\n  return temp.join()\n}\n\nconst skuIdsToSkuCodes = (idList, productOptionGroups) => {\n  return productOptionGroups\n    .map(optionGroup =>\n      optionGroup.options\n        .filter(option => {\n          return idList.includes(option.optionID)\n        })\n        .map(option => {\n          let payload = {}\n          payload[optionGroup.optionGroupCode] = option.optionCode\n          return payload\n        })\n    )\n    .flat()\n}\nconst ProductDetail = props => {\n  let { pathname, search } = useLocation()\n  let [skuOptions, getSkuOptionsRequest] = useGetProductAvailableSkuOptions()\n  let [newproduct, getPublicProduct] = useGetEntity()\n\n  let location = useLocation()\n  let history = useHistory()\n  const [path, setPath] = useState(pathname)\n  const params = queryString.parse(search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n\n  useEffect(() => {\n    // Redirect to default sku if not provided\n    if (newproduct.isLoaded && !Object.keys(params).length) {\n      console.log('Redirect to Default Sku')\n      const cals = skuIdsToSkuCodes(newproduct.data[0].defaultSelectedOptions, newproduct.data[0].optionGroups)\n      history.push({\n        pathname: location.pathname,\n        search: queryString.stringify(Object.assign(...cals), { arrayFormat: 'comma' }),\n      })\n    }\n    // get the sku\n    if (newproduct.isLoaded && !skuOptions.isFetching && !skuOptions.isLoaded) {\n      const selectedOptionIDList = skuCodesToSkuIds(search, newproduct.data[0].optionGroups)\n      getSkuOptionsRequest({\n        ...skuOptions,\n        isFetching: true,\n        isLoaded: false,\n        params: {\n          productID: newproduct.data[0].productID,\n          skuID: params['skuid'],\n          // Accounts for First Load\n          selectedOptionIDList: selectedOptionIDList.length ? selectedOptionIDList : newproduct.data[0].defaultSelectedOptions,\n        },\n        makeRequest: true,\n      })\n    }\n    // http://localhost:3006/product/demo-product?skuid=2c91808278f0fded0178f5d49b860da8\n\n    history.listen(location => {\n      if (!newproduct.isFetching && newproduct.isLoaded) {\n        const selectedOptionIDList = skuCodesToSkuIds(location.search, newproduct.data[0].optionGroups)\n        getSkuOptionsRequest({\n          ...skuOptions,\n          isFetching: true,\n          isLoaded: false,\n          params: {\n            productID: newproduct.data[0].productID,\n            // Accounts for First Load\n            selectedOptionIDList,\n          },\n          makeRequest: true,\n        })\n      }\n    })\n  }, [history, getSkuOptionsRequest, skuOptions, params, search, location, newproduct])\n\n  // Do we have a valid product?\n  if (!newproduct.isFetching && newproduct.isLoaded && newproduct.data[0] && Object.keys(newproduct.data[0]).length === 0) {\n    return <Redirect to=\"/404\" />\n  }\n  // Get the Product on page chnage\n  if (pathname !== path) {\n    console.log('Refresh all')\n    const parsedOptions = queryString.parse(location.search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n    setPath(pathname)\n\n    // getSkuOptionsRequest({\n    //   ...skuOptions,\n    //   isFetching: false,\n    //   isLoaded: false,\n    //   params: {\n    //     productID: newproduct.data[0].productID,\n    //     selectedOptionIDList: Object.keys(parsedOptions)\n    //       .map(optionGroupCode => {\n    //         return newproduct.data[0].optionGroups\n    //           .map(optionGroup => {\n    //             const optCount = optionGroup.options.filter(option => {\n    //               return option.optionCode === parsedOptions[optionGroupCode]\n    //             })[0]\n    //             return optCount ? optCount.optionID : null\n    //           })\n    //           .filter(option => option)[0]\n    //       })\n    //       .join(),\n    //   },\n    //   makeRequest: false,\n    // })\n  }\n  if (!newproduct.isFetching && !newproduct.isLoaded) {\n    const urlTitle = pathname.split('/').reverse()\n    setPath(pathname)\n    getPublicProduct({\n      ...newproduct,\n      params: {\n        'f:urlTitle': urlTitle[0],\n      },\n      entity: 'product',\n      makeRequest: true,\n      isFetching: true,\n      isLoaded: false,\n    })\n  }\n\n  return (\n    <Layout>\n      <div className=\"bg-light p-0\">\n        {newproduct.isLoaded && <ProductPageHeader title={newproduct.data[0].productSeries} />}\n        {newproduct.isLoaded && <Helmet title={newproduct.data[0].calculatedTitle} />}\n        {newproduct.isLoaded && newproduct.data[0].productID && <ProductPageContent product={newproduct.data[0]} sku={skuOptions.data.sku[0]} skuID={skuOptions.data.skuID} availableSkuOptions={skuOptions.data.availableSkuOptions} productOptions={newproduct.data[0].optionGroups} isFetching={skuOptions.isFetching || newproduct.isFetching} />}\n        {newproduct.isLoaded && newproduct.data[0].productID && <ProductDetailSlider productID={newproduct.data[0].productID} />}\n      </div>\n    </Layout>\n  )\n}\n\nexport default ProductDetail\n"],"sourceRoot":""}