{"version":3,"sources":["hooks/index.js","pages/ProductDetail/ProductPageHeader.js","pages/ProductDetail/ProductDetailGallery.js","pages/ProductDetail/ProductPagePanels.js","pages/ProductDetail/ProductPageContent.js","pages/ProductDetail/ProductDetailSlider.js","pages/ProductDetail/ProductDetail.js"],"names":["ProductPageHeader","title","className","ProductDetailGallery","productID","skuID","useGetProductImageGallery","productImageGallery","setRequest","useState","nav1","nav2","sliders","setSliders","slider1","useRef","slider2","useEffect","current","isLoaded","isFetching","params","makeRequest","filterImages","data","images","filter","ASSIGNEDSKUIDLIST","TYPE","includes","length","ORIGINALPATH","NAME","id","arrows","asNavFor","ref","slider","map","customPath","src","alt","style","maxWidth","infinite","slidesToShow","swipeToSlide","focusOnSelect","propertyBlackList","ProductPagePanels","useGetEntityByID","request","propertiesToDisplay","didCancel","entity","entityID","Object","keys","property","startsWith","trim","key","replace","value","href","role","data-toggle","aria-expanded","aria-controls","data-parent","ProductPageContent","productName","productClearance","productDescription","productCode","dispatch","useDispatch","t","useTranslation","loc","useLocation","useGetSku","sku","useGetProductSkus","skus","setSkusRequest","useGetProductAvailableSkuOptions","skuOptions","setOptionsRequest","useGetProductSkuSelected","skuSelected","setSlectedRequest","lastOptionGoupID","setLastOptionGoupID","usePush","location","pathname","push","setPush","quantity","setQuantity","refs","React","createRef","search","shouldRedirect","time","selectedOptionIDList","skuCode","dangerouslySetInnerHTML","__html","onSubmit","event","preventDefault","addToCart","window","scrollTo","top","behavior","options","index","optionGroupName","optionGroupID","selectOptions","optionID","join","selectOption","option","filteredOptions","opt","availableSkuOptions","htmlFor","required","onChange","e","reduce","acc","target","optionName","salePrice","price","listPrice","width","calculatedQATS","Array","type","ProductDetailSlider","products","err","relatedProducts","setRelatedProducts","SlatwalApiService","getRelatedProducts","then","response","isSuccess","newProducts","success","renameKeysInArrayOfObjects","ProductSlider","sliderData","ProductDetail","props","useRedirect","redirect","setRedirect","useGetProductDetails","path","setPath","queryString","parse","arrayFormat","arrayFormatSeparator","urlTitle","split","reverse","calculatedTitle","skuid"],"mappings":"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","file":"static/js/7.11d9867f.chunk.js","sourcesContent":["import { useGetEntity, useGetEntityByID, useGetSku, useGetProductDetails, useGetBrand, useGetBrands, useGetProductList, useGetProducts, useGetAvailableShippingMethods, useGetAvailablePaymentMethods, useAddWishlistItem, useGetOrderDetails, useGetAllOrders, useAddOrderShippingAddress, useGetFavouriteProducts, useGetSkuList, useGetProductSkus, useGetProductAvailableSkuOptions, useGetProductSkuSelected, useGetProductImageGallery } from './useAPI'\nimport useFormatCurrency from './useFormatCurrency'\nimport { useFormatDate, useFormatDateTime, useFormatTime } from './useFormatDate'\nimport { useRedirect, usePush } from './useRedirect'\n\nexport { useGetEntity, useGetEntityByID, useGetSku, useGetProductDetails, useGetBrand, useGetBrands, useGetProductList, useGetProducts, useGetAvailableShippingMethods, useGetAvailablePaymentMethods, useAddWishlistItem, useGetOrderDetails, useGetAllOrders, useAddOrderShippingAddress, useGetFavouriteProducts, useGetSkuList, useGetProductSkus, useGetProductAvailableSkuOptions, useGetProductSkuSelected, useGetProductImageGallery, useFormatCurrency, useFormatDate, useFormatDateTime, useFormatTime, useRedirect, usePush }\n","import { BreadCrumb } from '../../components'\n\nconst ProductPageHeader = ({ title = '' }) => {\n  return (\n    <div className=\"page-title-overlap bg-lightgray pt-4\">\n      <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n        <div className=\"order-lg-2 mb-3 mb-lg-0 pt-lg-2\">\n          <BreadCrumb />\n        </div>\n        <div className=\"order-lg-1 pr-lg-4 text-center text-lg-left\">\n          <h1 className=\"h3 text-dark mb-0 font-accent\">{title}</h1>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductPageHeader\n","import React, { useEffect, useRef, useState } from 'react'\nimport Slider from 'react-slick'\nimport { SWImage } from '../../components'\nimport { useGetProductImageGallery } from '../../hooks/useAPI'\n\n/*\n\nProbably should move to this eventually \nhttps://react-slick.neostack.com/docs/example/custom-paging\n*/\nconst ProductDetailGallery = ({ productID, skuID }) => {\n  let [productImageGallery, setRequest] = useGetProductImageGallery()\n  const [sliders, setSliders] = useState({\n    nav1: null,\n    nav2: null,\n  })\n  const slider1 = useRef()\n  const slider2 = useRef()\n  useEffect(() => {\n    setSliders({\n      nav1: slider1.current,\n      nav2: slider2.current,\n    })\n    if (!productImageGallery.isLoaded && !productImageGallery.isFetching) {\n      setRequest({ ...productImageGallery, isFetching: true, isLoaded: false, params: { productID }, makeRequest: true })\n    }\n  }, [productImageGallery, setRequest, productID])\n  let filterImages = productImageGallery.isLoaded\n    ? productImageGallery.data.images.filter(({ ASSIGNEDSKUIDLIST = false, TYPE }) => {\n        return TYPE === 'skuDefaultImage' || (ASSIGNEDSKUIDLIST && ASSIGNEDSKUIDLIST.includes(skuID))\n      })\n    : []\n  if (filterImages.length === 0) {\n    filterImages = [{ ORIGINALPATH: '', NAME: '' }]\n  }\n\n  return (\n    <div className=\"col-lg-6 pr-lg-5 pt-0\">\n      <div className=\"cz-product-gallery\">\n        <div className=\"cz-preview order-sm-2\">\n          <div className=\"cz-preview-item active\" id=\"first\">\n            <div>\n              <Slider arrows={false} asNavFor={sliders.nav2} ref={slider => (slider1.current = slider)}>\n                {productImageGallery.isLoaded &&\n                  filterImages.map(({ ORIGINALPATH, NAME }) => {\n                    return <SWImage key={NAME} customPath=\"/\" src={ORIGINALPATH} className=\"cz-image-zoom w-100 mx-auto\" alt=\"Product\" style={{ maxWidth: '500px' }} />\n                  })}\n              </Slider>\n            </div>\n            <div className=\"cz-image-zoom-pane\"></div>\n          </div>\n        </div>\n      </div>\n      <div className=\"cz-product-gallery\">\n        <div className=\"cz-preview order-sm-2\">\n          <div className=\"cz-preview-item active\" id=\"first\">\n            <div>\n              {filterImages.length > 1 && (\n                <Slider arrows={false} infinite={filterImages.length > 3} asNavFor={sliders.nav1} ref={slider => (slider2.current = slider)} slidesToShow={3} swipeToSlide={true} focusOnSelect={true}>\n                  {productImageGallery.isLoaded &&\n                    filterImages.map(({ ORIGINALPATH, NAME }) => {\n                      return <SWImage key={NAME} customPath=\"/\" src={ORIGINALPATH} className=\"cz-image-zoom w-100 mx-auto\" alt=\"Product\" style={{ maxWidth: '100px' }} />\n                    })}\n                </Slider>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ProductDetailGallery\n","import { useEffect } from 'react'\nimport { useGetEntityByID } from '../../hooks'\n\nconst propertyBlackList = ['productID', 'productName', 'productCode']\n\n// TODO: Migrate to reactstrap accordion\nconst ProductPagePanels = ({ productID }) => {\n  let [request, setRequest] = useGetEntityByID()\n  let propertiesToDisplay = []\n  useEffect(() => {\n    let didCancel = false\n    if (!request.isFetching && !request.isLoaded && !didCancel) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, entity: 'product', params: { entityID: productID }, makeRequest: true })\n    }\n    return () => {\n      didCancel = true\n    }\n  }, [request, setRequest, productID])\n\n  if (request.isLoaded) {\n    propertiesToDisplay = Object.keys(request.data)\n      .filter(property => {\n        return property.startsWith('product') && !propertyBlackList.includes(property) && request.data[property].trim().length > 0\n      })\n      .map(property => {\n        return { key: property.replace('product', ''), value: request.data[property] }\n      })\n  }\n\n  return (\n    <div className=\"accordion mb-4\" id=\"productPanels\">\n      {/* <div className=\"alert alert-danger\" role=\"alert\">\n        <i className=\"far fa-exclamation-circle\"></i> This item is not eligable for free freight\n      </div> */}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"accordion-heading\">\n            <a href=\"#productInfo\" role=\"button\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"productInfo\">\n              <i className=\"far fa-key font-size-lg align-middle mt-n1 mr-2\"></i>\n              Product info<span className=\"accordion-indicator\"></span>\n            </a>\n          </h3>\n        </div>\n        <div className=\"collapse show\" id=\"productInfo\" data-parent=\"#productPanels\">\n          <div className=\"card-body\">\n            <div className=\"font-size-sm row\">\n              <div className=\"col-6\">\n                <ul>\n                  {request.isLoaded &&\n                    propertiesToDisplay.map(({ key }) => {\n                      return <li key={key}>{key}:</li>\n                    })}\n                </ul>\n              </div>\n              <div className=\"col-6 text-muted\">\n                <ul>\n                  {request.isLoaded &&\n                    propertiesToDisplay.map(({ key, value }) => {\n                      return <li key={key}>{value}</li>\n                    })}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"accordion-heading\">\n            <a className=\"collapsed\" href=\"#technicalinfo\" role=\"button\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"technicalinfo\">\n              <i className=\"far fa-drafting-compass align-middle mt-n1 mr-2\"></i>\n              Technical Info<span className=\"accordion-indicator\"></span>\n            </a>\n          </h3>\n        </div>\n        <div className=\"collapse\" id=\"technicalinfo\" data-parent=\"#productPanels\">\n          <div className=\"card-body font-size-sm\">\n            <div className=\"d-flex justify-content-between border-bottom py-2\">\n              <div className=\"font-weight-semibold text-dark\">Document Title</div>\n              <a href=\"?=doc\">Download</a>\n            </div>\n            <div className=\"d-flex justify-content-between border-bottom py-2\">\n              <div className=\"font-weight-semibold text-dark\">Document Title</div>\n              <a href=\"?=doc\">Download</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"accordion-heading\">\n            <a className=\"collapsed\" href=\"#questions\" role=\"button\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"questions\">\n              <i className=\"far fa-question-circle font-size-lg align-middle mt-n1 mr-2\"></i>\n              Questions?<span className=\"accordion-indicator\"></span>\n            </a>\n          </h3>\n        </div>\n        <div className=\"collapse\" id=\"questions\" data-parent=\"#productPanels\">\n          <div className=\"card-body\">\n            <p>Have questions about this product?</p>\n            <a href=\"/contact\">Contact Us</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductPagePanels\n","import ProductDetailGallery from './ProductDetailGallery'\nimport ProductPagePanels from './ProductPagePanels'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { addToCart } from '../../actions/cartActions'\nimport { useDispatch } from 'react-redux'\nimport { HeartButton, ProductPrice } from '../../components'\nimport { useTranslation } from 'react-i18next'\nimport { useGetSku, useGetProductSkus, useGetProductAvailableSkuOptions, useGetProductSkuSelected } from '../../hooks/useAPI'\nimport { useLocation } from 'react-router'\nimport { usePush } from '../../hooks/useRedirect'\n\nconst ProductPageContent = ({ productID, productName, productClearance, productCode, productDescription, skuID }) => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  let loc = useLocation()\n  let [sku, setRequest] = useGetSku()\n  let [skus, setSkusRequest] = useGetProductSkus()\n  let [skuOptions, setOptionsRequest] = useGetProductAvailableSkuOptions()\n  let [skuSelected, setSlectedRequest] = useGetProductSkuSelected()\n  const [lastOptionGoupID, setLastOptionGoupID] = useState('')\n  let [push, setPush] = usePush({ location: loc.pathname })\n\n  const [quantity, setQuantity] = useState(1)\n  const refs = useRef([React.createRef(), React.createRef(), React.createRef(), React.createRef(), React.createRef(), React.createRef()])\n\n  if (skuSelected.isLoaded) {\n    setSlectedRequest({ data: {}, isFetching: false, isLoaded: false, params: {}, makeRequest: false })\n    setRequest({ ...sku, isFetching: true, isLoaded: false, params: { 'f:skuID': skuSelected.data.skuID || skus.data.skus[0].skuID }, makeRequest: true })\n    setPush({ ...push, search: `?skuid=${skuSelected.data.skuID || skus.data.skus[0].skuID}`, shouldRedirect: true, time: 200 })\n  }\n\n  useEffect(() => {\n    if (!skus.isFetching && !skus.isLoaded) {\n      setSkusRequest({ ...skus, isFetching: true, isLoaded: false, params: { productID }, makeRequest: true })\n    }\n    if ((skuID || (skus.isLoaded && skus.data.skus[0])) && !sku.isFetching && !sku.isLoaded) {\n      setRequest({ ...sku, isFetching: true, isLoaded: false, params: { 'f:skuID': skuID || skus.data.skus[0].skuID }, makeRequest: true })\n    }\n    if (!skuOptions.isFetching && !skuOptions.isLoaded && sku.isLoaded) {\n      setOptionsRequest({\n        ...skuOptions,\n        isFetching: true,\n        isLoaded: false,\n        params: {\n          productID,\n          selectedOptionIDList: '',\n        },\n        makeRequest: true,\n      })\n    }\n  }, [setSkusRequest, skus, productID, sku, setRequest, setOptionsRequest, skuOptions, skuID])\n\n  return (\n    <div className=\"container bg-light box-shadow-lg rounded-lg px-4 py-3 mb-5\">\n      <div className=\"px-lg-3\">\n        <div className=\"row\">\n          <ProductDetailGallery productID={productID} skuID={sku.data.skuID} />\n          {/* <!-- Product details--> */}\n          <div className=\"col-lg-6 pt-0\">\n            <div className=\"product-details pb-3\">\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                <span className=\"d-inline-block font-size-sm align-middle px-2 bg-primary text-light\"> {productClearance === true && ' On Special'}</span>\n                <HeartButton skuID={sku.data.skuID} className={'btn-wishlist mr-0 mr-lg-n3'} />\n              </div>\n              <h2 className=\"h4 mb-2\">{productName}</h2>\n              <div className=\"mb-2\">\n                <span className=\"text-small text-muted\">{`SKU: `}</span>\n                <span className=\"h4 font-weight-normal text-large text-accent mr-1\">{sku.data.skuCode}</span>\n              </div>\n              <div\n                className=\"mb-3 font-weight-light font-size-small text-muted\"\n                dangerouslySetInnerHTML={{\n                  __html: productDescription,\n                }}\n              />\n              <form\n                className=\"mb-grid-gutter\"\n                onSubmit={event => {\n                  event.preventDefault()\n                  dispatch(addToCart(sku.data.skuID, quantity))\n                  window.scrollTo({\n                    top: 0,\n                    behavior: 'smooth',\n                  })\n                }}\n              >\n                {skus.isLoaded &&\n                  skuOptions.isLoaded &&\n                  skus.data.options.length > 0 &&\n                  skus.data.options.map(({ optionGroupName, options, optionGroupID }, index) => {\n                    let selectOptions = sku.data.options\n                      .map(options => {\n                        return options.optionID\n                      })\n                      .join()\n                    const selectOption = options.filter(option => {\n                      return selectOptions.includes(option.optionID)\n                    })\n                    let filteredOptions = options\n                    if (lastOptionGoupID !== optionGroupID) {\n                      filteredOptions = options.filter(opt => {\n                        return skuOptions.data.availableSkuOptions.includes(opt.optionID)\n                      })\n                    }\n\n                    if (!filteredOptions.length) {\n                      return <div key={optionGroupID}></div>\n                    }\n\n                    return (\n                      <div className=\"form-group\" key={optionGroupID}>\n                        <div className=\"d-flex justify-content-between align-items-center pb-1\">\n                          <label className=\"font-weight-medium\" htmlFor={optionGroupID}>\n                            {optionGroupName}\n                          </label>\n                        </div>\n\n                        <select\n                          className=\"custom-select\"\n                          required\n                          id={optionGroupID}\n                          ref={refs.current[index]}\n                          value={(selectOption.length > 0 && selectOption[0].optionID) || options[0]}\n                          onChange={e => {\n                            const selectedOptionIDList = refs.current.reduce((acc, ref) => (ref.current ? [...acc, ref.current.value] : acc), []).join()\n                            setOptionsRequest({\n                              ...skuOptions,\n                              isFetching: true,\n                              isLoaded: false,\n                              params: {\n                                productID,\n                                selectedOptionIDList: e.target.value,\n                              },\n                              makeRequest: true,\n                            })\n\n                            setSlectedRequest({ ...skuSelected, isFetching: true, isLoaded: false, params: { productID, selectedOptionIDList }, makeRequest: true })\n                            setLastOptionGoupID(optionGroupID)\n                          }}\n                        >\n                          {filteredOptions &&\n                            filteredOptions.map(({ optionID, optionName }) => {\n                              return (\n                                <option key={optionID} value={optionID}>\n                                  {optionName}\n                                </option>\n                              )\n                            })}\n                        </select>\n                      </div>\n                    )\n                  })}\n\n                {/* {productDetails.options.length === 0 && productDetails.skus.length > 1 && (\n                  <div className=\"form-group\">\n                    <div className=\"d-flex justify-content-between align-items-center pb-1\">\n                      <label className=\"font-weight-medium\" htmlFor=\"product-size\">\n                        {t('frontend.product.option')}\n                      </label>\n                    </div>\n\n                    <select className=\"custom-select\" required id=\"product-size\">\n                      {productDetails.skus &&\n                        productDetails.skus.map(({ skuID, calculatedSkuDefinition }) => {\n                          return (\n                            <option key={skuID} value={skuID}>\n                              {calculatedSkuDefinition}\n                            </option>\n                          )\n                        })}\n                    </select>\n                  </div>\n                )} */}\n\n                <div className=\"mb-3\">\n                  <ProductPrice salePrice={sku.data.price} listPrice={sku.data.listPrice} />\n                </div>\n                <div className=\"form-group d-flex align-items-center\">\n                  <select\n                    value={quantity}\n                    onChange={event => {\n                      setQuantity(event.target.value)\n                    }}\n                    className=\"custom-select mr-3\"\n                    style={{ width: '5rem' }}\n                  >\n                    {sku.data.calculatedQATS > 0 &&\n                      [...Array(sku.data.calculatedQATS > 20 ? 20 : sku.data.calculatedQATS).keys()].map((value, index) => (\n                        <option key={index + 1} value={index + 1}>\n                          {index + 1}\n                        </option>\n                      ))}\n                  </select>\n\n                  <button className=\"btn btn-primary btn-block\" type=\"submit\">\n                    <i className=\"far fa-shopping-cart font-size-lg mr-2\"></i>\n                    {t('frontend.product.add_to_cart')}\n                  </button>\n                </div>\n              </form>\n              {/* <!-- Product panels--> */}\n              <ProductPagePanels productID={productID} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductPageContent\n","import React, { useEffect, useState } from 'react'\nimport { SlatwalApiService } from '../../services'\nimport ProductSlider from '../../components/ProductSlider/ProductSlider'\nimport { renameKeysInArrayOfObjects } from '../../utils'\nimport { useTranslation } from 'react-i18next'\n\nconst ProductDetailSlider = ({ productID }) => {\n  const { t } = useTranslation()\n  const [relatedProducts, setRelatedProducts] = useState({ products: [], isLoaded: false, err: '', productID })\n  if (relatedProducts.productID !== productID) {\n    setRelatedProducts({ products: [], isLoaded: false, err: '', productID })\n  }\n  useEffect(() => {\n    let didCancel = false\n    if (!relatedProducts.isLoaded) {\n      SlatwalApiService.products.getRelatedProducts({ productID }).then(response => {\n        if (response.isSuccess() && !didCancel) {\n          let newProducts = response.success().relatedProducts\n\n          renameKeysInArrayOfObjects(newProducts, 'relatedProduct_', '')\n          setRelatedProducts({\n            ...relatedProducts,\n            isLoaded: true,\n            products: newProducts,\n          })\n        } else {\n          setRelatedProducts({\n            ...relatedProducts,\n            isLoaded: true,\n            err: 'oops',\n          })\n        }\n      })\n    }\n\n    return () => {\n      didCancel = true\n    }\n  }, [relatedProducts, setRelatedProducts, productID])\n  return <ProductSlider title={t('frontend.product.related')} sliderData={relatedProducts.products} />\n}\nexport default ProductDetailSlider\n","// import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\n\nimport { Layout } from '../../components'\nimport ProductPageHeader from './ProductPageHeader'\nimport ProductPageContent from './ProductPageContent'\nimport ProductDetailSlider from './ProductDetailSlider'\nimport { useLocation } from 'react-router-dom'\nimport useRedirect from '../../hooks/useRedirect'\nimport { useGetProductDetails } from '../../hooks/useAPI'\nimport queryString from 'query-string'\n\nconst ProductDetail = props => {\n  let { pathname, search } = useLocation()\n  const [redirect, setRedirect] = useRedirect({ location: '/404', time: 300 })\n  let [request, setRequest] = useGetProductDetails()\n  const [path, setPath] = useState(pathname)\n  const params = queryString.parse(search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n  useEffect(() => {\n    let didCancel = false\n    if (!didCancel && ((!request.isFetching && !request.isLoaded) || pathname !== path)) {\n      const urlTitle = pathname.split('/').reverse()\n      setPath(pathname)\n\n      setRequest({\n        ...request,\n        params: {\n          filter: {\n            current: 1,\n            urlTitle: urlTitle[0],\n          },\n        },\n        makeRequest: true,\n        isFetching: true,\n        isLoaded: false,\n      })\n    }\n    if (!request.isFetching && request.isLoaded && Object.keys(request.data).length === 0) {\n      setRedirect({ ...redirect, shouldRedirect: true })\n    }\n    return () => {\n      didCancel = true\n    }\n  }, [request, setRequest, pathname, search, path, redirect, setRedirect])\n\n  return (\n    <Layout>\n      <div className=\"bg-light p-0\">\n        <ProductPageHeader title={request.data.calculatedTitle} />\n        {request.data.productID && <ProductPageContent {...request.data} skuID={params.skuid} />}\n        {request.data.productID && <ProductDetailSlider productID={request.data.productID} />}\n      </div>\n    </Layout>\n  )\n}\n\nexport default ProductDetail\n"],"sourceRoot":""}