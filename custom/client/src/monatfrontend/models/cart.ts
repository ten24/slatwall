import cartOrderItem from './cartOrderItem'

//filler for objects that have not been defined yet so they do not error in compiler
type genericObject = { [key:string]: any };

export default interface cart {
    orderTypeCode: string,
    orderID: string ,
    VATTotal: number,
    FSNumber: string,
    importFlexshipNumber:string,
    fulfillmentDiscountAmountTotal: number,
    fulfillmentChargeAfterDiscountTotal: number,
    miscChargeAmount: string,
    promotionCodes: Array<any>,
    orderSource: string,
    redeemPoints: string,
    orderFulfillmentWithShippingMethodOptionsIndex: number,
    errors: genericObject,
    calculatedPersonalVolumeSubtotal: number,
    orderRequirementsList: string,
    orderPartnerNumber: string,
    billingAddress: genericObject,
    undeliverableOrderReasons: string,
    commissionPeriodCode: string ,
    orderAndItemDiscountAmountTotal: number,
    orderStatusCode: string,
    orderItems: Array<cartOrderItem>,
    orderCountryCode: string,
    subtotal: number,
    businessDate: string,
    requiresFulfillment: boolean,
    processObjects: genericObject,
    remoteAmountTotal: string,
    commissionPeriod: string,
    fulfillmentTotal: number,
    orderAccountNumber: string,
    orderFulfillments: Array<genericObject>,
    hasErrors: false,
    orderPayments: Array<genericObject>,
    total: number,
    currencyCode: string,
    importOriginalRMANumber: string,
    appliedPromotionMessages: Array<any>,
    monatOrderType: genericObject,
    priceLevelCode: string,
    promotionCodeList: string,
    messages:genericObject,
    totalItemQuantity: number,
    taxTotal: number,
    discountTotal: number,
    orderSourceCode: string,
    invoiceNumber: string,
    orderNotes: string,
    eligiblePaymentMethodDetails: Array<genericObject>,
    calculatedTotal: number,
    initialOrderFlag: string,
    orderOpenDateTime: string,
    purchasePlusTotal:number
}

