{"version":3,"sources":["components/Account/AccountContent/AccountContent.js","components/Account/AccountProfile/AccountProfile.js"],"names":["AccountContent","history","useHistory","loc","useLocation","useSelector","state","content","pathname","substring","customBody","contentTitle","className","onClick","event","preventDefault","target","getAttribute","push","dangerouslySetInnerHTML","__html","AccountProfile","crumbs","title","dispatch","useDispatch","MySwal","withReactContent","Swal","useTranslation","t","user","i18n","userReducer","formik","useFormik","enableReinitialize","initialValues","accountFirstName","firstName","accountLastName","lastName","accountEmailAddress","primaryEmailAddress","emailAddress","accountCompany","company","onSubmit","values","updateUser","returnJSONObjects","handleSubmit","htmlFor","type","id","value","onChange","handleChange","disabled","fire","html","focusConfirm","showCancelButton","preConfirm","document","getElementById","then","data","isConfirmed","length","SlatwalApiService","account","changePassword","password","passwordConfirm","response","isSuccess","success","successfulActions","toast","error","errors","join"],"mappings":"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","file":"static/js/24.84a8357b.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst AccountContent = () => {\n  let history = useHistory()\n  let loc = useLocation()\n  const content = useSelector(state => state.content[loc.pathname.substring(1)])\n  const { customBody = '', contentTitle = '' } = content || {}\n  return (\n    <>\n      <div className=\"d-flex justify-content-between align-items-center pt-lg-2 pb-4 pb-lg-5 mb-lg-3\">\n        <div className=\"d-flex justify-content-between w-100\">\n          <h2 className=\"h3\">{contentTitle}</h2>\n        </div>\n      </div>\n\n      <div\n        onClick={event => {\n          event.preventDefault()\n          if (event.target.getAttribute('href')) {\n            history.push(event.target.getAttribute('href'))\n          }\n        }}\n        dangerouslySetInnerHTML={{\n          __html: customBody,\n        }}\n      />\n    </>\n  )\n}\nexport default AccountContent\n","import { useDispatch, useSelector } from 'react-redux'\nimport { AccountLayout } from '../AccountLayout/AccountLayout'\nimport AccountContent from '../AccountContent/AccountContent'\nimport { useFormik } from 'formik'\nimport { updateUser } from '../../../actions/userActions'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { toast } from 'react-toastify'\nimport { SlatwalApiService } from '../../../services'\nimport { useTranslation } from 'react-i18next'\n\nconst AccountProfile = ({ crumbs, title, customBody, contentTitle }) => {\n  const dispatch = useDispatch()\n  const MySwal = withReactContent(Swal)\n  const { t, i18n } = useTranslation()\n  const user = useSelector(state => state.userReducer)\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      accountFirstName: user.firstName,\n      accountLastName: user.lastName,\n      accountEmailAddress: user.primaryEmailAddress.emailAddress,\n      // accountPhoneNumber: user.primaryPhoneNumber.phoneNumber,\n      // accountExt: '',\n      accountCompany: user.company,\n    },\n    onSubmit: values => {\n      dispatch(\n        updateUser({\n          firstName: values.accountFirstName,\n          lastName: values.accountLastName,\n          emailAddress: values.accountEmailAddress,\n          company: values.accountCompany,\n          returnJSONObjects: 'account',\n        })\n      )\n    },\n  })\n\n  const updatePassword = event => {\n    event.preventDefault()\n\n    MySwal.fire({\n      title: 'Update Password',\n      html: '<input id=\"accountPassword\" placeholder=\"Password\" class=\"swal2-input\"><input id=\"accountPasswordConfirm\" placeholder=\"Confirm Password\" class=\"swal2-input\">',\n      focusConfirm: false,\n      showCancelButton: true,\n      preConfirm: () => {\n        return [document.getElementById('accountPassword').value, document.getElementById('accountPasswordConfirm').value]\n      },\n    }).then(data => {\n      if (data.isConfirmed) {\n        if (data.value.length === 2 && data.value[0] === data.value[1]) {\n          SlatwalApiService.account\n            .changePassword({\n              password: data.value[0],\n              passwordConfirm: data.value[1],\n            })\n            .then(response => {\n              if (response.isSuccess()) {\n                if (response.success().successfulActions.length) {\n                  toast.success('Password Update Successful')\n                } else {\n                  toast.error(response.success().errors.password.join(' '))\n                }\n              } else {\n                toast.error('Network Error')\n              }\n            })\n        } else {\n          toast.error('Password Mismatch')\n        }\n      }\n    })\n  }\n\n  return (\n    <AccountLayout crumbs={crumbs} title={title}>\n      <AccountContent customBody={customBody} contentTitle={contentTitle} />\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"accountFirstName\">{t('frontend.account.first_name')}</label>\n              <input className=\"form-control\" type=\"text\" id=\"accountFirstName\" value={formik.values.accountFirstName} onChange={formik.handleChange} />\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"accountLastName\">{t('frontend.account.last_name')}</label>\n              <input className=\"form-control\" type=\"text\" id=\"accountLastName\" value={formik.values.accountLastName} onChange={formik.handleChange} />\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"accountEmailAddress\">{t('frontend.account.email')}</label>\n              <input className=\"form-control\" type=\"accountEmailAddress\" id=\"accountEmailAddress\" value={formik.values.accountEmailAddress} onChange={formik.handleChange} disabled=\"\" />\n            </div>\n          </div>\n          {/* <div className=\"col-sm-4\">\n            <div className=\"form-group\">\n              <label htmlFor=\"accountPhoneNumber\">Phone Number</label>\n              <input className=\"form-control\" type=\"text\" id=\"accountPhoneNumber\" value={formik.values.accountPhoneNumber} onChange={formik.handleChange} required=\"\" />\n            </div>\n          </div>\n          <div className=\"col-sm-2\">\n            <div className=\"form-group\">\n              <label htmlFor=\"accountExt\">Ext.</label>\n              <input className=\"form-control\" type=\"text\" id=\"accountExt\" value={formik.values.accountExt} onChange={formik.handleChange} required=\"\" />\n            </div>\n          </div> */}\n          <div className=\"col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"accountCompany\">{t('frontend.account.company')}</label>\n              <input className=\"form-control\" value={formik.values.accountCompany} type=\"text\" onChange={formik.handleChange} id=\"accountCompany\" />\n            </div>\n          </div>\n          <div className=\"col-12\">\n            <hr className=\"mt-2 mb-3\" />\n            <div className=\"d-flex flex-wrap justify-content-end\">\n              <button className=\"btn btn-secondary mt-3 mt-sm-0 mr-3\" onClick={updatePassword} type=\"submit\">\n                {t('frontend.account.password_update')}\n              </button>\n              <button type=\"submit\" className=\"btn btn-primary mt-3 mt-sm-0\">\n                {t('frontend.account.profile_update')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </AccountLayout>\n  )\n}\n\nexport default AccountProfile\n"],"sourceRoot":""}