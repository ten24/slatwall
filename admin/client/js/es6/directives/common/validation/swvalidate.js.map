{"version":3,"sources":["directives/common/validation/swvalidate.ts"],"names":["validate","checkHasValidationType","map","forEach","getNamesFromObject","validate_RegExp","validate_MinValue","validate_MaxValue","validate_MinLength","validate_MaxLength","validate_Eq","validate_Neq","validate_Lte","validate_Gte","validate_EqProperty","validate_IsNumeric","validate_Required"],"mappings":"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","file":"directives/common/validation/swvalidate.js","sourceRoot":"/Users/david/Sites/Slatwall/","sourcesContent":["/**\n * This validate directive will look at the current element, figure out the context (save, edit, delete) and \n * validate based on that context as defined in the validation properties object.\n */\n'use strict';\nangular.module('slatwalladmin').directive('swValidate',\n\n[ '$log','$slatwall', function($log, $slatwall) {\n\n\treturn {\n\t\t\n\t\trestrict : \"A\",\n\t\trequire : '^ngModel',\n\t\tlink : function(scope, elem, attr, ngModel) {\n\t\t\t\n\t\t\t//Define our contexts and validation property enums.\n\t\t\tvar ContextsEnum  = {\n\t\t\t\t\t\tSAVE: {name: \"save\", value: 0},\n\t\t\t\t\t\tDELETE: {name: \"delete\", value: 1},\n\t\t\t\t\t\tEDIT: {name: \"edit\", value: 2}\n\t\t\t};\n\t\t\tvar ValidationPropertiesEnum = {\n\t\t\t\t\tREGEX: {name: \"regex\", value: 0},\n\t\t\t\t\tMIN_VALUE: {name: \"minValue\", value: 1},\n\t\t\t\t\tMAX_VALUE: {name: \"maxValue\", value: 2},\n\t\t\t\t\tEQ: {name: \"eq\", value: 3},\n\t\t\t\t\tNEQ: {name: \"neq\", value: 4},\n\t\t\t\t\tUNIQUE: {name: \"unique\", value: 5},\n\t\t\t\t\tLTE: {name: \"lte\", value: 6},\n\t\t\t\t\tGTE: {name: \"gte\", value: 7},\n\t\t\t\t\tMIN_LENGTH: {name: \"minLength\", value: 8},\n\t\t\t\t\tMAX_LENGTH: {name: \"maxLength\", value: 9},\n\t\t\t\t\tDATA_TYPE: {name: \"dataType\", value: 10},\n\t\t\t\t\tREQUIRED: {name: \"required\", value: 11}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\tscope.validationPropertiesEnum = ValidationPropertiesEnum;\n\t\t\tscope.contextsEnum = ContextsEnum;\n\t\t\t\n\t\t\tvar myCurrentContext = scope.contextsEnum.SAVE; //We are only checking the save context right now.\n\t\t\tvar contextNamesArray = getNamesFromObject(ContextsEnum); //Convert for higher order functions.\n\t\t\tvar validationPropertiesArray = getNamesFromObject(ValidationPropertiesEnum);\t //Convert for higher order functions.\n\t\t\tvar validationObject = scope.propertyDisplay.object.validations.properties;//Get the scope validation object.\n\t\t\tvar errors = scope.propertyDisplay.errors;\n\t\t\tvar errorMessages = [];\n\t\t\tvar failFlag = 0;\n\t\t\t\n\t\t\t/**\n\t\t\t * Iterates over the validation object looking for the current elements validations, maps that to a validation function list\n\t\t\t * and calls those validate functions. When a validation fails, an error is set, the elements border turns red.\n\t\t\t */\n\t\t\tfunction validate(name, context, elementValue) {\n\t\t\t\tvar validationResults = {};\n\t\t\t\tvalidationResults = {\"name\": \"name\", \"context\": \"context\", \"required\": \"required\", \"error\": \"none\", \"errorkey\": \"none\"};\n\t\t\t\t\n\t\t\t\t\t\t\t\tfor ( var key in validationObject) {\n\t\t\t\t\t\t\t\t\t// Look for the current attribute in the\n\t\t\t\t\t\t\t\t\t// validation parameters.\n\t\t\t\t\t\t\t\t\tif (key === name || key === name + \"Flag\") {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Now that we have found the current\n\t\t\t\t\t\t\t\t\t\t// validation parameters, iterate\n\t\t\t\t\t\t\t\t\t\t// through them looking for\n\t\t\t\t\t\t\t\t\t\t// the required parameters that match\n\t\t\t\t\t\t\t\t\t\t// the current page context (save,\n\t\t\t\t\t\t\t\t\t\t// delete, etc.)\n\t\t\t\t\t\t\t\t\t\tfor ( var inner in validationObject[key]) {\n\t\t\t\t\t\t\t\t\t\t\tvar required = validationObject[key][inner].required || \"false\"; // Get\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// required\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tvar context = validationObject[key][inner].contexts || \"none\"; // Get\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// element\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// context\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t//Setup the validation results object to pass back to caller.\n\t\t\t\t\t\t\t\t\t\t\tvalidationResults = {\"name\": key, \"context\": context, \"required\": required, \"error\": \"none\", \"errorkey\": \"none\"};\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tvar elementValidationArr = map(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckHasValidationType,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationPropertiesArray,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationObject[key][inner]);\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t//Iterate over the array and call the validate function if it has that property.\n\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < elementValidationArr.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (elementValidationArr[i] == true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (validationPropertiesArray[i] === \"regex\" && elementValue !== \"\"){//If element is zero, need to check required \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Get the regex string to match and send to validation function.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar re = validationObject[key][inner].regex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_RegExp(elementValue, re);//true if pattern match, fail otherwise.\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Invalid input\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"REGEX\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Valid input\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"REGEX\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"minValue\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMinValue = validationObject[key][inner].minValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(validationMinValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MinValue(elementValue, validationMinValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"e>v\" + result + \" :\" + elementValue, \":\" + validationMinValue );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Minimum value is: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMinValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MIN_VALUE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MIN_VALUE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"maxValue\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMaxValue = validationObject[key][inner].maxValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MaxValue(elementValue, validationMaxValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"Max Value result is: \" + result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Maximum value is: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMaxValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MAX_VALUE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"minLength\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMinLength = validationObject[key][inner].minLength;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MinLength(elementValue, validationMinLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"Min Length result is: \" + result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Minimum length must be: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMinLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MIN_LENGTH\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"maxLength\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMaxLength = validationObject[key][inner].maxLength;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MaxLength(elementValue, validationMaxLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"Max Length result is: \" + result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Maximum length is: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMaxLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MAX_LENGTH\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"eq\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationEq = validationObject[key][inner].eq;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Eq(elementValue, validationEq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must equal \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationEq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"EQ\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"neq\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationNeq = validationObject[key][inner].neq;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Neq(elementValue, validationNeq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must not equal: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationNeq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"NEQ\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"lte\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationLte = validationObject[key][inner].lte;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Lte(elementValue, validationLte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must be less than \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationLte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"LTE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"gte\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationGte = validationObject[key][inner].gte;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Gte(elementValue, validationGte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must be greater than: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationGte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"GTE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"required\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationRequire = validationObject[key][inner].require;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Required(elementValue, validationRequire);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Required\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = ValidationPropertiesEnum[\"REQUIRED\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Required\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = ValidationPropertiesEnum[\"REQUIRED\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t}//<---end validate.\t\t\t\n}\n\t\t\t/**\n\t\t\t * Function to map if we need a validation on this element.\n\t\t\t */\n\t\t\tfunction checkHasValidationType(validationProp, validationType){\n\t\t\t\tif (validationProp[validationType] != undefined) {\n\t\t\t\t\treturn true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Iterates over the properties object finding which types of validation are needed.\n\t\t\t */\n\t\t\tfunction map(func, array, obj) {\n\t\t\t\t  var result = [];\n\t\t\t\t  forEach(array, function (element) {\n\t\t\t\t    result.push(func(obj, element));\n\t\t\t\t  });\n\t\t\t\t  return result;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Array iteration helper. \n\t\t\t */\n\t\t\tfunction forEach(array, action) {\n\t\t\t\t  for (var i = 0; i < array.length; i++)\n\t\t\t\t    action(array[i]);\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Helper function to read all the names in our enums into an array that the higher order functions can use.\n\t\t\t */\n\t\t\tfunction getNamesFromObject(obj){\n\t\t\t\tvar result = [];\n\t\t\t\tfor (var i in obj){\n\t\t\t\t\tvar name = obj[i].name || \"stub\";\n\t\t\t\t\tresult.push(name);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\t\n\t\t\t\n\t\t\t/**\n\t\t\t * Tests the value for a RegExp match given by the pattern string. \n\t\t\t * Validates true if pattern match, false otherwise.\n\t\t\t */\n\t\t\tfunction validate_RegExp(value, pattern){\n\t\t\t\tvar regex = new RegExp(pattern);\n\t\t\t\tif (regex.test(value)){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if userValue >= minValue (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MinValue(userValue, minValue){\n\t\t\t\treturn (userValue >= minValue);\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if userValue <= maxValue (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MaxValue(userValue, maxValue){\n\t\t\t\treturn (userValue <= maxValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if length of the userValue >= minLength (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MinLength(userValue, minLength){\n\t\t\t\treturn (userValue.length >= minLength) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if length of the userValue <= maxLength (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MaxLength(userValue, maxLength){\n\t\t\t\treturn (userValue.length <= maxLength) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue == eqValue \n\t\t\t */\n\t\t\tfunction validate_Eq(userValue, eqValue){\n\t\t\t\treturn (userValue == eqValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue != neqValue \n\t\t\t */\n\t\t\tfunction validate_Neq(userValue, neqValue){\n\t\t\t\treturn (userValue != neqValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue < decisionValue (exclusive)\n\t\t\t */\n\t\t\tfunction validate_Lte(userValue, decisionValue){\n\t\t\t\treturn (userValue < decisionValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue > decisionValue (exclusive)\n\t\t\t */\n\t\t\tfunction validate_Gte(userValue, decisionValue){\n\t\t\t\treturn (userValue > decisionValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue === property\n\t\t\t */\n\t\t\tfunction validate_EqProperty(userValue, property){\n\t\t\t\treturn (userValue === property) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the given value is !NaN (Negate, Not a Number).\n\t\t\t */\n\t\t\tfunction validate_IsNumeric(value){\n\t\t\t    return !isNaN(value) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the given userValue is empty and the field is required. \n\t\t\t */\n\t\t\tfunction validate_Required(property, userValue){\n\t\t\t    return (userValue == \"\" && property == true) ? true : false;\t\t\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles the 'eager' validation on every key press.\n\t\t\t */\n\t\t\tngModel.$parsers.unshift(function(value) {\n\t\t\t\tvar name = elem.context.name;//Get the element name for the validate function.\n\t\t\t\tvar currentValue = elem.val(); //Get the current element value to check validations against.\n\t\t\t\tvar val = validate(name, myCurrentContext, currentValue) || {};\n\t\t\t\t//Check if field is required.\t\t\t\t\n\t\t\t\t$log.debug(scope);\n\t\t\t\t$log.debug(val);\n\t\t\t\tngModel.$setValidity(val.errorkey, !val.fail);\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t});//<---end $parsers\n\t\t\t\n\t\t\t/**\n\t\t\t * This handles 'lazy' validation on blur.\n\t\t\t */\n\t\t\telem.bind('blur', function(e){\t\t\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t};\n} ]);"]}