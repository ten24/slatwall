{"version":3,"sources":["pages/ProductType/ProductType.js"],"names":["ProductType","productTypeRoute","useSelector","getProductTypeRoute","productTypeBase","state","configuration","filtering","id","useParams","history","useHistory","useGetEntity","productTypeRequest","setProductTypeRequest","productTypeListRequest","setProductTypeListRequest","useEffect","unload","listen","location","urlTitle","pathname","split","reverse","data","filter","pt","length","isFetching","isLoaded","params","makeRequest","entity","Object","keys","to","productTypeID","includeSettingsInList","productTypeData","augmentProductType","title","settings","productHTMLTitleString","childProductTypes","productTypeName","crumbs","ancestors","map","crumb","onSelect","push","preFilter","productType_id","hide","className"],"mappings":"6MAgFeA,UAtEK,WAAO,IAAD,MAClBC,EAAmBC,YAAYC,KAC/BC,EAAkBF,aAAY,SAAAG,GAAK,OAAIA,EAAMC,cAAcC,UAAUH,mBAErEI,EAAOC,cAAPD,GACAE,EAAUC,cALQ,EAM4BC,cAN5B,mBAMjBC,EANiB,KAMGC,EANH,OAOoCF,cAPpC,mBAOjBG,EAPiB,KAOOC,EAPP,KA0BxB,GAjBAC,qBAAU,WACR,IAAMC,EAASR,EAAQS,QAAO,SAAAC,GAC5B,IAAMC,EAAWD,EAASE,SAASC,MAAM,KAAKC,UAAU,MACtCT,EAAuBU,KAAKC,QAAO,SAAAC,GAAE,OAAIA,EAAGN,WAAaA,KAAUO,QACrEb,EAAuBU,KAAKG,OAAS,IACnDd,EAAsB,2BAAKD,GAAN,IAA0BY,KAAM,GAAII,YAAY,EAAOC,UAAU,EAAOC,OAAQ,CAAEV,YAAYW,aAAa,KAChIhB,EAA0B,2BAAKD,GAAN,IAA8BU,KAAM,GAAII,YAAY,EAAOC,UAAU,EAAOC,OAAQ,GAAIC,aAAa,SAGlI,OAAO,WACLd,OAED,CAACR,EAASI,EAAuBD,EAAoBG,EAA2BD,IAE9EF,EAAmBgB,YAAehB,EAAmBiB,UACxDhB,EAAsB,2BAAKD,GAAN,IAA0BgB,YAAY,EAAMC,UAAU,EAAOG,OAAQ,cAAeF,OAAQ,CAAEV,SAAUb,GAAMwB,aAAa,MAE7InB,EAAmBgB,YAAchB,EAAmBiB,UAA4D,IAAhDI,OAAOC,KAAKtB,EAAmBY,MAAMG,OACxG,OAAO,cAAC,IAAD,CAAUQ,GAAG,SAEjBrB,EAAuBc,YAAed,EAAuBe,WAAYjB,EAAmBiB,UAC/Fd,EAA0B,2BAAKD,GAAN,IAA8BU,KAAM,GAAII,YAAY,EAAMC,UAAU,EAAOG,OAAQ,cAAeF,OAAQ,CAAE,2BAA2B,IAA3B,OAAgClB,EAAmBY,KAAKY,cAAxD,KAA0E,SAAU,IAAKC,uBAAuB,GAAQN,aAAa,KAE5Q,IAAMO,EAAkBC,YAAmBhC,EAAIO,EAAuBU,MAEtE,OACE,eAAC,IAAD,WACGZ,EAAmBiB,UAAY,cAAC,IAAD,CAAQW,MAAO5B,EAAmBY,KAAKiB,SAASC,yBAC/E9B,EAAmBiB,UAClB,cAAC,IAAD,CACEW,MAAsD,KAAhC,OAAfF,QAAe,IAAfA,GAAA,UAAAA,EAAiBK,yBAAjB,eAAoChB,SAAgBf,EAAmBY,KAAKoB,gBACnFC,OAAQjC,EAAmBY,KAAKsB,UAC7BC,KAAI,SAAAC,GACH,MAAO,CAAER,MAAOQ,EAAMJ,gBAAiBxB,SAAU4B,EAAM5B,aAExDK,QAAO,SAAAuB,GAAK,OAAIA,EAAM5B,WAAajB,KACnCsB,QAAO,SAAAuB,GAAK,OAAIA,EAAM5B,WAAab,KACnCwC,KAAI,SAAAC,GACH,OAAO,2BAAKA,GAAZ,IAAmB5B,SAAS,IAAD,OAAMpB,EAAN,YAA0BgD,EAAM5B,kBAInD,OAAfkB,QAAe,IAAfA,GAAA,UAAAA,EAAiBK,yBAAjB,eAAoChB,QAAS,GAC5C,cAAC,IAAD,CACEsB,SAAU,SAAA7B,GACRX,EAAQyC,KAAR,WAAiBlD,EAAjB,YAAqCoB,KAEvCI,KAAMc,IAGsC,KAAhC,OAAfA,QAAe,IAAfA,GAAA,UAAAA,EAAiBK,yBAAjB,eAAoChB,SACnC,cAAC,IAAD,CAAawB,UAAW,CAAEC,eAAgBxC,EAAmBY,KAAKY,eAAiBiB,KAAM,CAAC,eAA1F,SACE,qBAAKC,UAAU,2DAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+C1C,EAAmBY,KAAKgB","file":"static/js/19.508606f9.chunk.js","sourcesContent":["import { Redirect, useHistory, useParams } from 'react-router-dom'\nimport { Layout, PageHeader, ProductTypeList } from '../../components'\nimport ListingPage from '../../components/Listing/Listing'\nimport { Helmet } from 'react-helmet'\nimport { useGetEntity } from '../../hooks/useAPI'\nimport { useSelector } from 'react-redux'\nimport { getProductTypeRoute } from '../../selectors/configurationSelectors'\nimport { augmentProductType } from '../../utils'\nimport { useEffect } from 'react'\n\nconst ProductType = () => {\n  const productTypeRoute = useSelector(getProductTypeRoute)\n  const productTypeBase = useSelector(state => state.configuration.filtering.productTypeBase)\n\n  let { id } = useParams()\n  const history = useHistory()\n  const [productTypeRequest, setProductTypeRequest] = useGetEntity()\n  const [productTypeListRequest, setProductTypeListRequest] = useGetEntity()\n\n  useEffect(() => {\n    const unload = history.listen(location => {\n      const urlTitle = location.pathname.split('/').reverse()[0]\n      const hasData = !!productTypeListRequest.data.filter(pt => pt.urlTitle === urlTitle).length\n      if (!hasData && productTypeListRequest.data.length > 0) {\n        setProductTypeRequest({ ...productTypeRequest, data: {}, isFetching: false, isLoaded: false, params: { urlTitle }, makeRequest: true })\n        setProductTypeListRequest({ ...productTypeListRequest, data: [], isFetching: false, isLoaded: false, params: {}, makeRequest: false })\n      }\n    })\n    return () => {\n      unload()\n    }\n  }, [history, setProductTypeRequest, productTypeRequest, setProductTypeListRequest, productTypeListRequest])\n\n  if (!productTypeRequest.isFetching && !productTypeRequest.isLoaded) {\n    setProductTypeRequest({ ...productTypeRequest, isFetching: true, isLoaded: false, entity: 'productType', params: { urlTitle: id }, makeRequest: true })\n  }\n  if (!productTypeRequest.isFetching && productTypeRequest.isLoaded && Object.keys(productTypeRequest.data).length === 0) {\n    return <Redirect to=\"/404\" />\n  }\n  if (!productTypeListRequest.isFetching && !productTypeListRequest.isLoaded && productTypeRequest.isLoaded) {\n    setProductTypeListRequest({ ...productTypeListRequest, data: [], isFetching: true, isLoaded: false, entity: 'productType', params: { 'f:productTypeIDPath:like': `%${productTypeRequest.data.productTypeID}%`, 'p:show': 250, includeSettingsInList: true }, makeRequest: true })\n  }\n  const productTypeData = augmentProductType(id, productTypeListRequest.data)\n\n  return (\n    <Layout>\n      {productTypeRequest.isLoaded && <Helmet title={productTypeRequest.data.settings.productHTMLTitleString} />}\n      {productTypeRequest.isLoaded && (\n        <PageHeader\n          title={productTypeData?.childProductTypes?.length !== 0 && productTypeRequest.data.productTypeName}\n          crumbs={productTypeRequest.data.ancestors\n            .map(crumb => {\n              return { title: crumb.productTypeName, urlTitle: crumb.urlTitle }\n            })\n            .filter(crumb => crumb.urlTitle !== productTypeBase)\n            .filter(crumb => crumb.urlTitle !== id)\n            .map(crumb => {\n              return { ...crumb, urlTitle: `/${productTypeRoute}/${crumb.urlTitle}` }\n            })}\n        />\n      )}\n      {productTypeData?.childProductTypes?.length > 0 && (\n        <ProductTypeList\n          onSelect={urlTitle => {\n            history.push(`/${productTypeRoute}/${urlTitle}`)\n          }}\n          data={productTypeData}\n        />\n      )}\n      {productTypeData?.childProductTypes?.length === 0 && (\n        <ListingPage preFilter={{ productType_id: productTypeRequest.data.productTypeID }} hide={['productType']}>\n          <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n            <h5 className=\"h4 text-dark mb-0 font-accent\">{productTypeRequest.data.title}</h5>\n          </div>\n        </ListingPage>\n      )}\n    </Layout>\n  )\n}\n\nexport default ProductType\n"],"sourceRoot":""}