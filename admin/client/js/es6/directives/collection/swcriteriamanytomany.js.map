{"version":3,"sources":["directives/collection/swcriteriamanytomany.ts"],"names":[],"mappings":"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","file":"directives/collection/swcriteriamanytomany.js","sourceRoot":"/Users/david/Sites/Slatwall/","sourcesContent":["'use strict';\nangular.module('slatwalladmin')\n.directive('swCriteriaManyToMany', [\n\t'$log',\n\t'$slatwall',\n\t'$filter',\n\t'collectionPartialsPath',\n\t'collectionService',\n\t'metadataService',\n\tfunction(\n\t\t$log,\n\t\t$slatwall,\n\t\t$filter,\n\t\tcollectionPartialsPath,\n\t\tcollectionService,\n\t\tmetadataService\n\t){\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl:collectionPartialsPath+'criteriamanytomany.html',\n\t\t\tlink: function(scope, element, attrs){\n\t\t\t\tvar getManyToManyOptions = function(type){\n\t\t\t\t\tif(angular.isUndefined(type)){\n\t\t\t\t \t\ttype = 'filter'\n\t\t\t\t \t}\n\t\t\t\t \tvar manyToManyOptions = [];\n\t\t\t\t \tif(type === 'filter'){\n\t\t\t\t    \tmanyToManyOptions = [\n\t\t\t\t         \t{\n\t\t\t\t        \t\tdisplay:\"All Exist In Collection\",\n\t\t\t\t        \t\tcomparisonOperator:\"All\"\n\t\t\t\t        \t},\n\t\t\t\t        \t{\n\t\t\t\t        \t\tdisplay:\"None Exist In Collection\",\n\t\t\t\t        \t\tcomparisonOperator:\"None\"\n\t\t\t\t        \t},\n\t\t\t\t        \t{\n\t\t\t\t        \t\tdisplay:\"Some Exist In Collection\",\n\t\t\t\t        \t\tcomparisonOperator:\"One\"\n\t\t\t\t        \t},\n\t\t\t\t        \t{\n\t\t\t\t        \t\tdisplay:\"Empty\",\n\t\t\t\t        \t\tcomparisonOperator:\"is\",\n\t\t\t\t        \t\tvalue:\"null\"\n\t\t\t\t        \t},\n\t\t\t\t        \t{\n\t\t\t\t        \t\tdisplay:\"Not Empty\",\n\t\t\t\t        \t\tcomparisonOperator:\"is not\",\n\t\t\t\t        \t\tvalue:\"null\"\n\t\t\t\t        \t}\n\t\t\t\t        ];\n\t\t\t\t    }else if(type === 'condition'){\n\t\t\t\t \t\tmanyToManyOptions = [];\n\t\t\t\t \t}\n\t\t\t    \treturn manyToManyOptions;\n\t\t\t    };\n\t\t\t    \n\t\t\t    scope.manyToManyOptions = getManyToManyOptions(scope.comparisonType);\n\t\t\t\tvar existingCollectionsPromise = $slatwall.getExistingCollectionsByBaseEntity(scope.selectedFilterProperty.cfc);\n\t\t\t\texistingCollectionsPromise.then(function(value){\n\t\t\t\t\tscope.collectionOptions = value.data;\n\t\t\t\t\tif(angular.isDefined(scope.filterItem.collectionID)){\n\t\t\t\t\t\tfor(var i in scope.collectionOptions){\n\t\t\t\t\t\t\tif(scope.collectionOptions[i].collectionID === scope.filterItem.collectionID){\n\t\t\t\t\t\t\t\tscope.selectedFilterProperty.selectedCollection = scope.collectionOptions[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var i in scope.oneToManyOptions){\n\t\t\t\t\t\t\tif(scope.oneToManyOptions[i].comparisonOperator === scope.filterItem.criteria){\n\t\t\t\t\t\t\t\tscope.selectedFilterProperty.selectedCriteriaType = scope.oneToManyOptions[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tscope.selectedCriteriaChanged = function(selectedCriteria){\n\t\t\t\t\t$log.debug(selectedCriteria);\n\t\t\t\t\t//update breadcrumbs as array of filterpropertylist keys\n\t\t\t\t\t$log.debug(scope.selectedFilterProperty);\n\t\t\t\t\t\n\t\t\t\t\tvar breadCrumb = {\n\t\t\t\t\t\t\tentityAlias:scope.selectedFilterProperty.name,\n\t\t\t\t\t\t\tcfc:scope.selectedFilterProperty.cfc,\n\t\t\t\t\t\t\tpropertyIdentifier:scope.selectedFilterProperty.propertyIdentifier,\n\t\t\t\t\t\t\trbKey:$slatwall.getRBKey('entity.'+scope.selectedFilterProperty.cfc.replace('_',''))\n\t\t\t\t\t};\n\t\t\t\t\tscope.filterItem.breadCrumbs.push(breadCrumb);\n\t\t\t\t\t\n\t\t\t\t\t//populate editfilterinfo with the current level of the filter property we are inspecting by pointing to the new scope key\n\t\t\t\t\tscope.selectedFilterPropertyChanged({selectedFilterProperty:scope.selectedFilterProperty.selectedCriteriaType});\n\t\t\t\t\t//update criteria to display the condition of the new critera we have selected\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n]);\n\t\n"]}