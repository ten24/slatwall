{"version":3,"sources":["services/utilityservice.ts"],"names":["valueCmp","arrayCmp"],"mappings":"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","file":"services/utilityservice.js","sourceRoot":"/Users/david/Sites/Slatwall/","sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin')\n.factory('utilityService',[ \n\tfunction(\n\t){\n\t\t//declare public and private variables\n\t\t\n\t\t//Define our contexts and validation property enums.\n\t\t\n\t\t//declare service we are returning\n\t\tvar utilityService = {\n\t\t\tcreateID:function(count){\n\t\t\t\tvar count = count || 26;\n\t\t\t\t\n\t\t\t    var text = \"\";\n\t\t\t    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\t\t\t\n\t\t\t    for( var i=0; i < count; i++ )\n\t\t\t        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\t\t\t\n\t\t\t    return text;\n\t\t\t},\n\t\t\t//list functions\n\t\t\tlistFind:function(list,value,delimiter){\n\t\t\t\tif(angular.isUndefined(delimiter)){\n\t\t\t\t\tdelimiter = ',';\n\t\t\t\t}\n\t\t\t\tvar splitString = list.split(delimiter);\n\t\t\t\tvar stringFound = -1;\n\t\t\t\tfor (var i = 0; i < splitString.length; i++) {\n\t\t\t\t    var stringPart = splitString[i];\n\t\t\t\t    if (stringPart != value) continue;\n\n\t\t\t\t    stringFound = i;\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t},\n\t\t\tlistLen:function(list,delimiter){\n\t\t\t\t\n\t\t\t\tif(angular.isUndefined(delimiter)){\n\t\t\t\t\tdelimiter = ',';\n\t\t\t\t}\n\t\t\t\tvar splitString = list.split(delimiter);\n\t\t\t\treturn splitString.length;\n\t\t\t},\n            //To use this sorter pass in arguments first by object to sort\n            //Then an array where the first index is the first string to sort by\n            //And the second index is another array containing the second string to sort by as well as ascending vs descending\n            //Example: arraySorter(array, [\"type\",[\"name\",\"asc\"]])\n\t\t\tarraySorter:function(objArray, properties /*, primers*/) {\n               var primers = arguments[2] || {};\n                \n                properties = properties.map(function(prop) {\n                    if( !(prop instanceof Array) ) {\n                        prop = [prop, 'asc']\n                    }\n                    if( prop[1].toLowerCase() == 'desc' ) {\n                        prop[1] = -1;\n                    } else {\n                        prop[1] = 1;\n                    }\n                    return prop;\n                });\n                \n                function valueCmp(x, y) {\n                    return x > y ? 1 : x < y ? -1 : 0; \n                }\n                \n                function arrayCmp(a, b) {\n                    var arr1 = [], arr2 = [];\n                    properties.forEach(function(prop) {\n                        var aValue = a[prop[0]],\n                            bValue = b[prop[0]];\n                        if( typeof primers[prop[0]] != 'undefined' ) {\n                            aValue = primers[prop[0]](aValue);\n                            bValue = primers[prop[0]](bValue);\n                        }\n                        arr1.push( prop[1] * valueCmp(aValue, bValue) );\n                        arr2.push( prop[1] * valueCmp(bValue, aValue) );\n                    });\n                    return arr1 < arr2 ? -1 : 1;\n                }\n                \n                objArray.sort(function(a, b) {\n                    return arrayCmp(a, b);\n                })\n                return objArray;\n            }\n\t\t};\n\t\t\n\t\treturn utilityService;\n\t}\n]);\n"]}