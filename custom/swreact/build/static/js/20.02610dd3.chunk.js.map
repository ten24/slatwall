{"version":3,"sources":["pages/Search/Search.js"],"names":["Search","loc","useLocation","params","queryString","parse","search","arrayFormat","arrayFormatSeparator","history","useHistory","useGetEntity","productTypeListRequest","setProductTypeListRequest","productTypeBase","useSelector","state","configuration","filtering","productTypeUrl","useEffect","isFetching","isLoaded","entity","searchKeyword","keyword","includeSettingsInList","makeRequest","Object","keys","data","length","to","productTypeData","augmentProductType","className","title","crumbs","filter","productType","productTypeIDPath","includes","productTypeID","map","crumb","productTypeName","urlTitle","pathname","stringify","key","childProductTypes","onSelect","push","preFilter","productType_id","hide"],"mappings":"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","file":"static/js/20.02610dd3.chunk.js","sourcesContent":["import { Helmet } from 'react-helmet'\nimport { Layout, PageHeader, ProductTypeList } from '../../components'\nimport ListingPage from '../../components/Listing/Listing'\nimport { Redirect, useHistory, useLocation } from 'react-router'\nimport { useGetEntity } from '../../hooks/useAPI'\nimport { useSelector } from 'react-redux'\nimport queryString from 'query-string'\nimport { useEffect } from 'react'\nimport { augmentProductType } from '../../utils'\n\nconst Search = () => {\n  const loc = useLocation()\n  let params = queryString.parse(loc.search, { arrayFormat: 'separator', arrayFormatSeparator: ',' })\n\n  const history = useHistory()\n\n  const [productTypeListRequest, setProductTypeListRequest] = useGetEntity()\n  const productTypeBase = useSelector(state => state.configuration.filtering.productTypeBase)\n  const productTypeUrl = params['key'] || productTypeBase\n\n  useEffect(() => {\n    if (!productTypeListRequest.isFetching && !productTypeListRequest.isLoaded) {\n      setProductTypeListRequest({ ...productTypeListRequest, isFetching: true, isLoaded: false, entity: 'ProductType', params: { searchKeyword: params?.keyword, 'p:show': 250, includeSettingsInList: true }, makeRequest: true })\n    }\n  }, [productTypeListRequest, setProductTypeListRequest, productTypeUrl, params])\n\n  if (!productTypeListRequest.isFetching && productTypeListRequest.isLoaded && Object.keys(productTypeListRequest.data).length === 0) {\n    return <Redirect to=\"/404\" />\n  }\n  const productTypeData = augmentProductType(productTypeUrl, productTypeListRequest.data)\n  return (\n    <Layout>\n      <div className=\"container pb-2 pt-5 border-bottom d-none\">\n        <div className=\"product-section mb-3\">\n          <h2 className=\"h5\">Keyblanks & Automotive</h2>\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-md-6 col-12 mb-3\">\n              <div className=\"card bg-lightgray border-0\">\n                <div className=\"card-body\">\n                  <h3 className=\"h5\">\n                    <button className=\"link-button\">Electronic Hardware</button>\n                  </h3>\n                  <ul className=\"two-cols d-flex flex-wrap list-unstyled font-size-sm mb-0\">\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Locks\n                      </button>\n                    </li>\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Parts &amp; Accessories\n                      </button>\n                    </li>\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Electronic Standalone\n                      </button>\n                    </li>\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Electronic Networked\n                      </button>\n                    </li>\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Access Control\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-4 col-md-6 col-12 mb-3\">\n              <div className=\"card bg-lightgray border-0\">\n                <div className=\"card-body\">\n                  <h3 className=\"h5\">\n                    <button className=\"link-button\">Electronic Hardware</button>\n                  </h3>\n                  <ul className=\"two-cols d-flex flex-wrap list-unstyled font-size-sm mb-0\">\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Locks\n                      </button>\n                    </li>\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Parts &amp; Accessories\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-4 col-md-6 col-12 mb-3\">\n              <div className=\"card bg-lightgray border-0\">\n                <div className=\"card-body\">\n                  <h3 className=\"h5\">\n                    <button className=\"link-button\">Electronic Hardware</button>\n                  </h3>\n                  <ul className=\"two-cols d-flex flex-wrap list-unstyled font-size-sm mb-0\">\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Locks\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"product-section mb-3\">\n          <h2 className=\"h5\">Keyblanks & Automotive</h2>\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-md-6 col-12 mb-3\">\n              <div className=\"card bg-lightgray border-0\">\n                <div className=\"card-body\">\n                  <h3 className=\"h5\">\n                    <button className=\"link-button\">Electronic Hardware</button>\n                  </h3>\n                  <ul className=\"two-cols d-flex flex-wrap list-unstyled font-size-sm mb-0\">\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Locks\n                      </button>\n                    </li>\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Parts &amp; Accessories\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-4 col-md-6 col-12 mb-3\">\n              <div className=\"card bg-lightgray border-0\">\n                <div className=\"card-body\">\n                  <h3 className=\"h5\">\n                    <button className=\"link-button\">Electronic Hardware</button>\n                  </h3>\n                  <ul className=\"two-cols d-flex flex-wrap list-unstyled font-size-sm mb-0\">\n                    <li className=\"d-flex\">\n                      <button className=\"link-button nav-link-style\">\n                        <i className=\"far fa-chevron-circle-right pr-2\"></i>Pushbutton Locks\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Helmet title={`Search - ${params['keyword']}`} />\n      {productTypeListRequest.isLoaded && (\n        <PageHeader\n          title={''}\n          crumbs={productTypeListRequest.data\n            .filter(productType => {\n              return productTypeData?.productTypeIDPath?.includes(productType.productTypeID)\n            })\n            .map(crumb => {\n              return { title: crumb.productTypeName, urlTitle: crumb.urlTitle }\n            })\n            .filter(crumb => crumb.urlTitle !== productTypeBase)\n            .filter(crumb => crumb.urlTitle !== params['key'])\n            .map(crumb => {\n              return { ...crumb, urlTitle: `${loc.pathname}?${queryString.stringify({ ...params, key: crumb.urlTitle }, { arrayFormat: 'comma' })}` }\n            })}\n        />\n      )}\n      {productTypeData.childProductTypes?.length > 0 && (\n        <ProductTypeList\n          data={productTypeData}\n          onSelect={urlTitle => {\n            params['key'] = urlTitle\n            history.push(`${loc.pathname}?${queryString.stringify(params, { arrayFormat: 'comma' })}`)\n          }}\n        />\n      )}\n      {productTypeData?.childProductTypes?.length === 0 && <ListingPage preFilter={{ productType_id: productTypeData.productTypeID }} hide={['productType']} />}\n    </Layout>\n  )\n}\n\nexport default Search\n"],"sourceRoot":""}