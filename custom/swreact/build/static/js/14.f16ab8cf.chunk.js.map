{"version":3,"sources":["pages/Manufacturer/Manufacturer.js"],"names":["Manufacturer","history","useHistory","loc","useLocation","content","useSelector","state","pathname","substring","brandRoute","getBrandRoute","title","customBody","useGetEntity","request","setRequest","useEffect","didCancel","isFetching","isLoaded","entity","params","makeRequest","className","onClick","event","preventDefault","target","getAttribute","push","dangerouslySetInnerHTML","__html","data","filter","element","brandFeatured","sort","a","b","brandName","map","brand","to","urlTitle","customPath","src","imageFile","alt","brandID"],"mappings":"wNAkFeA,UA1EM,WACnB,IAAIC,EAAUC,cACVC,EAAMC,cACJC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAAQF,EAAIK,SAASC,UAAU,OACpEC,EAAaJ,YAAYK,KAJN,EAKKN,GAAW,GAAjCO,EALiB,EAKjBA,MAAOC,EALU,EAKVA,WALU,EAMGC,cANH,mBAMpBC,EANoB,KAMXC,EANW,KAkBzB,OAVAC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHKH,EAAQI,YAAeJ,EAAQK,UAAaF,GAC/CF,EAAW,2BAAKD,GAAN,IAAeI,YAAY,EAAMC,UAAU,EAAOC,OAAQ,QAASC,OAAQ,CAAE,SAAU,IAAK,eAAgB,GAAKC,aAAa,KAEnI,WACLL,GAAY,KAEb,CAACH,EAASC,IAGX,sBAAKQ,UAAU,eAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,2DAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+CZ,GAAS,WAI9D,sBAAKY,UAAU,kDAAf,UACE,qBACEA,UAAU,eACVC,QAAS,SAAAC,GACPA,EAAMC,iBACFD,EAAME,OAAOC,aAAa,SAC5B5B,EAAQ6B,KAAKJ,EAAME,OAAOC,aAAa,UAG3CE,wBAAyB,CACvBC,OAAQnB,GAAc,MAGzBA,GAAc,uBACf,qBAAKW,UAAU,yBAAf,SACE,qBAAKA,UAAU,WAAf,SACGT,EAAQK,UACP,sBACKL,EAAQkB,KACRC,QAAO,SAAAC,GACN,OAAiC,IAA1BA,EAAQC,iBAEhBC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,UAAY,GAAK,MALtD,YAMKzB,EAAQkB,KACRC,QAAO,SAAAC,GACN,OAAiC,IAA1BA,EAAQC,iBAEhBC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,UAAY,GAAK,OACpDC,KAAI,SAAAC,GACJ,OACE,qBAAyBlB,UAAU,yBAAnC,SACE,qBAAKA,UAAU,gBAAf,SACE,eAAC,IAAD,CAAMA,UAAU,qCAAqCmB,GAAE,WAAMjC,EAAN,YAAoBgC,EAAME,UAAjF,UACE,cAAC,IAAD,CAASpB,UAAU,gBAAgBqB,WAAW,oCAAoCC,IAAKJ,EAAMK,UAAWC,IAAKN,EAAMF,YACnH,oBAAIhB,UAAU,KAAd,SAAoBkB,EAAMF,kBAJtBE,EAAMO","file":"static/js/14.f16ab8cf.chunk.js","sourcesContent":["import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { SWImage } from '../../components'\nimport { useGetEntity } from '../../hooks'\nimport { Link } from 'react-router-dom'\nimport { getBrandRoute } from '../../selectors/configurationSelectors'\n\nconst Manufacturer = () => {\n  let history = useHistory()\n  let loc = useLocation()\n  const content = useSelector(state => state.content[loc.pathname.substring(1)])\n  const brandRoute = useSelector(getBrandRoute)\n  const { title, customBody } = content || {}\n  let [request, setRequest] = useGetEntity()\n\n  useEffect(() => {\n    let didCancel = false\n    if (!request.isFetching && !request.isLoaded && !didCancel) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, entity: 'brand', params: { 'P:Show': 500, 'f:activeFlag': 1 }, makeRequest: true })\n    }\n    return () => {\n      didCancel = true\n    }\n  }, [request, setRequest])\n\n  return (\n    <div className=\"bg-light p-0\">\n      <div className=\"page-title-overlap bg-lightgray pt-4\">\n        <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n          <div className=\"order-lg-1 pr-lg-4 text-center\">\n            <h1 className=\"h3 text-dark mb-0 font-accent\">{title || ''}</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"container bg-light box-shadow-lg rounded-lg p-5\">\n        <div\n          className=\"content-body\"\n          onClick={event => {\n            event.preventDefault()\n            if (event.target.getAttribute('href')) {\n              history.push(event.target.getAttribute('href'))\n            }\n          }}\n          dangerouslySetInnerHTML={{\n            __html: customBody || '',\n          }}\n        />\n        {customBody && <hr />}\n        <div className=\"container pb-4 pb-sm-5\">\n          <div className=\"row pt-5\">\n            {request.isLoaded &&\n              [\n                ...request.data\n                  .filter(element => {\n                    return element.brandFeatured === true\n                  })\n                  .sort((a, b) => (a.brandName > b.brandName ? 1 : -1)),\n                ...request.data\n                  .filter(element => {\n                    return element.brandFeatured !== true\n                  })\n                  .sort((a, b) => (a.brandName > b.brandName ? 1 : -1)),\n              ].map(brand => {\n                return (\n                  <div key={brand.brandID} className=\"col-md-4 col-sm-6 mb-3\">\n                    <div className=\"card border-0\">\n                      <Link className=\"d-block overflow-hidden rounded-lg\" to={`/${brandRoute}/${brand.urlTitle}`}>\n                        <SWImage className=\"d-block w-100\" customPath=\"/custom/assets/images/brand/logo/\" src={brand.imageFile} alt={brand.brandName} />\n                        <h2 className=\"h5\">{brand.brandName}</h2>\n                      </Link>\n                    </div>\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Manufacturer\n"],"sourceRoot":""}