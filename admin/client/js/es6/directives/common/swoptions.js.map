{"version":3,"sources":["directives/common/swoptions.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAC9B,SAAS,CAAC,WAAW,EAAE;IACxB,MAAM;IACN,WAAW;IACX,iBAAiB;IACjB,cAAc;IACb,UACA,IAAI,EACD,SAAS,EACT,eAAe,EAClB,YAAY;QAEX,MAAM,CAAC;YACN,QAAQ,EAAE,IAAI;YACd,KAAK,EAAC;gBACL,UAAU,EAAC,GAAG;aACd;YACD,WAAW,EAAC,YAAY,GAAC,cAAc;YACvC,IAAI,EAAE,UAAS,KAAK,EAAE,OAAO,EAAC,KAAK;gBACtB,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;gBACrB,KAAK,CAAC,SAAS,CAAC,UAAU,GAAC,KAAK,CAAC,UAAU,CAAC;gBAC5C,AACA,2CAD2C;gBAC3C,KAAK,CAAC,UAAU,GAAG;oBACf,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,GAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC;oBACvE,IAAI,aAAa,GAAG;wBAChB;4BACI,oBAAoB,EAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,MAAM;yBACrH;wBACD;4BACI,oBAAoB,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE;yBAC5D;qBACJ,CAAA;oBACF,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,EAAC,EAAC,UAAU,EAAC,IAAI,EAAE,aAAa,EAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC,CAAC,CAC7G,IAAI,CAAC,UAAS,KAAK;wBACf,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBAC5C,CAAC,CAAC,CAAC;gBACP,CAAC,CAAA;gBAED,KAAK,CAAC,UAAU,EAAE,CAAC;gBAEnB,AACA,oCADoC;gBACpC,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,UAAS,cAAc;oBAClD,KAAK,CAAC,SAAS,CAAC,cAAc,GAAG,cAAc,CAAC;oBAChD,eAAe,CAAC,MAAM,CAAC,gBAAgB,EAAC,cAAc,CAAC,CAAC;gBAC5D,CAAC,CAAA;YACd,CAAC;SACD,CAAC;IACH,CAAC;CACD,CAAC,CAAC","file":"directives/common/swoptions.js","sourcesContent":["angular.module('slatwalladmin')\n.directive('swOptions', [\n'$log',\n'$slatwall',\n'observerService',\n'partialsPath',\n\tfunction(\n\t$log,\n    $slatwall,\n    observerService,\n\tpartialsPath\n\t){\n\t\treturn {\n\t\t\trestrict: 'AE',\n\t\t\tscope:{\n\t\t\t\tobjectName:'@'\n\t\t\t},\n\t\t\ttemplateUrl:partialsPath+\"options.html\",\n\t\t\tlink: function(scope, element,attrs){\n                scope.swOptions = {};\n                scope.swOptions.objectName=scope.objectName;\n                //sets up drop down options via collections\n                scope.getOptions = function(){\n                    scope.swOptions.object = $slatwall['new'+scope.swOptions.objectName]();\n                    var columnsConfig = [\n                        {\n                            \"propertyIdentifier\":scope.swOptions.objectName.charAt(0).toLowerCase()+scope.swOptions.objectName.slice(1)+'Name'    \n                        },\n                        {\n                            \"propertyIdentifier\":scope.swOptions.object.$$getIDName()   \n                        }\n                    ]\n                   $slatwall.getEntity(scope.swOptions.objectName,{allRecords:true, columnsConfig:angular.toJson(columnsConfig)})\n                   .then(function(value){\n                        scope.swOptions.options = value.records;\n                    });\n                }\n                \n                scope.getOptions();\n                \n                //use by ng-change to record changes\n                scope.swOptions.selectOption = function(selectedOption){\n                    scope.swOptions.selectedOption = selectedOption;\n                    observerService.notify('optionsChanged',selectedOption);\n                }\n\t\t\t}\n\t\t};\n\t}\n]);\n\t\n"],"sourceRoot":"/source/"}