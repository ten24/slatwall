{"version":3,"sources":["components/Account/AccountLogin/AccountLogin.js"],"names":["LoginForm","dispatch","useDispatch","match","useRouteMatch","useTranslation","t","formik","i18n","useFormik","initialValues","loginEmail","loginPassword","onSubmit","values","login","className","to","path","handleSubmit","htmlFor","value","onChange","handleChange","autoComplete","required","type","id","AccountLogin"],"mappings":"qGAAA,mEAOMA,EAAY,WAChB,IAAMC,EAAWC,cACbC,EAAQC,cAFU,EAGFC,cAAZC,EAHc,EAGdA,EAEFC,GALgB,EAGXC,KAEIC,YAAU,CACvBC,cAAe,CACbC,WAAY,GACZC,cAAe,IAEjBC,SAAU,SAAAC,GACRb,EAASc,YAAMD,EAAOH,WAAYG,EAAOF,oBAG7C,OACE,qBAAKI,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,SAAyBV,EAAE,8BAC3B,oBAAGU,UAAU,+BAAb,oBACMV,EAAE,+BADR,SAC2C,cAAC,IAAD,CAAMW,GAAE,UAAKd,EAAMe,KAAX,kBAAR,SAA0CZ,EAAE,8BADvF,OAGA,uBAAMO,SAAUN,EAAOY,aAAvB,UACE,sBAAKH,UAAU,aAAf,UACE,uBAAOI,QAAQ,aAAf,SAA6Bd,EAAE,4BAC/B,uBAAOe,MAAOd,EAAOO,OAAOH,WAAYW,SAAUf,EAAOgB,aAAcC,aAAa,QAAQC,UAAQ,EAACT,UAAU,eAAeU,KAAK,QAAQC,GAAG,kBAEhJ,sBAAKX,UAAU,aAAf,UACE,uBAAOI,QAAQ,gBAAf,SAAgCd,EAAE,+BAClC,uBAAOe,MAAOd,EAAOO,OAAOF,cAAeU,SAAUf,EAAOgB,aAAcC,aAAa,mBAAmBC,UAAQ,EAACT,UAAU,eAAeU,KAAK,WAAWC,GAAG,qBAEjK,qBAAKX,UAAU,aAAf,SACE,cAAC,IAAD,CAAMC,GAAE,UAAKd,EAAMe,KAAX,mBAAkCF,UAAU,+BAApD,SACGV,EAAE,wCAGP,oBAAIU,UAAU,SACd,qBAAKA,UAAU,kBAAf,SACE,wBAAQA,UAAU,kBAAkBU,KAAK,SAAzC,SACGpB,EAAE,2CAoBJsB,UAVM,WACnB,OACE,qBAAKZ,UAAU,8BAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,cAAChB,EAAD","file":"static/js/28.cb18f696.chunk.js","sourcesContent":["import { login } from '../../../actions/authActions'\nimport { useDispatch } from 'react-redux'\nimport { useFormik } from 'formik'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { useRouteMatch } from 'react-router-dom'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  let match = useRouteMatch()\n  const { t, i18n } = useTranslation()\n\n  const formik = useFormik({\n    initialValues: {\n      loginEmail: '',\n      loginPassword: '',\n    },\n    onSubmit: values => {\n      dispatch(login(values.loginEmail, values.loginPassword))\n    },\n  })\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"card box-shadow\">\n        <div className=\"card-body\">\n          <h2 className=\"h4 mb-1\">{t('frontend.account.sign_in')}</h2>\n          <p className=\"font-size-sm text-muted mb-4\">\n            {`${t('frontend.account.no_account')} `} <Link to={`${match.path}/createAccount`}>{t('frontend.account.request')}</Link>.\n          </p>\n          <form onSubmit={formik.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"loginEmail\">{t('frontend.account.email')}</label>\n              <input value={formik.values.loginEmail} onChange={formik.handleChange} autoComplete=\"email\" required className=\"form-control\" type=\"email\" id=\"loginEmail\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"loginPassword\">{t('frontend.account.password')}</label>\n              <input value={formik.values.loginPassword} onChange={formik.handleChange} autoComplete=\"current-password\" required className=\"form-control\" type=\"password\" id=\"loginPassword\" />\n            </div>\n            <div className=\"text-right\">\n              <Link to={`${match.path}/forgotPassword`} className=\"nav-link-inline font-size-sm\">\n                {t('frontend.account.forgot_password')}\n              </Link>\n            </div>\n            <hr className=\"mt-4\" />\n            <div className=\"text-right pt-4\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                {t('frontend.account.sign_in')}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst AccountLogin = () => {\n  return (\n    <div className=\"container py-4 py-lg-5 my-4\">\n      <div className=\"row d-flex justify-content-center\">\n        <LoginForm />\n      </div>\n    </div>\n  )\n}\n\nexport default AccountLogin\n"],"sourceRoot":""}