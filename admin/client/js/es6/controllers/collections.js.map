{"version":3,"sources":["controllers/collections.ts"],"names":[],"mappings":"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","file":"controllers/collections.js","sourceRoot":"/Users/david/Sites/Slatwall/","sourcesContent":["'use strict';\nangular.module('slatwalladmin')\n//using $location to get url params, this will probably change to using routes eventually\n.controller('collections', [ \n\t'$scope',\n'$location',\n'$log',\n'$timeout',\n'$slatwall',\n'collectionService', \n'metadataService',\n'paginationService',\n\tfunction(\n\t\t$scope,\n$location,\n$log,\n$timeout,\n$slatwall,\ncollectionService,\nmetadataService,\n\t\tpaginationService\n\t){\n\t\n\t\t//init values\n\t\t//$scope.collectionTabs =[{tabTitle:'PROPERTIES',isActive:true},{tabTitle:'FILTERS ('+filterCount+')',isActive:false},{tabTitle:'DISPLAY OPTIONS',isActive:false}];\n\t\t$scope.$id=\"collectionsController\";\n\t\t\n\t\t/*used til we convert to use route params*/\n\t\tvar QueryString = function () {\n\t\t  // This function is anonymous, is executed immediately and \n\t\t  // the return value is assigned to QueryString!\n\t\t  var query_string = {};\n\t\t  var query = window.location.search.substring(1);\n\t\t  var vars = query.split(\"&\");\n\t\t  for (var i=0;i<vars.length;i++) {\n\t\t    var pair = vars[i].split(\"=\");\n\t\t    \t// If first entry with this name\n\t\t    if (typeof query_string[pair[0]] === \"undefined\") {\n\t\t      query_string[pair[0]] = pair[1];\n\t\t    \t// If second entry with this name\n\t\t    } else if (typeof query_string[pair[0]] === \"string\") {\n\t\t      var arr = [ query_string[pair[0]], pair[1] ];\n\t\t      query_string[pair[0]] = arr;\n\t\t    \t// If third or later entry with this name\n\t\t    } else {\n\t\t      query_string[pair[0]].push(pair[1]);\n\t\t    }\n\t\t  } \n\t\t    return query_string;\n\t\t} ();\n\t\t//get url param to retrieve collection listing\n\t\t$scope.collectionID = QueryString.collectionID;\n\t\t\n\t\t$scope.currentPage= paginationService.getCurrentPage();\n\t\t$scope.pageShow = paginationService.getPageShow();\n\t\t$scope.pageStart = paginationService.getPageStart;\n\t\t$scope.pageEnd = paginationService.getPageEnd;\n\t\t$scope.recordsCount = paginationService.getRecordsCount;\n\t\t$scope.autoScrollPage = 1;\n\t\t$scope.autoScrollDisabled = false;\n\t\t\n\t\t\n\t\t$scope.appendToCollection = function(){\n\t\t\tif($scope.pageShow === 'Auto'){\n\t\t\t\t$log.debug('AppendToCollection');\n\t\t\t\tif($scope.autoScrollPage < $scope.collection.totalPages){\n\t\t\t\t\t$scope.autoScrollDisabled = true;\n\t\t\t\t\t$scope.autoScrollPage++;\n\t\t\t\t\t\n\t\t\t\t\tvar collectionListingPromise = $slatwall.getEntity('collection', {id:$scope.collectionID, currentPage:$scope.autoScrollPage, pageShow:50});\n\t\t\t\t\tcollectionListingPromise.then(function(value){\n\t\t\t\t\t\t$scope.collection.pageRecords = $scope.collection.pageRecords.concat(value.pageRecords);\n\t\t\t\t\t\t$scope.autoScrollDisabled = false;\n\t\t\t\t\t},function(reason){\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t$scope.keywords = \"\";\n\t\t$scope.loadingCollection = false;\n\t\tvar searchPromise;\n\t\t$scope.searchCollection = function($timout){\n\t\t\tif(searchPromise) {\n\t\t\t\t$timeout.cancel(searchPromise);\n\t\t\t}\n\t\t\t\n\t\t\tsearchPromise = $timeout(function(){\n\t\t\t\t$log.debug('search with keywords');\n\t\t\t\t$log.debug($scope.keywords);\n\t\t\t\t//Set current page here so that the pagination does not break when getting collection\n\t\t\t\tpaginationService.setCurrentPage(1);\n\t\t\t\t$scope.loadingCollection = true;\n\t\t\t\t$scope.getCollection();\n\t\t\t}, 500);\n\t\t};\n\t\t\t\n\t\t\n\t\n\t\t$scope.getCollection = function(){\n\t\t\tvar pageShow = 50;\n\t\t\tif($scope.pageShow !== 'Auto'){\n\t\t\t\tpageShow = $scope.pageShow;\n\t\t\t}\n\t\t\t\n\t\t\tvar collectionListingPromise = $slatwall.getEntity('collection', {id:$scope.collectionID, currentPage:$scope.currentPage, pageShow:pageShow, keywords:$scope.keywords});\n\t\t\tcollectionListingPromise.then(function(value){\n\t\t\t\t$scope.collection = value;\n\t\n\t\t\t\t$scope.collectionInitial = angular.copy($scope.collection);\n\t\t\t\tif(angular.isUndefined($scope.collectionConfig)){\n\t\t\t\t\t$scope.collectionConfig = angular.fromJson($scope.collection.collectionConfig);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//check if we have any filter Groups\n\t\t\t\tif(angular.isUndefined($scope.collectionConfig.filterGroups)){\n\t\t\t\t\t$scope.collectionConfig.filterGroups = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfilterGroup:[\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tcollectionService.setFilterCount(filterItemCounter());\n\t\t\t\t$scope.loadingCollection = false;\n\t\t\t},function(reason){\n\t\t\t});\n            return collectionListingPromise;\n\t\t};\n\t\t\n\t\t$scope.getCollection();\n\t\t\n\t\tvar unbindCollectionObserver = $scope.$watch('collection',function(newValue,oldValue){\n\t\t\tif(newValue !== oldValue){\n\t\t\t\tif(angular.isUndefined($scope.filterPropertiesList) ){\n\t\t\t\t\t$scope.filterPropertiesList = {};\n\t\t\t\t\tvar filterPropertiesPromise = $slatwall.getFilterPropertiesByBaseEntityName($scope.collectionConfig.baseEntityAlias);\n\t\t\t\t\tfilterPropertiesPromise.then(function(value){\n\t\t\t\t\t\tmetadataService.setPropertiesList(value,$scope.collectionConfig.baseEntityAlias);\n\t\t\t\t\t\t$scope.filterPropertiesList[$scope.collectionConfig.baseEntityAlias] = metadataService.getPropertiesListByBaseEntityAlias($scope.collectionConfig.baseEntityAlias);\n\t\t\t\t\t\tmetadataService.formatPropertiesList($scope.filterPropertiesList[$scope.collectionConfig.baseEntityAlias],$scope.collectionConfig.baseEntityAlias);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tunbindCollectionObserver();\n\t\t\t}\n\t\t});\n\t\t\n\t\t$scope.setCollectionForm= function(form){\n\t\t   $scope.collectionForm = form;\n\t\t};\n\t\t\n\t\t\n\t\t$scope.collectionDetails = {\n\t\t\tisOpen:false,\n\t\t\topenCollectionDetails:function(){\n\t\t\t\t$scope.collectionDetails.isOpen = true;\n\t\t\t}\n\t\t};\n\t\t\n\t\t$scope.errorMessage = {\n\t\t\t\t\n\t\t};\n\t\t\n\t\tvar filterItemCounter = function(filterGroupArray){\n\t\t\tvar filterItemCount = 0;\n\t\t\t\n\t\t\tif(!angular.isDefined(filterGroupArray)){\n\t\t\t\tfilterGroupArray = $scope.collectionConfig.filterGroups[0].filterGroup;\n\t\t\t}\n\t\t\t\n\t\t\t//Start out loop\n\t\t\tfor(var index in filterGroupArray){\n\n\t\t\t\t//If filter isn't new then increment the count\n\t\t\t\tif(!filterGroupArray[index].$$isNew \n\t\t\t\t\t\t&& !angular.isDefined(filterGroupArray[index].filterGroup)){\n\t\t\t\t\tfilterItemCount++;\t\n\t\t\t\t// If there are nested filter groups run introspectively\n\t\t\t\t} else if(angular.isDefined(filterGroupArray[index].filterGroup)){\n\t\t\t\t\t//Call function recursively\n\t\t\t\t\tfilterItemCount += filterItemCounter(filterGroupArray[index].filterGroup);\n\t\t\t\t\t\n\t\t\t\t//Otherwise make like the foo fighters and \"Break Out!\"\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\treturn filterItemCount;\n\t\t};\n\t\t\n\t\t\n\t\t$scope.saveCollection = function(){\n\t\t\t$timeout(function(){\n\t\t\t\t$log.debug('saving Collection');\n\t\t\t\tvar entityName = 'collection';\n\t\t\t\tvar collection = $scope.collection;\n\t\t\t\t$log.debug($scope.collectionConfig);\n\t\t\t\t\n\t\t\t\tif(isFormValid($scope.collectionForm)){\n\t\t\t\t\tvar collectionConfigString = collectionService.stringifyJSON($scope.collectionConfig);\n\t\t\t\t\t$log.debug(collectionConfigString);\n\t\t\t\t\tvar data = angular.copy(collection);\n\t\t\t\t\t\n\t\t\t\t\tdata.collectionConfig = collectionConfigString;\n\t\t\t\t\t//has to be removed in order to save transient correctly\n\t\t\t\t\tdelete data.pageRecords;\n\t\t\t\t\tvar saveCollectionPromise = $slatwall.saveEntity(entityName,collection.collectionID,data);\n\t\t\t\t\tsaveCollectionPromise.then(function(value){\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.errorMessage = {};\n\t\t\t\t\t\t//Set current page here so that the pagination does not break when getting collection\n\t\t\t\t\t\tpaginationService.setCurrentPage(1);\n\t\t\t\t\t\t$scope.getCollection();\n\t\t\t\t\t\t$scope.collectionDetails.isOpen = false;\n\t\t\t\t\t}, function(reason){\n\t\t\t\t\t\t//revert to original\n\t\t\t\t\t\tangular.forEach(reason.errors,function(value,key){\n\t\t\t\t\t\t\t$scope.collectionForm[key].$invalid = true;\n\t\t\t\t\t\t\t$scope.errorMessage[key] = value[0];\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//$scope.collection = angular.copy($scope.collectionInitial);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcollectionService.setFilterCount(filterItemCounter());\n\t\t\t});\n\t\t};\n\t\t\n\t\tvar isFormValid = function (angularForm){\n\t\t\t$log.debug('validateForm');\n\t\t\tvar formValid = true;\n\t\t     for (var field in angularForm) {\n\t\t         // look at each form input with a name attribute set\n\t\t         // checking if it is pristine and not a '$' special field\n\t\t         if (field[0] != '$') {\n\t\t\t\t \t// need to use formValid variable instead of formController.$valid because checkbox dropdown is not an input\n\t\t\t\t\t// and somehow formController didn't invalid if checkbox dropdown is invalid\n\t\t\t\t \tif (angularForm[field].$invalid) {\n\t\t\t\t\t\tformValid = false;\n\t\t\t\t\t\tfor(var error in angularForm[field].$error){\n\t\t\t\t\t\t\tif(error == 'required'){\n\t\t\t\t\t\t\t\t$scope.errorMessage[field] = 'This field is required';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif (angularForm[field].$pristine) {\n\t\t\t\t\t\tif (angular.isUndefined(angularForm[field].$viewValue)) { \n\t\t\t\t\t\t\tangularForm[field].$setViewValue(\"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tangularForm[field].$setViewValue(angularForm[field].$viewValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t         }\n\t\t     }\n\t\t\t return formValid;   \n\t\t};\n\t\t\n\t\t$scope.copyExistingCollection = function(){\n\t\t\t$scope.collection.collectionConfig = $scope.selectedExistingCollection;\n\t\t};\n\t\t\n\t\t$scope.setSelectedExistingCollection = function(selectedExistingCollection){\n\t\t\t$scope.selectedExistingCollection = selectedExistingCollection;\n\t\t};\n\t\t\n\t\t$scope.setSelectedFilterProperty = function(selectedFilterProperty){\n\t\t\t$scope.selectedFilterProperty = selectedFilterProperty;\n\t\t\t\n\t\t};\n\t\t\n\t\t$scope.filterCount = collectionService.getFilterCount;\n\t\t\n\t}\n]);\n"]}