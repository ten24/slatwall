{"version":3,"sources":["pages/ProductType/ProductType.js"],"names":["ProductType","productTypeRoute","useSelector","getProductTypeRoute","productTypeBase","state","configuration","filtering","id","useParams","history","useHistory","useGetProductType","request","setRequest","isFetching","isLoaded","params","urlTitle","makeRequest","Object","keys","data","length","to","listen","location","pathname","split","reverse","title","settings","productHTMLTitleString","showProducts","crumbs","breadcrumbs","map","crumb","productTypeName","filter","childProductTypes","onSelect","push","preFilter","productType_id","productTypeID","hide","className"],"mappings":"8LA+DeA,UAvDK,WAAO,IAAD,EAClBC,EAAmBC,YAAYC,KAC/BC,EAAkBF,aAAY,SAAAG,GAAK,OAAIA,EAAMC,cAAcC,UAAUH,mBAErEI,EAAOC,cAAPD,GACAE,EAAUC,cALQ,EAMMC,cANN,mBAMjBC,EANiB,KAMRC,EANQ,KAWxB,OAHKD,EAAQE,YAAeF,EAAQG,UAClCF,EAAW,2BAAKD,GAAN,IAAeE,YAAY,EAAMC,UAAU,EAAOC,OAAQ,CAAEC,SAAUV,GAAMW,aAAa,MAEhGN,EAAQE,YAAcF,EAAQG,UAAiD,IAArCI,OAAOC,KAAKR,EAAQS,MAAMC,OAChE,cAAC,IAAD,CAAUC,GAAG,UAEtBd,EAAQe,QAAO,SAAAC,GACb,IAAMR,EAAWQ,EAASC,SAASC,MAAM,KAAKC,UAAU,GACxDf,EAAW,2BAAKD,GAAN,IAAeS,KAAM,GAAIP,YAAY,EAAOC,UAAU,EAAOC,OAAQ,CAAEC,YAAYC,aAAa,QAI1G,eAAC,IAAD,WACGN,EAAQG,UAAY,cAAC,IAAD,CAAQc,MAAOjB,EAAQS,KAAKS,SAASC,yBACzDnB,EAAQG,UACP,cAAC,IAAD,CACEc,OAAQjB,EAAQS,KAAKW,cAAgBpB,EAAQS,KAAKQ,MAClDI,OAAQrB,EAAQS,KAAKa,YAClBC,KAAI,SAAAC,GACH,MAAO,CAAEP,MAAOO,EAAMC,gBAAiBpB,SAAUmB,EAAMnB,aAExDqB,QAAO,SAAAF,GAAK,OAAIA,EAAMnB,WAAad,KACnCmC,QAAO,SAAAF,GAAK,OAAIA,EAAMnB,WAAaV,KACnC4B,KAAI,SAAAC,GACH,OAAO,2BAAKA,GAAZ,IAAmBnB,SAAS,IAAD,OAAMjB,EAAN,YAA0BoC,EAAMnB,kBAIlE,UAAAL,EAAQS,KAAKkB,yBAAb,eAAgCjB,QAAS,GACxC,cAAC,IAAD,CACEkB,SAAU,SAAAvB,GACRR,EAAQgC,KAAR,WAAiBzC,EAAjB,YAAqCiB,KAEvCI,KAAMT,EAAQS,OAGjBT,EAAQS,KAAKW,cACZ,cAAC,IAAD,CAAaU,UAAW,CAAEC,eAAgB/B,EAAQS,KAAKuB,eAAiBC,KAAM,CAAC,eAA/E,SACE,qBAAKC,UAAU,2DAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+ClC,EAAQS,KAAKQ","file":"static/js/19.2393cfdc.chunk.js","sourcesContent":["import { Redirect, useHistory, useParams } from 'react-router-dom'\nimport { Layout, PageHeader, ProductTypeList } from '../../components'\nimport ListingPage from '../../components/Listing/Listing'\nimport { Helmet } from 'react-helmet'\nimport { useGetProductType } from '../../hooks/useAPI'\nimport { useSelector } from 'react-redux'\nimport { getProductTypeRoute } from '../../selectors/configurationSelectors'\n\nconst ProductType = () => {\n  const productTypeRoute = useSelector(getProductTypeRoute)\n  const productTypeBase = useSelector(state => state.configuration.filtering.productTypeBase)\n\n  let { id } = useParams()\n  const history = useHistory()\n  const [request, setRequest] = useGetProductType()\n\n  if (!request.isFetching && !request.isLoaded) {\n    setRequest({ ...request, isFetching: true, isLoaded: false, params: { urlTitle: id }, makeRequest: true })\n  }\n  if (!request.isFetching && request.isLoaded && Object.keys(request.data).length === 0) {\n    return <Redirect to=\"/404\" />\n  }\n  history.listen(location => {\n    const urlTitle = location.pathname.split('/').reverse()[0]\n    setRequest({ ...request, data: {}, isFetching: false, isLoaded: false, params: { urlTitle }, makeRequest: true })\n  })\n\n  return (\n    <Layout>\n      {request.isLoaded && <Helmet title={request.data.settings.productHTMLTitleString} />}\n      {request.isLoaded && (\n        <PageHeader\n          title={!request.data.showProducts && request.data.title}\n          crumbs={request.data.breadcrumbs\n            .map(crumb => {\n              return { title: crumb.productTypeName, urlTitle: crumb.urlTitle }\n            })\n            .filter(crumb => crumb.urlTitle !== productTypeBase)\n            .filter(crumb => crumb.urlTitle !== id)\n            .map(crumb => {\n              return { ...crumb, urlTitle: `/${productTypeRoute}/${crumb.urlTitle}` }\n            })}\n        />\n      )}\n      {request.data.childProductTypes?.length > 0 && (\n        <ProductTypeList\n          onSelect={urlTitle => {\n            history.push(`/${productTypeRoute}/${urlTitle}`)\n          }}\n          data={request.data}\n        />\n      )}\n      {request.data.showProducts && (\n        <ListingPage preFilter={{ productType_id: request.data.productTypeID }} hide={['productType']}>\n          <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n            <h5 className=\"h4 text-dark mb-0 font-accent\">{request.data.title}</h5>\n          </div>\n        </ListingPage>\n      )}\n    </Layout>\n  )\n}\n\nexport default ProductType\n"],"sourceRoot":""}