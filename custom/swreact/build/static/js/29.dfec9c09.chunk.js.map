{"version":3,"sources":["components/Account/AccountLogin/AccountLogin.js"],"names":["LoginForm","dispatch","useDispatch","match","useRouteMatch","t","useTranslation","loginSchema","Yup","shape","loginEmail","email","required","loginPassword","formik","useFormik","initialValues","validationSchema","onSubmit","values","login","className","to","path","handleSubmit","htmlFor","value","onChange","handleChange","autoComplete","type","id","errors","touched","AccountLogin"],"mappings":"qGAAA,4EAQMA,EAAY,WAChB,IAAMC,EAAWC,cACbC,EAAQC,cACJC,EAAMC,cAAND,EACFE,EAAcC,MAAaC,MAAM,CACrCC,WAAYF,MAAaG,MAAM,iBAAiBC,SAAS,YACzDC,cAAeL,MAAaI,SAAS,cAEjCE,EAASC,YAAU,CACvBC,cAAe,CACbN,WAAY,GACZG,cAAe,IAEjBI,iBAAkBV,EAClBW,SAAU,SAAAC,GACRlB,EAASmB,YAAMD,EAAOT,WAAYS,EAAON,mBAG7C,OACE,qBAAKQ,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,SAAyBhB,EAAE,8BAC3B,oBAAGgB,UAAU,+BAAb,oBACMhB,EAAE,+BADR,SAC2C,cAAC,IAAD,CAAMiB,GAAE,UAAKnB,EAAMoB,KAAX,kBAAR,SAA0ClB,EAAE,8BADvF,OAGA,uBAAMa,SAAUJ,EAAOU,aAAvB,UACE,sBAAKH,UAAU,aAAf,UACE,uBAAOI,QAAQ,aAAf,SAA6BpB,EAAE,4BAC/B,uBAAOqB,MAAOZ,EAAOK,OAAOT,WAAYiB,SAAUb,EAAOc,aAAcC,aAAa,QAAQR,UAAU,eAAeS,KAAK,QAAQC,GAAG,eACpIjB,EAAOkB,OAAOtB,YAAc,sBAAMW,UAAU,iBAAhB,SAAkCP,EAAOkB,OAAOtB,gBAE/E,sBAAKW,UAAU,aAAf,UACE,uBAAOI,QAAQ,gBAAf,SAAgCpB,EAAE,+BAClC,uBAAOqB,MAAOZ,EAAOK,OAAON,cAAec,SAAUb,EAAOc,aAAcC,aAAa,mBAAmBR,UAAU,eAAeS,KAAK,WAAWC,GAAG,kBACrJjB,EAAOkB,OAAOnB,eAAiBC,EAAOmB,QAAQpB,eAAiB,sBAAMQ,UAAU,iBAAhB,SAAkCP,EAAOkB,OAAOnB,mBAElH,qBAAKQ,UAAU,aAAf,SACE,cAAC,IAAD,CAAMC,GAAE,UAAKnB,EAAMoB,KAAX,mBAAkCF,UAAU,+BAApD,SACGhB,EAAE,wCAGP,oBAAIgB,UAAU,SACd,qBAAKA,UAAU,kBAAf,SACE,wBAAQA,UAAU,kBAAkBS,KAAK,SAAzC,SACGzB,EAAE,2CAoBJ6B,UAVM,WACnB,OACE,qBAAKb,UAAU,8BAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,cAACrB,EAAD","file":"static/js/29.dfec9c09.chunk.js","sourcesContent":["import { login } from '../../../actions/authActions'\nimport { useDispatch } from 'react-redux'\nimport { useFormik } from 'formik'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { useRouteMatch } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  let match = useRouteMatch()\n  const { t } = useTranslation()\n  const loginSchema = Yup.object().shape({\n    loginEmail: Yup.string().email('Invalid email').required('Required'),\n    loginPassword: Yup.string().required('Required'),\n  })\n  const formik = useFormik({\n    initialValues: {\n      loginEmail: '',\n      loginPassword: '',\n    },\n    validationSchema: loginSchema,\n    onSubmit: values => {\n      dispatch(login(values.loginEmail, values.loginPassword))\n    },\n  })\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"card box-shadow\">\n        <div className=\"card-body\">\n          <h2 className=\"h4 mb-1\">{t('frontend.account.sign_in')}</h2>\n          <p className=\"font-size-sm text-muted mb-4\">\n            {`${t('frontend.account.no_account')} `} <Link to={`${match.path}/createAccount`}>{t('frontend.account.request')}</Link>.\n          </p>\n          <form onSubmit={formik.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"loginEmail\">{t('frontend.account.email')}</label>\n              <input value={formik.values.loginEmail} onChange={formik.handleChange} autoComplete=\"email\" className=\"form-control\" type=\"email\" id=\"loginEmail\" />\n              {formik.errors.loginEmail && <span className=\"form-error-msg\">{formik.errors.loginEmail}</span>}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"loginPassword\">{t('frontend.account.password')}</label>\n              <input value={formik.values.loginPassword} onChange={formik.handleChange} autoComplete=\"current-password\" className=\"form-control\" type=\"password\" id=\"loginPassword\" />\n              {formik.errors.loginPassword && formik.touched.loginPassword && <span className=\"form-error-msg\">{formik.errors.loginPassword}</span>}\n            </div>\n            <div className=\"text-right\">\n              <Link to={`${match.path}/forgotPassword`} className=\"nav-link-inline font-size-sm\">\n                {t('frontend.account.forgot_password')}\n              </Link>\n            </div>\n            <hr className=\"mt-4\" />\n            <div className=\"text-right pt-4\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                {t('frontend.account.sign_in')}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst AccountLogin = () => {\n  return (\n    <div className=\"container py-4 py-lg-5 my-4\">\n      <div className=\"row d-flex justify-content-center\">\n        <LoginForm />\n      </div>\n    </div>\n  )\n}\n\nexport default AccountLogin\n"],"sourceRoot":""}