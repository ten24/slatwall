{"version":3,"sources":["assets/images/category-img-1.png","pages/ProductType/ProductType.js"],"names":["ProductTypeList","data","productsRoute","useSelector","getProductTypeProductListRoute","className","title","childProductTypes","map","index","productTypeID","imageFile","urlTitle","customImagePath","imageFileName","defaultImg","split","reverse","slice","join","length","to","customPath","src","alt","showProducts","ProductType","id","useParams","history","useHistory","useGetProductType","request","setRequest","isFetching","isLoaded","params","makeRequest","Object","keys","listen","location","pathname","Helmet","Listing","preFilter","productType_id","hide"],"mappings":"+KAAe,MAA0B,2C,sBCWnCA,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAgBC,YAAYC,KAElC,OACE,eAAC,IAAD,WAEE,qBAAKC,UAAU,uCAAf,SACE,sBAAKA,UAAU,2DAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,8CAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+CJ,EAAKK,OAAS,YAKnE,qBAAKD,UAAU,yBAAf,SAEE,qBAAKA,UAAU,WAAf,SAEGJ,EAAKM,mBACJN,EAAKM,kBAAkBC,KAAI,WAAmEC,GAAW,IAA3EC,EAA0E,EAA1EA,cAAeJ,EAA2D,EAA3DA,MAAOK,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,SAAUL,EAA+B,EAA/BA,kBACnEM,EAAkB,GAClBC,EAAgBC,EAQpB,MAPkB,KAAdJ,IACFG,EAAgBH,EAAUK,MAAM,KAAKC,UAAU,GAC/CJ,EAAkBF,EAAUK,MAAM,KAAKE,MAAM,GAAI,GAAGC,KAAK,KAAO,KAGlEP,EAAwC,IAA7BL,EAAkBa,OAAlB,WAAqClB,EAArC,YAAsDU,GAAaA,EAG5E,qBAAKP,UAAU,yBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,qCAAqCgB,GAAIT,EAAzD,SACE,cAAC,IAAD,CAASP,UAAU,gBAAgBiB,WAAYT,EAAiBU,IAAKT,EAAeU,IAAKlB,MAE3F,sBAAKD,UAAU,YAAf,UACE,oBAAIA,UAAU,KAAd,SACE,cAAC,IAAD,CAAMgB,GAAIT,EAAV,SAAqBN,MAEvB,oBAAID,UAAU,kCAAd,SACGE,EAAkBC,KAAI,WAAmDC,GAAW,IAA3DC,EAA0D,EAA1DA,cAAeJ,EAA2C,EAA3CA,MAAOM,EAAoC,EAApCA,SAG9C,OAFAA,EADkF,EAA1Ba,aACjC,WAAOvB,EAAP,YAAwBU,GAAaA,EAG1D,oBAAIP,UAAU,oDAAd,SACE,eAAC,IAAD,CAAMA,UAAU,iBAAiBgB,GAAIT,EAArC,UACE,mBAAGP,UAAU,qCACZC,MAHkEI,eAdtCA,cAiE9CgB,UA/BK,WAAO,IAAD,IAClBC,EAAOC,cAAPD,GACAE,EAAUC,cAFQ,EAGMC,cAHN,mBAGjBC,EAHiB,KAGRC,EAHQ,KAQxB,OAHKD,EAAQE,YAAeF,EAAQG,UAClCF,EAAW,2BAAKD,GAAN,IAAeE,YAAY,EAAMC,UAAU,EAAOC,OAAQ,CAAExB,SAAUe,GAAMU,aAAa,MAEhGL,EAAQE,YAAcF,EAAQG,UAAiD,IAArCG,OAAOC,KAAKP,EAAQ/B,MAAMmB,OAChE,cAAC,IAAD,CAAUC,GAAG,UAEtBQ,EAAQW,QAAO,SAAAC,GACb,IAAM7B,EAAW6B,EAASC,SAAS1B,MAAM,KAAKC,UAAU,GACxDgB,EAAW,2BAAKD,GAAN,IAAe/B,KAAM,GAAIiC,YAAY,EAAOC,UAAU,EAAOC,OAAQ,CAAExB,YAAYyB,aAAa,QAI1G,eAAC,IAAD,YACG,UAAAL,EAAQ/B,KAAKK,aAAb,eAAoBc,QAAS,GAAK,cAACuB,EAAA,EAAD,CAAQrC,MAAO0B,EAAQ/B,KAAKK,SAC9D,UAAA0B,EAAQ/B,KAAKM,yBAAb,eAAgCa,QAAS,GAAK,cAAC,EAAD,CAAiBnB,KAAM+B,EAAQ/B,OAC7E+B,EAAQ/B,KAAKwB,cACZ,cAACmB,EAAA,EAAD,CAAaC,UAAW,CAAEC,eAAgBd,EAAQ/B,KAAKS,eAAiBqC,KAAM,cAA9E,SACE,qBAAK1C,UAAU,2DAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+C2B,EAAQ/B,KAAKK","file":"static/js/20.059166cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/category-img-1.e94e468f.png\";","import { Link, Redirect, useHistory, useParams } from 'react-router-dom'\nimport { Layout, BreadCrumb, SWImage } from '../../components'\nimport ListingPage from '../../components/Listing/Listing'\n// import PageHeader from '../../components/PageHeader/PageHeader'\nimport { Helmet } from 'react-helmet'\n\nimport { useGetProductType } from '../../hooks/useAPI'\nimport defaultImg from '../../assets/images/category-img-1.png'\nimport { getProductTypeProductListRoute } from '../../selectors/configurationSelectors'\nimport { useSelector } from 'react-redux'\n\nconst ProductTypeList = ({ data }) => {\n  const productsRoute = useSelector(getProductTypeProductListRoute)\n\n  return (\n    <Layout>\n      {/* TODO: can be replaced with page-header? */}\n      <div className=\"page-title-overlap bg-lightgray pt-4\">\n        <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n          <div className=\"order-lg-2 mb-3 mb-lg-0 pt-lg-2\">\n            <BreadCrumb />\n          </div>\n          <div className=\"order-lg-1 pr-lg-4 text-center text-lg-left\">\n            <h1 className=\"h3 text-dark mb-0 font-accent\">{data.title || ''}</h1>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container pb-4 pb-sm-5\">\n        {/* <!--- Product Type grid ---> */}\n        <div className=\"row pt-5\">\n          {/* <!--- Product Type ---> */}\n          {data.childProductTypes &&\n            data.childProductTypes.map(({ productTypeID, title, imageFile, urlTitle, childProductTypes }, index) => {\n              let customImagePath = ''\n              let imageFileName = defaultImg\n              if (imageFile !== '') {\n                imageFileName = imageFile.split('/').reverse()[0]\n                customImagePath = imageFile.split('/').slice(0, -1).join('/') + '/'\n              }\n\n              urlTitle = childProductTypes.length === 0 ? `/${productsRoute}/${urlTitle}` : urlTitle\n\n              return (\n                <div className=\"col-md-4 col-sm-6 mb-3\" key={productTypeID}>\n                  <div className=\"card border-0\">\n                    <Link className=\"d-block overflow-hidden rounded-lg\" to={urlTitle}>\n                      <SWImage className=\"d-block w-100\" customPath={customImagePath} src={imageFileName} alt={title} />\n                    </Link>\n                    <div className=\"card-body\">\n                      <h2 className=\"h5\">\n                        <Link to={urlTitle}>{title}</Link>\n                      </h2>\n                      <ul className=\"list-unstyled font-size-sm mb-0\">\n                        {childProductTypes.map(({ productTypeID, title, urlTitle, showProducts }, index) => {\n                          urlTitle = showProducts ? `/${productsRoute}/${urlTitle}` : urlTitle\n\n                          return (\n                            <li className=\"d-flex align-items-center justify-content-between\" key={productTypeID}>\n                              <Link className=\"nav-link-style\" to={urlTitle}>\n                                <i className=\"far fa-chevron-circle-right pr-2\"></i>\n                                {title}\n                              </Link>\n                            </li>\n                          )\n                        })}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nconst ProductType = () => {\n  let { id } = useParams()\n  const history = useHistory()\n  const [request, setRequest] = useGetProductType()\n\n  if (!request.isFetching && !request.isLoaded) {\n    setRequest({ ...request, isFetching: true, isLoaded: false, params: { urlTitle: id }, makeRequest: true })\n  }\n  if (!request.isFetching && request.isLoaded && Object.keys(request.data).length === 0) {\n    return <Redirect to=\"/404\" />\n  }\n  history.listen(location => {\n    const urlTitle = location.pathname.split('/').reverse()[0]\n    setRequest({ ...request, data: {}, isFetching: false, isLoaded: false, params: { urlTitle }, makeRequest: true })\n  })\n\n  return (\n    <Layout>\n      {request.data.title?.length > 0 && <Helmet title={request.data.title} />}\n      {request.data.childProductTypes?.length > 0 && <ProductTypeList data={request.data} />}\n      {request.data.showProducts && (\n        <ListingPage preFilter={{ productType_id: request.data.productTypeID }} hide={'productType'}>\n          <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n            <h5 className=\"h4 text-dark mb-0 font-accent\">{request.data.title}</h5>\n          </div>\n        </ListingPage>\n      )}\n    </Layout>\n  )\n}\n\nexport default ProductType\n"],"sourceRoot":""}