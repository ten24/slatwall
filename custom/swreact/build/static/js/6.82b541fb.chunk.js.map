{"version":3,"sources":["hooks/index.js","pages/Manufacturer/Manufacturer.js"],"names":["Manufacturer","history","useHistory","loc","useLocation","useSelector","state","configuration","shopByManufacturer","gridSize","maxCount","countToDisplay","content","pathname","substring","brandRoute","getBrandRoute","useState","currentPage","setPage","title","customBody","useGetEntity","request","setRequest","useEffect","didCancel","isFetching","isLoaded","entity","params","makeRequest","sortedList","data","filter","element","brandFeatured","sort","a","b","brandName","start","end","className","onClick","event","preventDefault","target","getAttribute","push","dangerouslySetInnerHTML","__html","slice","map","brand","to","urlTitle","customPath","src","imageFile","alt","type","brandID","recordsCount","length","totalPages","Math","ceil"],"mappings":"oGAAA,uJ,+HC6FeA,UArFM,WACnB,IAAIC,EAAUC,cACVC,EAAMC,cAFe,EAGMC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,sBAAhEC,EAHiB,EAGjBA,SAAUC,EAHO,EAGPA,SACZC,EAA4B,EAAXF,EACjBG,EAAUP,aAAY,SAAAC,GAAK,OAAIA,EAAMM,QAAQT,EAAIU,SAASC,UAAU,OACpEC,EAAaV,YAAYW,KANN,EAOMC,mBAAS,GAPf,mBAOlBC,EAPkB,KAOLC,EAPK,OAQKP,GAAW,GAAjCQ,EARiB,EAQjBA,MAAOC,EARU,EAQVA,WARU,EASGC,cATH,mBASpBC,EAToB,KASXC,EATW,KAWzBC,qBAAU,WACR,IAAIC,GAAY,EAIhB,OAHKH,EAAQI,YAAeJ,EAAQK,UAAaF,GAC/CF,EAAW,2BAAKD,GAAN,IAAeI,YAAY,EAAMC,UAAU,EAAOC,OAAQ,QAASC,OAAQ,CAAE,SAAUpB,EAAU,eAAgB,GAAKqB,aAAa,KAExI,WACLL,GAAY,KAEb,CAACH,EAASC,EAAYd,IAEzB,IAAMsB,EAAU,sBACXT,EAAQU,KACRC,QAAO,SAAAC,GACN,OAAiC,IAA1BA,EAAQC,iBAEhBC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,UAAY,GAAK,MALtC,YAMXjB,EAAQU,KACRC,QAAO,SAAAC,GACN,OAAiC,IAA1BA,EAAQC,iBAEhBC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,UAAY,GAAK,OAEhDC,GAASvB,EAAc,GAAKP,EAC5B+B,EAAMD,EAAQ9B,EACpB,OACE,cAAC,IAAD,UACE,sBAAKgC,UAAU,eAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,2DAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,oBAAIA,UAAU,gCAAd,SAA+CvB,GAAS,WAI9D,sBAAKuB,UAAU,kDAAf,UACE,qBACEA,UAAU,eACVC,QAAS,SAAAC,GACPA,EAAMC,iBACFD,EAAME,OAAOC,aAAa,SAC5B/C,EAAQgD,KAAKJ,EAAME,OAAOC,aAAa,UAG3CE,wBAAyB,CACvBC,OAAQ9B,GAAc,MAGzBA,EACD,qBAAKsB,UAAU,eAAf,SACE,qBAAKA,UAAU,MAAf,SACGpB,EAAQK,UACPI,EAAWoB,MAAMX,EAAOC,GAAKW,KAAI,SAAAC,GAC/B,OACE,qBAAyBX,UAAU,+CAAnC,SACE,eAAC,IAAD,CAAMA,UAAU,sFAAsFY,GAAE,WAAMxC,EAAN,YAAoBuC,EAAME,UAAlI,UACE,qBAAKb,UAAU,mCAAf,SACE,cAAC,IAAD,CAASA,UAAU,oBAAoBc,WAAW,oCAAoCC,IAAKJ,EAAMK,UAAWC,IAAKN,EAAMd,UAAWqB,KAAK,YAEzI,oBAAIlB,UAAU,UAAd,SAAyBW,EAAMd,gBALzBc,EAAMQ,gBAY1B,qBAAKnB,UAAU,YAAf,SACE,cAAC,IAAD,CAAmBoB,aAAc/B,EAAWgC,OAAQ9C,YAAaA,EAAa+C,WAAYC,KAAKC,KAAKnC,EAAWgC,OAASrD,GAAiBQ,QAASA","file":"static/js/6.82b541fb.chunk.js","sourcesContent":["import useFormatCurrency from './useFormatCurrency'\nexport { useGetEntityByUrlTitle, useGetAccountCartsAndQuotes, useGetProductsByEntity, useGetSkuOptionDetails, useGetEntity, useGetEntityByID, useGetSku, useGetProductDetails, useGetBrand, useGetBrands, useGetProductList, useGetProducts, useGetAvailableShippingMethods, useGetAvailablePaymentMethods, useAddWishlistItem, useGetOrderDetails, useGetAllOrders, useAddOrderShippingAddress, useGetFavouriteProducts, useGetSkuList, useGetProductSkus, useGetProductAvailableSkuOptions, useGetProductSkuSelected, useGetProductImageGallery } from './useAPI'\nexport { useFormatDate, useFormatDateTime, useFormatTime } from './useFormatDate'\nexport { useRedirect, usePush } from './useRedirect'\nexport { useFormatCurrency }\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Layout, ListingPagination, SWImage } from '../../components'\nimport { useGetEntity } from '../../hooks'\nimport { Link } from 'react-router-dom'\nimport { getBrandRoute } from '../../selectors/configurationSelectors'\n\nconst Manufacturer = () => {\n  let history = useHistory()\n  let loc = useLocation()\n  const { gridSize, maxCount } = useSelector(state => state.configuration.shopByManufacturer)\n  const countToDisplay = gridSize * 4\n  const content = useSelector(state => state.content[loc.pathname.substring(1)])\n  const brandRoute = useSelector(getBrandRoute)\n  const [currentPage, setPage] = useState(1)\n  const { title, customBody } = content || {}\n  let [request, setRequest] = useGetEntity()\n\n  useEffect(() => {\n    let didCancel = false\n    if (!request.isFetching && !request.isLoaded && !didCancel) {\n      setRequest({ ...request, isFetching: true, isLoaded: false, entity: 'brand', params: { 'P:Show': maxCount, 'f:activeFlag': 1 }, makeRequest: true })\n    }\n    return () => {\n      didCancel = true\n    }\n  }, [request, setRequest, maxCount])\n\n  const sortedList = [\n    ...request.data\n      .filter(element => {\n        return element.brandFeatured === true\n      })\n      .sort((a, b) => (a.brandName > b.brandName ? 1 : -1)),\n    ...request.data\n      .filter(element => {\n        return element.brandFeatured !== true\n      })\n      .sort((a, b) => (a.brandName > b.brandName ? 1 : -1)),\n  ]\n  const start = (currentPage - 1) * countToDisplay\n  const end = start + countToDisplay\n  return (\n    <Layout>\n      <div className=\"bg-light p-0\">\n        <div className=\"page-title-overlap bg-lightgray pt-4\">\n          <div className=\"container d-lg-flex justify-content-between py-2 py-lg-3\">\n            <div className=\"order-lg-1 pr-lg-4 text-center\">\n              <h1 className=\"h3 text-dark mb-0 font-accent\">{title || ''}</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"container bg-light box-shadow-lg rounded-lg p-5\">\n          <div\n            className=\"content-body\"\n            onClick={event => {\n              event.preventDefault()\n              if (event.target.getAttribute('href')) {\n                history.push(event.target.getAttribute('href'))\n              }\n            }}\n            dangerouslySetInnerHTML={{\n              __html: customBody || '',\n            }}\n          />\n          {customBody}\n          <div className=\"pb-4 pb-sm-5\">\n            <div className=\"row\">\n              {request.isLoaded &&\n                sortedList.slice(start, end).map(brand => {\n                  return (\n                    <div key={brand.brandID} className=\"d-flex col-6 col-sm-4 col-md-3 col-lg-2 mb-4\">\n                      <Link className=\"card border-1 shadow-sm text-center d-flex flex-column rounded-lg hover-shadow-none\" to={`/${brandRoute}/${brand.urlTitle}`}>\n                        <div className=\"d-flex align-items-center flex-1\">\n                          <SWImage className=\"d-block w-100 p-2\" customPath=\"/custom/assets/images/brand/logo/\" src={brand.imageFile} alt={brand.brandName} type=\"brand\" />\n                        </div>\n                        <h2 className=\"h6 mx-1\">{brand.brandName}</h2>\n                      </Link>\n                    </div>\n                  )\n                })}\n            </div>\n          </div>\n          <div className=\"container\">\n            <ListingPagination recordsCount={sortedList.length} currentPage={currentPage} totalPages={Math.ceil(sortedList.length / countToDisplay)} setPage={setPage} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Manufacturer\n"],"sourceRoot":""}