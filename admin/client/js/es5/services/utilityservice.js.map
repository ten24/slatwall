{"version":3,"names":[],"mappings":"","sources":["services/utilityservice.js"],"sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin').factory('utilityService', [\n    function () {\n        //declare public and private variables\n        //Define our contexts and validation property enums.\n        //declare service we are returning\n        var utilityService = {\n            createID: function (count) {\n                var count = count || 26;\n                var text = \"\";\n                var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n                for (var i = 0; i < count; i++)\n                    text += possible.charAt(Math.floor(Math.random() * possible.length));\n                return text;\n            },\n            //list functions\n            listFind: function (list, value, delimiter) {\n                if (angular.isUndefined(delimiter)) {\n                    delimiter = ',';\n                }\n                var splitString = list.split(delimiter);\n                var stringFound = -1;\n                for (var i = 0; i < splitString.length; i++) {\n                    var stringPart = splitString[i];\n                    if (stringPart != value)\n                        continue;\n                    stringFound = i;\n                    break;\n                }\n            },\n            listLen: function (list, delimiter) {\n                if (angular.isUndefined(delimiter)) {\n                    delimiter = ',';\n                }\n                var splitString = list.split(delimiter);\n                return splitString.length;\n            },\n            //To use this sorter pass in arguments first by object to sort\n            //Then an array where the first index is the first string to sort by\n            //And the second index is another array containing the second string to sort by as well as ascending vs descending\n            //Example: arraySorter(array, [\"type\",[\"name\",\"asc\"]])\n            arraySorter: function (objArray, properties /*, primers*/) {\n                var primers = arguments[2] || {};\n                properties = properties.map(function (prop) {\n                    if (!(prop instanceof Array)) {\n                        prop = [prop, 'asc'];\n                    }\n                    if (prop[1].toLowerCase() == 'desc') {\n                        prop[1] = -1;\n                    }\n                    else {\n                        prop[1] = 1;\n                    }\n                    return prop;\n                });\n                function valueCmp(x, y) {\n                    return x > y ? 1 : x < y ? -1 : 0;\n                }\n                function arrayCmp(a, b) {\n                    var arr1 = [], arr2 = [];\n                    properties.forEach(function (prop) {\n                        var aValue = a[prop[0]], bValue = b[prop[0]];\n                        if (typeof primers[prop[0]] != 'undefined') {\n                            aValue = primers[prop[0]](aValue);\n                            bValue = primers[prop[0]](bValue);\n                        }\n                        arr1.push(prop[1] * valueCmp(aValue, bValue));\n                        arr2.push(prop[1] * valueCmp(bValue, aValue));\n                    });\n                    return arr1 < arr2 ? -1 : 1;\n                }\n                objArray.sort(function (a, b) {\n                    return arrayCmp(a, b);\n                });\n                return objArray;\n            }\n        };\n        return utilityService;\n    }\n]);\n\n//# sourceMappingURL=../services/utilityservice.js.map"],"file":"services/utilityservice.js","sourceRoot":"/source/"}