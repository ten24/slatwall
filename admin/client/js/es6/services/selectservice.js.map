{"version":3,"sources":["services/selectservice.ts"],"names":[],"mappings":"AAAA,AACA,wGADwG;AACxG,YAAY,CAAC;AACb,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAC9B,OAAO,CAAC,eAAe,EAAC;IACxB;QAEC,sCAAsC;QAEtC,AAEA,2EAF2E;QACrE,mDAAmD;YACrD,UAAU,GAAG,EAAE,CAAC;QACpB,AACA,kCADkC;YAC9B,aAAa,GAAG;YACnB,YAAY,EAAE,UAAS,WAAW,EAAC,SAAS;gBAC/B,EAAE,CAAA,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA,CAAC;oBAC7C,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;gBACjC,CAAC;gBACD,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,CAAC;SACV,CAAC;QAEF,MAAM,CAAC,aAAa,CAAC;IACtB,CAAC;CACD,CAAC,CAAC","file":"services/selectservice.js","sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin')\n.factory('selectService',[ \n\tfunction(\n\t){\n\t\t//declare public and private variables\n\t\t\n\t\t//selections have a unique identifier for the instance they are related to \n        //_selection{\"selectionid\":[{\"entityID\":entityid}]}\n\t\tvar _selection = {};\n\t\t//declare service we are returning\n\t\tvar selectService = { \n\t\t\taddSelection: function(selectionid,selection){\n                if(angular.isUndefined(_selection[selectionid])){\n                    _selection[selectionid] = [];    \n                }\n                _selection[selectionid].push(selection);\n            },\n\t\t};\n\t\t\n\t\treturn selectService;\n\t}\n]);\n"],"sourceRoot":"/source/"}