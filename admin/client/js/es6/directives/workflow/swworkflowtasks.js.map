{"version":3,"sources":["directives/workflow/swworkflowtasks.ts"],"names":["logger"],"mappings":"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","file":"directives/workflow/swworkflowtasks.js","sourceRoot":"/Users/david/Sites/Slatwall/","sourcesContent":["/**\n * Handles adding, editing, and deleting Workflows Tasks.\n */\nangular.module('slatwalladmin')\n.directive('swWorkflowTasks', [\n'$log',\n'$location',\n'$slatwall',\n'metadataService',\n'collectionService',\n'workflowPartialsPath',\n\tfunction(\n\t$log,\n\t$location,\n\t$slatwall,\n\tmetadataService,\n\tcollectionService,\n\tworkflowPartialsPath){\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:{\n\t\t\t\tworkflow:\"=\"\n\t\t\t},\n\t\t\ttemplateUrl:workflowPartialsPath+\"workflowtasks.html\",\n\t\t\tlink: function(scope, element,attrs){\n\t\t\t\tscope.workflowPartialsPath = workflowPartialsPath;\n\t\t\t\tscope.propertiesList = {};\n\t\t\t\t\n\t\t\t\tfunction logger(context, message){\n\t\t\t\t\t$log.debug(\"SwWorkflowTasks :\" + context + \" : \" + message);\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Sets workflowTasks on the scope by populating with $$getWorkflowTasks()\n\t\t\t\t */\n\t\t\t\tscope.getWorkflowTasks = function(){\n\t\t\t\t\tlogger(\"getWorkflowTasks\", \"Retrieving items\");\n\t\t\t\t\tlogger(\"getWorkflowTasks\", \"Workflow Tasks\");\n\t\t\t\t\t$log.debug(scope.workflowTasks);\n\t\t\t\t\t\n\t\t\t\t\t/***\n\t\t\t\t\t   Note:\n\t\t\t\t\t   This conditional is checking whether or not we need to be retrieving to\n\t\t\t\t\t   items all over again. If we already have them, we won't make another\n\t\t\t\t\t   trip to the database. \n\t\t\t\t\t   \n\t\t\t\t\t ***/\n\t\t\t\t\tif(angular.isUndefined(scope.workflow.data.workflowTasks)){\n\t\t\t\t\t\tvar workflowTasksPromise = scope.workflow.$$getWorkflowTasks();\n\t\t\t\t\t\tworkflowTasksPromise.then(function(){\n\t\t\t\t\t\t\tscope.workflowTasks = scope.workflow.data.workflowTasks;\n\t\t\t\t\t\t});\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlogger(\"getWorkflowTasks\", \"Retrieving cached Items\");\n\t\t\t\t\t\tscope.workflowTasks = scope.workflow.data.workflowTasks;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif(angular.isUndefined(scope.workflow.data.workflowTasks)){\n\t\t\t\t\t\t//Reset the workflowTasks.\n\t\t\t\t\t\tlogger(\"getWorkflowTasks\",\"workflowTasks is undefined.\");\n\t\t\t\t\t\tscope.workflow.data.workflowTasks = [];\n\t\t\t\t\t\tscope.workflowTasks = scope.workflow.data.workflowTasks;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\tscope.getWorkflowTasks();//call tasks\n\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Sets the editing state to show/hide the edit screen.\n\t\t\t\t */\n\t\t\t\tscope.setHidden = function(task){\n\t\t\t\t\tif(!angular.isObject(task) || angular.isUndefined(task.hidden)){\n\t\t\t\t\t\ttask.hidden=false;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlogger(\"setHidden()\", \"Setting Hide Value To \" + !task.hidden);\n\t\t\t\t\t\ttask.hidden = !task.hidden;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Add a workflow task and logs the result.\n\t\t\t\t */\n\t\t\t\tscope.addWorkflowTask = function(){ \n\t\t\t\t\tvar newWorkflowTask = scope.workflow.$$addWorkflowTask();\n\t\t\t\t\tlogger(\"var newWorkflowTask\", newWorkflowTask);\n\t\t\t\t\tscope.selectWorkflowTask(newWorkflowTask);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t   /**\n\t\t\t\t * Watches the select for changes.\n\t\t\t\t */\n\t\t\t\tscope.$watch('workflowTasks.selectedTask.data.workflow.data.workflowObject',function(newValue, oldValue){\n\t\t\t\t\tlogger(\"scope.$watch\", \"Change Detected \" + newValue + \" from \" + oldValue)\n\t\t\t\t\tif((newValue !== oldValue && angular.isDefined(scope.workflowTasks.selectedTask)) ){\n\t\t\t\t\t\tlogger(\"scope.$watch\", \"Change to \" + newValue)\n\t\t\t\t\t\tscope.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityAlias = newValue;\n\t\t\t\t\t\tscope.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityName = newValue;\n\t\t\t\t\t}\t\n\t\t\t\t});\n\t\t\t  \n\t\t\t  /**\n                 * --------------------------------------------------------------------------------------------------------\n                 * Saves the workflow task by calling the objects $$save method.\n                 * @param task\n                 * --------------------------------------------------------------------------------------------------------\n                 */\n                scope.saveWorkflowTask = function (task, context) {\n                \t\tscope.done = true;\n                \t    $log.debug(\"Context: \" + context);\n                    $log.debug(\"saving task\");\n                    $log.debug(scope.workflowTasks.selectedTask);\n                    var savePromise = scope.workflowTasks.selectedTask.$$save();\n                    savePromise.then(function(){\n                    \tif (context === 'add'){\n            \t\t\t\tlogger(\"SaveWorkflowTask\", \"Save and New\");\n            \t\t\t\tscope.addWorkflowTask();\n            \t\t\t\t//scope.setHidden(scope.workflowTasks.selectedTask);\n            \t\t\t\tscope.finished = true;\n                    }else if (context == \"finish\"){\n                \t\t\tscope.finished = false;\n                \t\t}\n                    });\n                    scope.setHidden(scope.workflowTasks.selectedTask);\n                }//<--end save*/\n\t\t\t\t \n                /**\n\t\t\t\t * Select a workflow task.\n\t\t\t\t */\n\t\t\t\tscope.selectWorkflowTask = function(workflowTask){\n\t\t\t\t\tscope.done = false;\n\t\t\t\t\tlogger(\"selectWorkflowTask\", \"selecting a workflow task\");\n\t\t\t\t\t$log.debug(workflowTask);\n\t\t\t\t\tscope.finished = false;\n\t\t\t\t\tscope.workflowTasks.selectedTask = undefined;\n\t\t\t\t\t\n\t\t\t\t\tvar filterPropertiesPromise = $slatwall.getFilterPropertiesByBaseEntityName(scope.workflow.data.workflowObject);\n\t\t\t\t\tfilterPropertiesPromise.then(function(value){\n\t\t\t\t\t\tscope.filterPropertiesList = {\n\t\t\t\t\t\t\tbaseEntityName:scope.workflow.data.workflowObject,\n\t\t\t\t\t\t\tbaseEntityAlias:\"_\"+ scope.workflow.data.workflowObject\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmetadataService.setPropertiesList(value,scope.workflow.data.workflowObject);\n\t\t\t\t\t\tscope.filterPropertiesList[scope.workflow.data.workflowObject] = metadataService.getPropertiesListByBaseEntityAlias(scope.workflow.data.workflowObject);\n\t\t\t\t\t\tmetadataService.formatPropertiesList(scope.filterPropertiesList[scope.workflow.data.workflowObject],scope.workflow.data.workflowObject);\n\t\t\t\t\t\tscope.workflowTasks.selectedTask = workflowTask;\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/* Does a delete of the property using delete */\n\t\t\t\tscope.softRemoveTask = function(workflowTask){\n\t\t\t\t\tlogger(\"SoftRemoveTask\", \"calling delete\");\n\t\t\t\t\tif(workflowTask === scope.workflowTasks.selectedTask){\n\t\t\t\t\t\tdelete scope.workflowTasks.selectedTask;\n\t\t\t\t\t}\n\t\t\t\t\tscope.removeIndexFromTasks(workflowTask.$$index);\n\t\t\t\t\tscope.reindexTaskList();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/* Does an API call delete using $$delete */\n\t\t\t\tscope.hardRemoveTask = function(workflowTask){\n\t\t\t\t\tlogger(\"HardRemoveTask\", \"$$delete\");\n\t\t\t\t\tvar deletePromise = workflowTask.$$delete();\n    \t\t\t\t\tdeletePromise.then(function(){\n    \t\t\t\t\t\tif(workflowTask === scope.workflowTasks.selectedTask){\n    \t\t\t\t\t\t\tdelete scope.workflowTasks.selectedTask;\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\tscope.removeIndexFromTasks(workflowTask.$$index);\n    \t\t\t\t\t\tscope.reindexTaskList();\n    \t\t\t\t\t});\n\t\t\t\t};\n                /*Override the delete entity in the confirmation controller*/\n\t\t\t\tscope.deleteEntity = function(entity){\n\t\t\t\t\tscope.hardRemoveTask(entity);\n\t\t\t\t}\n\t\t\t\t/* Re-indexes the task list */\n\t\t\t\tscope.reindexTaskList = function(){\n\t\t\t\t\tfor(var i in scope.workflowTasks){\n\t\t\t\t\t\tlogger(\"ReIndexing the list\", i);\n\t\t\t\t\t\tscope.workflowTasks[i].$$index = i;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/* Removes the tasks index from the tasks array */\n\t\t\t\tscope.removeIndexFromTasks = function(index){\n\t\t\t\t\tlogger(\"RemoveIndexFromTasks\", index);\n\t\t\t\t\tscope.workflowTasks.splice(index, 1);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t}\n\t\t}; \n\t}\n]);\n\t"]}