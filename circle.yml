machine:
  hosts:
    slatwall-qa: 127.0.0.1
  services:
    - docker

dependencies:
  override:
    # Setup git user for deployment
    - git config --global user.email "info@slatwallcommerce.com"
    - git config --global user.name "Big Boy (Slatwall Robot)"
    - git config --global push.default current

    # Install node modules for building JS
    - npm install -g webpack gulp less

    - npm install gulp gulp-inject@3 gulp-chmod gulp-util run-sequence webpack force-case-sensitivity-webpack-plugin strip-loader ng-annotate-webpack-plugin tsify typescript ts-loader md5 blueimp-md5

    # Install awscli so that we can push builds to S3
    - pip install awscli
    # Install se-interpreter (Interperates SeleniumBuilder json for SauceLabs using nodeJS)
    - cd meta/tests/integration/se-interpreter && npm install

    # Minify JS
     # generate typings
    - cd org/Hibachi/client && gulp gen-ts-refs && webpack --config webpack-frontend-production.config.js -p --display-error-details
    - cd admin/client && gulp gen-ts-refs
    # Minify JS
    - cd admin/client && webpack --config webpack-production.config.js -p --display-error-details 
    # Minify 
    - cd admin/client/css && lessc main.less main.css
    # Update docker-compose
    - curl -L https://github.com/docker/compose/releases/download/1.4.1/docker-compose-`uname -s`-`uname -m` > docker-compose
    - chmod +x docker-compose
    - sudo mv docker-compose /usr/local/bin

    # Install Sauce Labs Connector
    - wget https://saucelabs.com/downloads/sc-latest-linux.tar.gz
    - tar -xzf sc-latest-linux.tar.gz

test:
  pre:
    # Fire Up Slatwall Containers, Need to do in parallel so that it starts up on all VMs
    - docker-compose -f meta/docker/slatwall-ci/docker-compose-circleci.yml up -d

    # Create xml output directory for testresults
    - sudo mkdir -p meta/tests/testresults/xml/integration
    - sudo chmod -R 777 meta/tests/testresults

    # Connect ot SauceLabs for Integration Testing
    - if [[ ! -z $SAUCE_USERNAME ]] ; then cd sc-*-linux && ./bin/sc --user $SAUCE_USERNAME --api-key $SAUCE_ACCESS_KEY --pidfile sc.pid --readyfile ~/sauce_is_ready --tunnel-identifier $CIRCLE_BUILD_NUM; fi:
        background: true

    # Wait for Saucelabs connection
    - if [[ ! -z $SAUCE_USERNAME ]] ; then while [ ! -e ~/sauce_is_ready ]; do sleep 1; done; fi

    # Run Sauce Labs Integration Setup Tests
    - if [[ ! -z $SAUCE_USERNAME ]] ; then node meta/tests/integration/se-interpreter/interpreter.js --parallel=1 --listener=meta/tests/integration/se-interpreter/utils/se_sauce_junit_listener.js --listener-path=meta/tests/testresults/xml/integration meta/tests/integration/setup_config.json --silent; fi

    # Run Build
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' slatwallci_slatwallweb_1)" -- ant -f /var/www/meta/tests/build.xml buildDocsAndTests
  override:
    # Run Sauce Labs Integration Admin Tests, 2 side by side at a time
    - if [[ ! -z $SAUCE_USERNAME ]] ; then node meta/tests/integration/se-interpreter/interpreter.js --parallel=5 --listener=meta/tests/integration/se-interpreter/utils/se_sauce_junit_listener.js --listener-path=meta/tests/testresults/xml/integration meta/tests/integration/admin_config.json --silent; fi

    # Run Unit Tests
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' slatwallci_slatwallweb_1)" -- ant -f /var/www/meta/tests/build.xml runUnitTests
  post:
    # Kill the Sauce Labs tunnel
    - if [[ ! -z $SAUCE_USERNAME ]] ; then cd sc-*-linux && kill $(cat sc.pid); fi
deployment:

  # As long as this build passed, we can commit JS builds, Version #, and do downstream merging when necessary
  release:
    branch: [master, hotfix, develop, /develop-.*/]
    commands:
      - meta/ci/version_merge.sh
